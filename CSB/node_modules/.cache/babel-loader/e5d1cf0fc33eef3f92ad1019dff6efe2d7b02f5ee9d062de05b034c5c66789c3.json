{"ast":null,"code":"// import React, { useState } from 'react';\n// import { TextField, Select, MenuItem, FormControl, InputLabel, Button, Grid, Typography } from '@mui/material';\n// import { DemoContainer } from '@mui/x-date-pickers/internals/demo';\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\n// import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\n// import { DatePicker } from '@mui/x-date-pickers/DatePicker';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// const ManageExamRoom = () => {\n//     const [option, setOption] = useState('');\n//     const [room, setRoom] = useState('');\n//     const [numberOfFields, setNumberOfFields] = useState(0);\n//     const [numberOfFields2, setNumberOfFields2] = useState(0);\n//     const [dayOn1, setDayOn1] = useState(null);\n//     const [timeOn1, setTimeOn1] = useState([]);\n//     const [invalidTimes, setInvalidTimes] = useState([]);\n\n//     const handleInputChange = (event) => {\n//         setNumberOfFields(parseInt(event.target.value) || 0);\n//     };\n\n//     const handleInputChange2 = (event) => {\n//         setNumberOfFields2(parseInt(event.target.value) || 0);\n//     };\n\n//     const [teacherValues, setTeacherValues] = useState(Array(numberOfFields).fill(''));\n//     const [positionValues, setPositionValues] = useState(Array(numberOfFields).fill(''));\n//     const [ProjectValues, setProjectValues] = useState(Array(numberOfFields2).fill(''));\n\n//     const handleSelectTeacher = (index) => (event) => {\n//         const newTeacherValues = [...teacherValues];\n//         newTeacherValues[index] = event.target.value;\n//         setTeacherValues(newTeacherValues);\n//     };\n\n//     const handleSelectPosition = (index) => (event) => {\n//         const newPositionValues = [...positionValues];\n//         newPositionValues[index] = event.target.value;\n//         setPositionValues(newPositionValues);\n//     };\n\n//     const handleSelectProject = (index) => (event) => {\n//         const newProjectValues = [...ProjectValues];\n//         newProjectValues[index] = event.target.value;\n//         setProjectValues(newProjectValues);\n//     };\n\n//     const handleSelectTime = (index) => (event) => {\n//         const newTime = event.target.value;\n//         const newTimeOn1 = [...timeOn1];\n//         newTimeOn1[index] = newTime;\n\n//         // Check for duplicates\n//         const timeCounts = newTimeOn1.reduce((acc, time) => {\n//             acc[time] = (acc[time] || 0) + 1;\n//             return acc;\n//         }, {});\n//         const newInvalidTimes = newTimeOn1.map((time, i) => timeCounts[time] > 1 && i !== newTimeOn1.indexOf(time));\n\n//         setTimeOn1(newTimeOn1);\n//         setInvalidTimes(newInvalidTimes);\n//     };\n\n//     const getFilteredTeachers = (index) => {\n//         const selectedTeachers = teacherValues.filter((_, i) => i !== index);\n//         return Teacher.filter((teacher) => !selectedTeachers.includes(teacher.ID));\n//     };\n\n//     const getFilteredPositions = (index) => {\n//         const selectedPositions = positionValues.filter((_, i) => i !== index);\n//         return positionData.filter((position) => !selectedPositions.includes(position.ID) || position.ID !== 'No1');\n//     };\n\n//     const getFilteredProject = (index) => {\n//         const selectedProject = ProjectValues.filter((_, i) => i !== index);\n//         return ProjectData.filter((ProjectData) => !selectedProject.includes(ProjectData.ID));\n//     };\n\n//     const testData = [\n//         { ID: 'CSB01', Name: 'สอบหัวข้อ' },\n//         { ID: 'CSB02', Name: 'สอบก้าวหน้า' },\n//         { ID: 'CSB03', Name: 'สอบป้องกัน' }\n//     ];\n\n//     const roomData = [\n//         { ID: '78-618' },\n//         { ID: '78-618/2' },\n//         { ID: '78-619' },\n//         { ID: '78-621' },\n//         { ID: '78-617' }\n//     ];\n\n//     const Teacher = [\n//         { ID: 'NLP', Name: 'ลือพล ไม่น่ารักเลย' },\n//         { ID: 'SWK', Name: 'สุวัชชัย ตัวตึง' },\n//         { ID: 'KAB', Name: 'คัณฑารัตน์ สุดละเอียด' },\n//         { ID: 'CRL', Name: 'เฉียบวุฒิ สุดจ้าบ' },\n//         { ID: 'ARN', Name: 'เอิญ ไม่ใจดี' },\n//         { ID: 'TNA', Name: 'ธณาภัทร ใจร้าย' },\n//         { ID: 'BLP', Name: 'เบญจพร ร้ายกาจ' },\n//         { ID: 'NAT', Name: 'ณัฐวุฒิ ช่วยด้วย' },\n//         { ID: 'KOB', Name: 'กอบเกียรติ อิหยังวะ' },\n//         { ID: 'ANW', Name: 'อนุสรณ์ หนีไป' }\n//     ];\n\n//     const positionData = [\n//         { ID: 'No1', Name: 'ประธาน' },\n//         { ID: 'No2', Name: 'กรรมการ' }\n//     ];\n\n//     const ProjectData = [\n//         { ID: 'SP1-01', Name: 'การตรวจสอบจบ' },\n//         { ID: 'SP1-02', Name: 'การยื่นสอบปริญญานิพนจ์' },\n//         { ID: 'SP1-03', Name: 'โมเดลจำลองอะตอม' },\n//         { ID: 'SP1-04', Name: 'AIจับมนุษย์' },\n//         { ID: 'SP1-05', Name: 'โปรแกรมปลูกต้นไม้' },\n//         { ID: 'SP1-06', Name: 'โปรแกรมออกแบบการนำเสนอ' },\n//         { ID: 'SP1-07', Name: 'โปรแกรมคำนวณพื้นที่' },\n//         { ID: 'SP1-08', Name: 'การจัดการการสอบสำหรับ CSB' },\n//         { ID: 'SP1-09', Name: 'โปรแกรมจองตั๋วรถไฟ' },\n//         { ID: 'SP1-10', Name: 'เกมเอาตัวรอดในCS' }\n//     ];\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\n//                             <Grid container spacing={2}>\n//                                 {/* Line 1: Select fields for option, room, and day */}\n//                                 <Grid item xs={12}>\n//                                     <Typography sx={{ marginLeft: 110 }}>\n//                                         <h1>จัดห้องสอบ</h1>\n//                                     </Typography>\n//                                     <Typography sx={{ marginLeft: 25, marginTop: 5 }} fontSize={'20px'}>\n//                                         รหัสการสอบ\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;\n//                                         ห้องสอบ\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         วันที่สอบ\n//                                     </Typography>\n//                                     <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\n//                                         <InputLabel id=\"option-label\">เลือกการสอบ</InputLabel>\n//                                         <Select\n//                                             label=\"รหัสการสอบ\"\n//                                             id=\"option\"\n//                                             value={option}\n//                                             onChange={(e) => setOption(e.target.value)}\n//                                             sx={{ minWidth: 300 }}\n//                                         >\n//                                             {testData.map((testData) => (\n//                                                 <MenuItem key={testData.ID} value={testData.ID}>\n//                                                     {testData.ID + ' : ' + testData.Name}\n//                                                 </MenuItem>\n//                                             ))}\n//                                         </Select>\n//                                     </FormControl>\n//                                     <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\n//                                         <InputLabel id=\"room-label\">ห้องสอบ</InputLabel>\n//                                         <Select\n//                                             label=\"ห้องสอบ\"\n//                                             id=\"room\"\n//                                             value={room}\n//                                             onChange={(e) => setRoom(e.target.value)}\n//                                             sx={{ minWidth: 300 }}\n//                                         >\n//                                             {roomData.map((roomData) => (\n//                                                 <MenuItem key={roomData.ID} value={roomData.ID}>\n//                                                     {roomData.ID}\n//                                                 </MenuItem>\n//                                             ))}\n//                                         </Select>\n//                                     </FormControl>\n//                                     <FormControl sx={{ ml: 25, minWidth: 120 }}>\n//                                         <LocalizationProvider dateAdapter={AdapterDayjs}>\n//                                             <DemoContainer components={['DatePicker']}>\n//                                                 <DatePicker\n//                                                     label=\"วันที่สอบ\"\n//                                                     value={dayOn1}\n//                                                     onChange={(newValue) => setDayOn1(newValue)}\n//                                                 />\n//                                             </DemoContainer>\n//                                         </LocalizationProvider>\n//                                     </FormControl>\n//                                 </Grid>\n//                                 {/* Line 2: Text field for number of fields */}\n//                                 <Grid item xs={12}>\n//                                     <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\n//                                         จำนวนกรรมการสอบ\n//                                     </Typography>\n//                                     <TextField\n//                                         label=\"จำนวนกรรมการสอบ\"\n//                                         type=\"number\"\n//                                         value={numberOfFields}\n//                                         onChange={handleInputChange}\n//                                         sx={{ minWidth: 300, ml: 25, mt: 1 }}\n//                                     />\n//                                 </Grid>\n//                                 {/* Line 3: Show select fields based on the input number */}\n//                                 {Array.from({ length: numberOfFields }).map((_, index) => (\n//                                     <Grid item xs={12} key={index}>\n//                                         <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\n//                                             รายชื่อกรรมการสอบ\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;\n//                                             ตำแหน่ง\n//                                         </Typography>\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\n//                                             <InputLabel id={`id-label-${index}`}>รายชื่อกรรมการสอบ</InputLabel>\n//                                             <Select\n//                                                 label=\"รายชื่อกรรมการสอบ\"\n//                                                 id={`id-${index}`}\n//                                                 sx={{ minWidth: 300 }}\n//                                                 value={teacherValues[index]}\n//                                                 onChange={handleSelectTeacher(index)}\n//                                             >\n//                                                 {getFilteredTeachers(index).map((teacher) => (\n//                                                     <MenuItem key={teacher.ID} value={teacher.ID}>\n//                                                         {teacher.ID + ' ' + teacher.Name}\n//                                                     </MenuItem>\n//                                                 ))}\n//                                             </Select>\n//                                         </FormControl>\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\n//                                             <InputLabel id={`name-label-${index}`}>ตำแหน่ง</InputLabel>\n//                                             <Select\n//                                                 label=\"ตำแหน่ง\"\n//                                                 id={`name-${index}`}\n//                                                 sx={{ minWidth: 300 }}\n//                                                 value={positionValues[index]}\n//                                                 onChange={handleSelectPosition(index)}\n//                                             >\n//                                                 {getFilteredPositions(index).map((positionData) => (\n//                                                     <MenuItem key={positionData.ID} value={positionData.ID}>\n//                                                         {positionData.Name}\n//                                                     </MenuItem>\n//                                                 ))}\n//                                             </Select>\n//                                         </FormControl>\n//                                     </Grid>\n//                                 ))}\n\n//                                 <Grid item xs={12}>\n//                                     <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\n//                                         จำนวนโครงงานที่จะสอบ\n//                                     </Typography>\n//                                     <TextField\n//                                         label=\"จำนวนโครงงานที่จะสอบ\"\n//                                         type=\"number\"\n//                                         value={numberOfFields2}\n//                                         onChange={handleInputChange2}\n//                                         sx={{ minWidth: 300, ml: 25, mt: 1 }}\n//                                     />\n//                                 </Grid>\n//                                 {/* Line 3: Show select fields based on the input number */}\n//                                 {Array.from({ length: numberOfFields2 }).map((_, index) => (\n//                                     <Grid item xs={12} key={index}>\n//                                         <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\n//                                             รายชื่อโครงงาน\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             เวลาสอบ\n//                                         </Typography>\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\n//                                             <InputLabel id={`id-label-${index}`}>รายชื่อโครงงาน</InputLabel>\n//                                             <Select\n//                                                 label=\"รายชื่อโครงงาน\"\n//                                                 id={`id-${index}`}\n//                                                 sx={{ minWidth: 300 }}\n//                                                 value={ProjectValues[index]}\n//                                                 onChange={handleSelectProject(index)}\n//                                             >\n//                                                 {getFilteredProject(index).map((ProjectData) => (\n//                                                     <MenuItem key={ProjectData.ID} value={ProjectData.ID}>\n//                                                         {ProjectData.ID + ' ' + ProjectData.Name}\n//                                                     </MenuItem>\n//                                                 ))}\n//                                             </Select>\n//                                         </FormControl>\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\n//                                             <TextField\n//                                                 label=\"เวลาสอบ\"\n//                                                 id={`time-${index}`}\n//                                                 type=\"time\"\n//                                                 value={timeOn1[index] || ''}\n//                                                 onChange={handleSelectTime(index)}\n//                                                 InputLabelProps={{\n//                                                     shrink: true\n//                                                 }}\n//                                                 sx={{\n//                                                     minWidth: 300,\n//                                                     border: invalidTimes[index] ? '3px solid red' : '1px solid #ccc'\n//                                                 }}\n//                                             />\n//                                         </FormControl>\n//                                     </Grid>\n//                                 ))}\n//                                 <Grid item xs={12} sx={{ textAlign: 'center' }}>\n//                                     <Button variant=\"contained\" onClick={'#'}>\n//                                         Save\n//                                     </Button>\n//                                 </Grid>\n//                             </Grid>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard>\n//     );\n// };\n\n// export default ManageExamRoom;","map":{"version":3,"names":[],"sources":["C:/test/create-react-app/src/views/dashboard/Default/CSB/ManageExamRoom.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { TextField, Select, MenuItem, FormControl, InputLabel, Button, Grid, Typography } from '@mui/material';\r\n// import { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\n// import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n// import { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n// import MainCard from 'ui-component/cards/MainCard';\r\n// import { gridSpacing } from 'store/constant';\r\n\r\n// const ManageExamRoom = () => {\r\n//     const [option, setOption] = useState('');\r\n//     const [room, setRoom] = useState('');\r\n//     const [numberOfFields, setNumberOfFields] = useState(0);\r\n//     const [numberOfFields2, setNumberOfFields2] = useState(0);\r\n//     const [dayOn1, setDayOn1] = useState(null);\r\n//     const [timeOn1, setTimeOn1] = useState([]);\r\n//     const [invalidTimes, setInvalidTimes] = useState([]);\r\n\r\n//     const handleInputChange = (event) => {\r\n//         setNumberOfFields(parseInt(event.target.value) || 0);\r\n//     };\r\n\r\n//     const handleInputChange2 = (event) => {\r\n//         setNumberOfFields2(parseInt(event.target.value) || 0);\r\n//     };\r\n\r\n//     const [teacherValues, setTeacherValues] = useState(Array(numberOfFields).fill(''));\r\n//     const [positionValues, setPositionValues] = useState(Array(numberOfFields).fill(''));\r\n//     const [ProjectValues, setProjectValues] = useState(Array(numberOfFields2).fill(''));\r\n\r\n//     const handleSelectTeacher = (index) => (event) => {\r\n//         const newTeacherValues = [...teacherValues];\r\n//         newTeacherValues[index] = event.target.value;\r\n//         setTeacherValues(newTeacherValues);\r\n//     };\r\n\r\n//     const handleSelectPosition = (index) => (event) => {\r\n//         const newPositionValues = [...positionValues];\r\n//         newPositionValues[index] = event.target.value;\r\n//         setPositionValues(newPositionValues);\r\n//     };\r\n\r\n//     const handleSelectProject = (index) => (event) => {\r\n//         const newProjectValues = [...ProjectValues];\r\n//         newProjectValues[index] = event.target.value;\r\n//         setProjectValues(newProjectValues);\r\n//     };\r\n\r\n//     const handleSelectTime = (index) => (event) => {\r\n//         const newTime = event.target.value;\r\n//         const newTimeOn1 = [...timeOn1];\r\n//         newTimeOn1[index] = newTime;\r\n\r\n//         // Check for duplicates\r\n//         const timeCounts = newTimeOn1.reduce((acc, time) => {\r\n//             acc[time] = (acc[time] || 0) + 1;\r\n//             return acc;\r\n//         }, {});\r\n//         const newInvalidTimes = newTimeOn1.map((time, i) => timeCounts[time] > 1 && i !== newTimeOn1.indexOf(time));\r\n\r\n//         setTimeOn1(newTimeOn1);\r\n//         setInvalidTimes(newInvalidTimes);\r\n//     };\r\n\r\n//     const getFilteredTeachers = (index) => {\r\n//         const selectedTeachers = teacherValues.filter((_, i) => i !== index);\r\n//         return Teacher.filter((teacher) => !selectedTeachers.includes(teacher.ID));\r\n//     };\r\n\r\n//     const getFilteredPositions = (index) => {\r\n//         const selectedPositions = positionValues.filter((_, i) => i !== index);\r\n//         return positionData.filter((position) => !selectedPositions.includes(position.ID) || position.ID !== 'No1');\r\n//     };\r\n\r\n//     const getFilteredProject = (index) => {\r\n//         const selectedProject = ProjectValues.filter((_, i) => i !== index);\r\n//         return ProjectData.filter((ProjectData) => !selectedProject.includes(ProjectData.ID));\r\n//     };\r\n\r\n//     const testData = [\r\n//         { ID: 'CSB01', Name: 'สอบหัวข้อ' },\r\n//         { ID: 'CSB02', Name: 'สอบก้าวหน้า' },\r\n//         { ID: 'CSB03', Name: 'สอบป้องกัน' }\r\n//     ];\r\n\r\n//     const roomData = [\r\n//         { ID: '78-618' },\r\n//         { ID: '78-618/2' },\r\n//         { ID: '78-619' },\r\n//         { ID: '78-621' },\r\n//         { ID: '78-617' }\r\n//     ];\r\n\r\n//     const Teacher = [\r\n//         { ID: 'NLP', Name: 'ลือพล ไม่น่ารักเลย' },\r\n//         { ID: 'SWK', Name: 'สุวัชชัย ตัวตึง' },\r\n//         { ID: 'KAB', Name: 'คัณฑารัตน์ สุดละเอียด' },\r\n//         { ID: 'CRL', Name: 'เฉียบวุฒิ สุดจ้าบ' },\r\n//         { ID: 'ARN', Name: 'เอิญ ไม่ใจดี' },\r\n//         { ID: 'TNA', Name: 'ธณาภัทร ใจร้าย' },\r\n//         { ID: 'BLP', Name: 'เบญจพร ร้ายกาจ' },\r\n//         { ID: 'NAT', Name: 'ณัฐวุฒิ ช่วยด้วย' },\r\n//         { ID: 'KOB', Name: 'กอบเกียรติ อิหยังวะ' },\r\n//         { ID: 'ANW', Name: 'อนุสรณ์ หนีไป' }\r\n//     ];\r\n\r\n//     const positionData = [\r\n//         { ID: 'No1', Name: 'ประธาน' },\r\n//         { ID: 'No2', Name: 'กรรมการ' }\r\n//     ];\r\n\r\n//     const ProjectData = [\r\n//         { ID: 'SP1-01', Name: 'การตรวจสอบจบ' },\r\n//         { ID: 'SP1-02', Name: 'การยื่นสอบปริญญานิพนจ์' },\r\n//         { ID: 'SP1-03', Name: 'โมเดลจำลองอะตอม' },\r\n//         { ID: 'SP1-04', Name: 'AIจับมนุษย์' },\r\n//         { ID: 'SP1-05', Name: 'โปรแกรมปลูกต้นไม้' },\r\n//         { ID: 'SP1-06', Name: 'โปรแกรมออกแบบการนำเสนอ' },\r\n//         { ID: 'SP1-07', Name: 'โปรแกรมคำนวณพื้นที่' },\r\n//         { ID: 'SP1-08', Name: 'การจัดการการสอบสำหรับ CSB' },\r\n//         { ID: 'SP1-09', Name: 'โปรแกรมจองตั๋วรถไฟ' },\r\n//         { ID: 'SP1-10', Name: 'เกมเอาตัวรอดในCS' }\r\n//     ];\r\n\r\n//     return (\r\n//         <MainCard>\r\n//             <Grid container spacing={gridSpacing}>\r\n//                 <Grid item xs={12}>\r\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n//                         <Grid item>\r\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\r\n//                             <Grid container spacing={2}>\r\n//                                 {/* Line 1: Select fields for option, room, and day */}\r\n//                                 <Grid item xs={12}>\r\n//                                     <Typography sx={{ marginLeft: 110 }}>\r\n//                                         <h1>จัดห้องสอบ</h1>\r\n//                                     </Typography>\r\n//                                     <Typography sx={{ marginLeft: 25, marginTop: 5 }} fontSize={'20px'}>\r\n//                                         รหัสการสอบ\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;\r\n//                                         ห้องสอบ\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         วันที่สอบ\r\n//                                     </Typography>\r\n//                                     <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\r\n//                                         <InputLabel id=\"option-label\">เลือกการสอบ</InputLabel>\r\n//                                         <Select\r\n//                                             label=\"รหัสการสอบ\"\r\n//                                             id=\"option\"\r\n//                                             value={option}\r\n//                                             onChange={(e) => setOption(e.target.value)}\r\n//                                             sx={{ minWidth: 300 }}\r\n//                                         >\r\n//                                             {testData.map((testData) => (\r\n//                                                 <MenuItem key={testData.ID} value={testData.ID}>\r\n//                                                     {testData.ID + ' : ' + testData.Name}\r\n//                                                 </MenuItem>\r\n//                                             ))}\r\n//                                         </Select>\r\n//                                     </FormControl>\r\n//                                     <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\r\n//                                         <InputLabel id=\"room-label\">ห้องสอบ</InputLabel>\r\n//                                         <Select\r\n//                                             label=\"ห้องสอบ\"\r\n//                                             id=\"room\"\r\n//                                             value={room}\r\n//                                             onChange={(e) => setRoom(e.target.value)}\r\n//                                             sx={{ minWidth: 300 }}\r\n//                                         >\r\n//                                             {roomData.map((roomData) => (\r\n//                                                 <MenuItem key={roomData.ID} value={roomData.ID}>\r\n//                                                     {roomData.ID}\r\n//                                                 </MenuItem>\r\n//                                             ))}\r\n//                                         </Select>\r\n//                                     </FormControl>\r\n//                                     <FormControl sx={{ ml: 25, minWidth: 120 }}>\r\n//                                         <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n//                                             <DemoContainer components={['DatePicker']}>\r\n//                                                 <DatePicker\r\n//                                                     label=\"วันที่สอบ\"\r\n//                                                     value={dayOn1}\r\n//                                                     onChange={(newValue) => setDayOn1(newValue)}\r\n//                                                 />\r\n//                                             </DemoContainer>\r\n//                                         </LocalizationProvider>\r\n//                                     </FormControl>\r\n//                                 </Grid>\r\n//                                 {/* Line 2: Text field for number of fields */}\r\n//                                 <Grid item xs={12}>\r\n//                                     <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\r\n//                                         จำนวนกรรมการสอบ\r\n//                                     </Typography>\r\n//                                     <TextField\r\n//                                         label=\"จำนวนกรรมการสอบ\"\r\n//                                         type=\"number\"\r\n//                                         value={numberOfFields}\r\n//                                         onChange={handleInputChange}\r\n//                                         sx={{ minWidth: 300, ml: 25, mt: 1 }}\r\n//                                     />\r\n//                                 </Grid>\r\n//                                 {/* Line 3: Show select fields based on the input number */}\r\n//                                 {Array.from({ length: numberOfFields }).map((_, index) => (\r\n//                                     <Grid item xs={12} key={index}>\r\n//                                         <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\r\n//                                             รายชื่อกรรมการสอบ\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;\r\n//                                             ตำแหน่ง\r\n//                                         </Typography>\r\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\r\n//                                             <InputLabel id={`id-label-${index}`}>รายชื่อกรรมการสอบ</InputLabel>\r\n//                                             <Select\r\n//                                                 label=\"รายชื่อกรรมการสอบ\"\r\n//                                                 id={`id-${index}`}\r\n//                                                 sx={{ minWidth: 300 }}\r\n//                                                 value={teacherValues[index]}\r\n//                                                 onChange={handleSelectTeacher(index)}\r\n//                                             >\r\n//                                                 {getFilteredTeachers(index).map((teacher) => (\r\n//                                                     <MenuItem key={teacher.ID} value={teacher.ID}>\r\n//                                                         {teacher.ID + ' ' + teacher.Name}\r\n//                                                     </MenuItem>\r\n//                                                 ))}\r\n//                                             </Select>\r\n//                                         </FormControl>\r\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\r\n//                                             <InputLabel id={`name-label-${index}`}>ตำแหน่ง</InputLabel>\r\n//                                             <Select\r\n//                                                 label=\"ตำแหน่ง\"\r\n//                                                 id={`name-${index}`}\r\n//                                                 sx={{ minWidth: 300 }}\r\n//                                                 value={positionValues[index]}\r\n//                                                 onChange={handleSelectPosition(index)}\r\n//                                             >\r\n//                                                 {getFilteredPositions(index).map((positionData) => (\r\n//                                                     <MenuItem key={positionData.ID} value={positionData.ID}>\r\n//                                                         {positionData.Name}\r\n//                                                     </MenuItem>\r\n//                                                 ))}\r\n//                                             </Select>\r\n//                                         </FormControl>\r\n//                                     </Grid>\r\n//                                 ))}\r\n\r\n//                                 <Grid item xs={12}>\r\n//                                     <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\r\n//                                         จำนวนโครงงานที่จะสอบ\r\n//                                     </Typography>\r\n//                                     <TextField\r\n//                                         label=\"จำนวนโครงงานที่จะสอบ\"\r\n//                                         type=\"number\"\r\n//                                         value={numberOfFields2}\r\n//                                         onChange={handleInputChange2}\r\n//                                         sx={{ minWidth: 300, ml: 25, mt: 1 }}\r\n//                                     />\r\n//                                 </Grid>\r\n//                                 {/* Line 3: Show select fields based on the input number */}\r\n//                                 {Array.from({ length: numberOfFields2 }).map((_, index) => (\r\n//                                     <Grid item xs={12} key={index}>\r\n//                                         <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\r\n//                                             รายชื่อโครงงาน\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             เวลาสอบ\r\n//                                         </Typography>\r\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\r\n//                                             <InputLabel id={`id-label-${index}`}>รายชื่อโครงงาน</InputLabel>\r\n//                                             <Select\r\n//                                                 label=\"รายชื่อโครงงาน\"\r\n//                                                 id={`id-${index}`}\r\n//                                                 sx={{ minWidth: 300 }}\r\n//                                                 value={ProjectValues[index]}\r\n//                                                 onChange={handleSelectProject(index)}\r\n//                                             >\r\n//                                                 {getFilteredProject(index).map((ProjectData) => (\r\n//                                                     <MenuItem key={ProjectData.ID} value={ProjectData.ID}>\r\n//                                                         {ProjectData.ID + ' ' + ProjectData.Name}\r\n//                                                     </MenuItem>\r\n//                                                 ))}\r\n//                                             </Select>\r\n//                                         </FormControl>\r\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\r\n//                                             <TextField\r\n//                                                 label=\"เวลาสอบ\"\r\n//                                                 id={`time-${index}`}\r\n//                                                 type=\"time\"\r\n//                                                 value={timeOn1[index] || ''}\r\n//                                                 onChange={handleSelectTime(index)}\r\n//                                                 InputLabelProps={{\r\n//                                                     shrink: true\r\n//                                                 }}\r\n//                                                 sx={{\r\n//                                                     minWidth: 300,\r\n//                                                     border: invalidTimes[index] ? '3px solid red' : '1px solid #ccc'\r\n//                                                 }}\r\n//                                             />\r\n//                                         </FormControl>\r\n//                                     </Grid>\r\n//                                 ))}\r\n//                                 <Grid item xs={12} sx={{ textAlign: 'center' }}>\r\n//                                     <Button variant=\"contained\" onClick={'#'}>\r\n//                                         Save\r\n//                                     </Button>\r\n//                                 </Grid>\r\n//                             </Grid>\r\n//                         </Grid>\r\n//                     </Grid>\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </MainCard>\r\n//     );\r\n// };\r\n\r\n// export default ManageExamRoom;\r\n\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}