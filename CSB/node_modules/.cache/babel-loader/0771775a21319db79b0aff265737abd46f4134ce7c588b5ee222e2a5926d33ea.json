{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Button, TableCell, TableContainer, Table, TableHead, TableBody, TableRow, Dialog, DialogContent, DialogActions, DialogTitle } from '@mui/material';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// function RequestAdvisor() {\n//     const [tableData, setTableData] = useState([]);\n//     const [openPopup, setOpenPopup] = useState(false);\n//     const [openAcceptDialog, setOpenAcceptDialog] = useState(false);\n//     const [openRejectDialog, setOpenRejectDialog] = useState(false);\n//     const [openAcceptedAdvisorDialog, setOpenAcceptedAdvisorDialog] = useState(false); // New state for accepted confirmation dialog\n//     const [selectedProject, setSelectedProject] = useState(null);\n//     const [currentAction, setCurrentAction] = useState(null); // 'accept' or 'reject'\n\n//     const [PData, setPData] = useState({\n//         P_name: '',\n//         P_details: '',\n//         P_status: '',\n//         P_CSB01: '',\n//         P_CSB02: '',\n//         P_CSB03: '',\n//         P_S1: '',\n//         P_S2: '',\n//         P_T: '',\n//         P_type: '',\n//         P_tool: '',\n//     });\n\n//     const [projects, setProjects] = useState([]);\n\n//     useEffect(() => {\n//         fetch('http://localhost:9999/Project')\n//             .then(response => response.json())\n//             .then(data => {\n//                 console.log('Fetched project data:', data); // Log the data to verify structure\n//                 setTableData(data);\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching data:', error);\n//             });\n//     }, []);\n//     useEffect(() => {\n//         const fetchProjects = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:9999/Project');\n//                 if (response.data && Array.isArray(response.data)) {\n//                     setProjects(response.data);\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching Teacher names:', error);\n//             }\n//         };\n//         fetchProjects();\n//     }, []);\n\n//     const handlePopupClick = (project) => {\n//         setSelectedProject(project);\n//         setOpenPopup(true);\n//     };\n\n//     const handlePopupClose = () => {\n//         setOpenPopup(false);\n//         setSelectedProject(null);\n//     };\n\n//     const handleOpenAcceptDialog = (project) => {\n//         console.log('Opening accept dialog with project:', project); // Check the project object\n//         setSelectedProject(project);\n//         setCurrentAction('accept');\n//         setOpenAcceptDialog(true);\n//     };\n\n//     const handleOpenRejectDialog = (project) => {\n//         console.log('Opening reject dialog with project:', project); // Check the project object\n//         setSelectedProject(project);\n//         setCurrentAction('reject');\n//         setOpenRejectDialog(true);\n//     };\n\n//     const handleCloseAcceptDialog = () => {\n//         setOpenAcceptDialog(false);\n//         setSelectedProject(null);\n//     };\n\n//     const handleCloseRejectDialog = () => {\n//         setOpenRejectDialog(false);\n//         setSelectedProject(null);\n//     };\n\n//     const handleConfirmAccept = () => {\n//         if (selectedProject) {\n//             console.log(`Accept advisor for project ID: ${selectedProject.ID}`);\n\n//             const url = `http://localhost:9999/Project`;\n\n//             fetch(url, {\n//                 method: 'PATCH', // Use PATCH for partial updates\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({\n//                     P_status: 'กำลังดำเนินการ',\n//                     P_T: selectedProject.P_T, // Retain P_T\n//                 }),\n//             })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     return response.text().then(text => { throw new Error(text); });\n//                 }\n//                 return response.json();\n//             })\n//             .then(() => {\n//                 setTableData(prevData => prevData.filter(project => project.ID !== selectedProject.ID));\n//                 handleCloseAcceptDialog();\n//                 setOpenAcceptedAdvisorDialog(true);\n//             })\n//             .catch(error => {\n//                 console.error('Error updating project status:', error);\n//             });\n//         }\n//     };\n\n//     const handleConfirmReject = () => {\n//         console.log('Selected project for rejection:', selectedProject); // Log selectedProject\n//         if (selectedProject && selectedProject.ID) {\n//             console.log(`Reject advisor for project ID: ${selectedProject.ID}`);\n\n//             fetch(`http://localhost:9999/Project`, {\n//                 method: 'PATCH',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({ P_T: '' }), // Clear P_T field\n//             })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     return response.text().then(text => { throw new Error(text); });\n//                 }\n//                 return response.json();\n//             })\n//             .then(() => {\n//                 setTableData(prevData => prevData.filter(project => project.ID !== selectedProject.ID));\n//                 handleCloseRejectDialog();\n//             })\n//             .catch(error => {\n//                 console.error('Error updating project P_T:', error);\n//             });\n//         } else {\n//             console.error('Selected project or project ID is missing');\n//         }\n//     };\n\n//     const handleCloseAcceptedAdvisorDialog = () => {\n//         setOpenAcceptedAdvisorDialog(false);\n//     };\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\n//                             <div>\n//                                 <h1>สถานะคำร้องขอเป็นอาจารย์ที่ปรึกษา</h1>\n//                                 <TableContainer>\n//                                     <Table>\n//                                         <TableHead>\n//                                             <TableRow>\n//                                                 <TableCell>ลำดับที่</TableCell>\n//                                                 <TableCell>ชื่อโครงงาน</TableCell>\n//                                                 <TableCell>นักศึกษาคนที่ 1</TableCell>\n//                                                 <TableCell>นักศึกษาคนที่ 2</TableCell>\n//                                                 <TableCell>รายละเอียดโครงงาน</TableCell>\n//                                                 <TableCell>การตอบสนอง</TableCell>\n//                                             </TableRow>\n//                                         </TableHead>\n//                                         <TableBody>\n//                                             {tableData.length > 0 ? (\n//                                                 tableData.map((row, index) => (\n//                                                     <TableRow key={index}>\n//                                                         <TableCell>{index + 1}</TableCell>\n//                                                         <TableCell>{row.P_name}</TableCell>\n//                                                         <TableCell>{row.P_S1}</TableCell>\n//                                                         <TableCell>{row.P_S2}</TableCell>\n//                                                         <TableCell>\n//                                                             <Button onClick={() => handlePopupClick(row)}>ดูรายละเอียด</Button>\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                         <Button onClick={() => handleOpenAcceptDialog(row)}>รับเป็นที่ปรึกษา</Button>\n//                                                         <Button onClick={() => handleOpenRejectDialog(row)}>ไม่รับเป็นที่ปรึกษา</Button>\n//                                                         </TableCell>\n//                                                     </TableRow>\n//                                                 ))\n//                                             ) : (\n//                                                 <TableRow>\n//                                                     <TableCell colSpan={6} align=\"center\">\n//                                                         No data available\n//                                                     </TableCell>\n//                                                 </TableRow>\n//                                             )}\n//                                         </TableBody>\n//                                     </Table>\n//                                 </TableContainer>\n//                                 <Dialog open={openPopup} onClose={handlePopupClose}>\n//                                     <DialogContent>\n//                                         {selectedProject ? (\n//                                             <div>\n//                                                 <h2>{selectedProject.P_name}</h2>\n//                                                 <p>{selectedProject.P_details}</p>\n//                                                 <p>{selectedProject.P_type}</p>\n//                                                 <p>{selectedProject.P_tool}</p>\n//                                             </div>\n//                                         ) : (\n//                                             'No project details available'\n//                                         )}\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handlePopupClose}>Close</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                                 <Dialog open={openAcceptDialog} onClose={handleCloseAcceptDialog}>\n//                                     <DialogTitle>ยืนยันการรับเป็นที่ปรึกษา</DialogTitle>\n//                                     <DialogContent>\n//                                         คุณยินยอมเป็นที่ปรึกษาโครงการนี้ใช่หรือไม่?\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handleCloseAcceptDialog}>ยกเลิก</Button>\n//                                         <Button onClick={handleConfirmAccept}>ยืนยัน</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                                 <Dialog open={openRejectDialog} onClose={handleCloseRejectDialog}>\n//                                     <DialogTitle>ยืนยันการไม่รับเป็นที่ปรึกษา</DialogTitle>\n//                                     <DialogContent>\n//                                         คุณไม่ยินยอมเป็นที่ปรึกษาโครงการนี้ใช่หรือไม่?\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handleCloseRejectDialog}>ยกเลิก</Button>\n//                                         <Button onClick={handleConfirmReject}>ยืนยัน</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                                 <Dialog open={openAcceptedAdvisorDialog} onClose={handleCloseAcceptedAdvisorDialog}>\n//                                     <DialogTitle>การรับเป็นที่ปรึกษาสำเร็จ</DialogTitle>\n//                                     <DialogContent>\n//                                         คุณได้ตกลงรับเป็นที่ปรึกษาโครงการนี้เรียบร้อยแล้ว\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handleCloseAcceptedAdvisorDialog}>ปิด</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                             </div>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard>\n//     );\n// }\n\n// export default RequestAdvisor;","map":{"version":3,"names":[],"sources":["C:/test/create-react-app/src/views/utilities/RequestAdvisor.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { Button, TableCell, TableContainer, Table, TableHead, TableBody, TableRow, Dialog, DialogContent, DialogActions, DialogTitle } from '@mui/material';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// function RequestAdvisor() {\n//     const [tableData, setTableData] = useState([]);\n//     const [openPopup, setOpenPopup] = useState(false);\n//     const [openAcceptDialog, setOpenAcceptDialog] = useState(false);\n//     const [openRejectDialog, setOpenRejectDialog] = useState(false);\n//     const [openAcceptedAdvisorDialog, setOpenAcceptedAdvisorDialog] = useState(false); // New state for accepted confirmation dialog\n//     const [selectedProject, setSelectedProject] = useState(null);\n//     const [currentAction, setCurrentAction] = useState(null); // 'accept' or 'reject'\n\n//     const [PData, setPData] = useState({\n//         P_name: '',\n//         P_details: '',\n//         P_status: '',\n//         P_CSB01: '',\n//         P_CSB02: '',\n//         P_CSB03: '',\n//         P_S1: '',\n//         P_S2: '',\n//         P_T: '',\n//         P_type: '',\n//         P_tool: '',\n//     });\n\n//     const [projects, setProjects] = useState([]);\n    \n//     useEffect(() => {\n//         fetch('http://localhost:9999/Project')\n//             .then(response => response.json())\n//             .then(data => {\n//                 console.log('Fetched project data:', data); // Log the data to verify structure\n//                 setTableData(data);\n//             })\n//             .catch(error => {\n//                 console.error('Error fetching data:', error);\n//             });\n//     }, []);\n//     useEffect(() => {\n//         const fetchProjects = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:9999/Project');\n//                 if (response.data && Array.isArray(response.data)) {\n//                     setProjects(response.data);\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching Teacher names:', error);\n//             }\n//         };\n//         fetchProjects();\n//     }, []);\n    \n    \n\n//     const handlePopupClick = (project) => {\n//         setSelectedProject(project);\n//         setOpenPopup(true);\n//     };\n\n//     const handlePopupClose = () => {\n//         setOpenPopup(false);\n//         setSelectedProject(null);\n//     };\n\n//     const handleOpenAcceptDialog = (project) => {\n//         console.log('Opening accept dialog with project:', project); // Check the project object\n//         setSelectedProject(project);\n//         setCurrentAction('accept');\n//         setOpenAcceptDialog(true);\n//     };\n    \n//     const handleOpenRejectDialog = (project) => {\n//         console.log('Opening reject dialog with project:', project); // Check the project object\n//         setSelectedProject(project);\n//         setCurrentAction('reject');\n//         setOpenRejectDialog(true);\n//     };\n    \n    \n\n//     const handleCloseAcceptDialog = () => {\n//         setOpenAcceptDialog(false);\n//         setSelectedProject(null);\n//     };\n\n//     const handleCloseRejectDialog = () => {\n//         setOpenRejectDialog(false);\n//         setSelectedProject(null);\n//     };\n\n//     const handleConfirmAccept = () => {\n//         if (selectedProject) {\n//             console.log(`Accept advisor for project ID: ${selectedProject.ID}`);\n            \n//             const url = `http://localhost:9999/Project`;\n    \n//             fetch(url, {\n//                 method: 'PATCH', // Use PATCH for partial updates\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({\n//                     P_status: 'กำลังดำเนินการ',\n//                     P_T: selectedProject.P_T, // Retain P_T\n//                 }),\n//             })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     return response.text().then(text => { throw new Error(text); });\n//                 }\n//                 return response.json();\n//             })\n//             .then(() => {\n//                 setTableData(prevData => prevData.filter(project => project.ID !== selectedProject.ID));\n//                 handleCloseAcceptDialog();\n//                 setOpenAcceptedAdvisorDialog(true);\n//             })\n//             .catch(error => {\n//                 console.error('Error updating project status:', error);\n//             });\n//         }\n//     };\n    \n    \n//     const handleConfirmReject = () => {\n//         console.log('Selected project for rejection:', selectedProject); // Log selectedProject\n//         if (selectedProject && selectedProject.ID) {\n//             console.log(`Reject advisor for project ID: ${selectedProject.ID}`);\n            \n//             fetch(`http://localhost:9999/Project`, {\n//                 method: 'PATCH',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({ P_T: '' }), // Clear P_T field\n//             })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     return response.text().then(text => { throw new Error(text); });\n//                 }\n//                 return response.json();\n//             })\n//             .then(() => {\n//                 setTableData(prevData => prevData.filter(project => project.ID !== selectedProject.ID));\n//                 handleCloseRejectDialog();\n//             })\n//             .catch(error => {\n//                 console.error('Error updating project P_T:', error);\n//             });\n//         } else {\n//             console.error('Selected project or project ID is missing');\n//         }\n//     };\n    \n    \n//     const handleCloseAcceptedAdvisorDialog = () => {\n//         setOpenAcceptedAdvisorDialog(false);\n//     };\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\n//                             <div>\n//                                 <h1>สถานะคำร้องขอเป็นอาจารย์ที่ปรึกษา</h1>\n//                                 <TableContainer>\n//                                     <Table>\n//                                         <TableHead>\n//                                             <TableRow>\n//                                                 <TableCell>ลำดับที่</TableCell>\n//                                                 <TableCell>ชื่อโครงงาน</TableCell>\n//                                                 <TableCell>นักศึกษาคนที่ 1</TableCell>\n//                                                 <TableCell>นักศึกษาคนที่ 2</TableCell>\n//                                                 <TableCell>รายละเอียดโครงงาน</TableCell>\n//                                                 <TableCell>การตอบสนอง</TableCell>\n//                                             </TableRow>\n//                                         </TableHead>\n//                                         <TableBody>\n//                                             {tableData.length > 0 ? (\n//                                                 tableData.map((row, index) => (\n//                                                     <TableRow key={index}>\n//                                                         <TableCell>{index + 1}</TableCell>\n//                                                         <TableCell>{row.P_name}</TableCell>\n//                                                         <TableCell>{row.P_S1}</TableCell>\n//                                                         <TableCell>{row.P_S2}</TableCell>\n//                                                         <TableCell>\n//                                                             <Button onClick={() => handlePopupClick(row)}>ดูรายละเอียด</Button>\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                         <Button onClick={() => handleOpenAcceptDialog(row)}>รับเป็นที่ปรึกษา</Button>\n//                                                         <Button onClick={() => handleOpenRejectDialog(row)}>ไม่รับเป็นที่ปรึกษา</Button>\n//                                                         </TableCell>\n//                                                     </TableRow>\n//                                                 ))\n//                                             ) : (\n//                                                 <TableRow>\n//                                                     <TableCell colSpan={6} align=\"center\">\n//                                                         No data available\n//                                                     </TableCell>\n//                                                 </TableRow>\n//                                             )}\n//                                         </TableBody>\n//                                     </Table>\n//                                 </TableContainer>\n//                                 <Dialog open={openPopup} onClose={handlePopupClose}>\n//                                     <DialogContent>\n//                                         {selectedProject ? (\n//                                             <div>\n//                                                 <h2>{selectedProject.P_name}</h2>\n//                                                 <p>{selectedProject.P_details}</p>\n//                                                 <p>{selectedProject.P_type}</p>\n//                                                 <p>{selectedProject.P_tool}</p>\n//                                             </div>\n//                                         ) : (\n//                                             'No project details available'\n//                                         )}\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handlePopupClose}>Close</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                                 <Dialog open={openAcceptDialog} onClose={handleCloseAcceptDialog}>\n//                                     <DialogTitle>ยืนยันการรับเป็นที่ปรึกษา</DialogTitle>\n//                                     <DialogContent>\n//                                         คุณยินยอมเป็นที่ปรึกษาโครงการนี้ใช่หรือไม่?\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handleCloseAcceptDialog}>ยกเลิก</Button>\n//                                         <Button onClick={handleConfirmAccept}>ยืนยัน</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                                 <Dialog open={openRejectDialog} onClose={handleCloseRejectDialog}>\n//                                     <DialogTitle>ยืนยันการไม่รับเป็นที่ปรึกษา</DialogTitle>\n//                                     <DialogContent>\n//                                         คุณไม่ยินยอมเป็นที่ปรึกษาโครงการนี้ใช่หรือไม่?\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handleCloseRejectDialog}>ยกเลิก</Button>\n//                                         <Button onClick={handleConfirmReject}>ยืนยัน</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                                 <Dialog open={openAcceptedAdvisorDialog} onClose={handleCloseAcceptedAdvisorDialog}>\n//                                     <DialogTitle>การรับเป็นที่ปรึกษาสำเร็จ</DialogTitle>\n//                                     <DialogContent>\n//                                         คุณได้ตกลงรับเป็นที่ปรึกษาโครงการนี้เรียบร้อยแล้ว\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handleCloseAcceptedAdvisorDialog}>ปิด</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                             </div>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard>\n//     );\n// }\n\n// export default RequestAdvisor;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}