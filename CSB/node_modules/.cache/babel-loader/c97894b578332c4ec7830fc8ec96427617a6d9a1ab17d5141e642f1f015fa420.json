{"ast":null,"code":"// import { useState, useRef, useEffect } from 'react';\n\n// import { useNavigate } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\n// // material-ui\n// import { useTheme } from '@mui/material/styles';\n// import {\n//   Avatar,\n//   Box,\n//   Card,\n//   CardContent,\n//   Chip,\n//   ClickAwayListener,\n//   Divider,\n//   Grid,\n//   InputAdornment,\n//   List,\n//   ListItemButton,\n//   ListItemIcon,\n//   ListItemText,\n//   OutlinedInput,\n//   Paper,\n//   Popper,\n//   Stack,\n//   Switch,\n//   Typography\n// } from '@mui/material';\n\n// // third-party\n// import PerfectScrollbar from 'react-perfect-scrollbar';\n\n// // project imports\n// import MainCard from 'ui-component/cards/MainCard';\n// import Transitions from 'ui-component/extended/Transitions';\n// import UpgradePlanCard from './UpgradePlanCard';\n// import User1 from 'assets/images/users/user-round.svg';\n\n// // assets\n// import { IconLogout, IconSearch, IconSettings, IconUser } from '@tabler/icons-react';\n\n// // ==============================|| PROFILE MENU ||============================== //\n\n// const ProfileSection = () => {\n//   const theme = useTheme();\n//   const customization = useSelector((state) => state.customization);\n//   const navigate = useNavigate();\n\n//   const [sdm, setSdm] = useState(true);\n//   const [value, setValue] = useState('');\n//   const [notification, setNotification] = useState(false);\n//   const [selectedIndex, setSelectedIndex] = useState(-1);\n//   const [open, setOpen] = useState(false);\n//   /**\n//    * anchorRef is used on different componets and specifying one type leads to other components throwing an error\n//    * */\n//   const anchorRef = useRef(null);\n//   const handleLogout = async () => {\n//     window.location.href = '/free';\n//     console.log('Logout');\n//   };\n\n//   const handleClose = (event) => {\n//     if (anchorRef.current && anchorRef.current.contains(event.target)) {\n//       return;\n//     }\n//     setOpen(false);\n//   };\n\n//   const handleListItemClick = (event, index, route = '') => {\n//     setSelectedIndex(index);\n//     handleClose(event);\n\n//     if (route && route !== '') {\n//       navigate(route);\n//     }\n//   };\n//   const handleToggle = () => {\n//     setOpen((prevOpen) => !prevOpen);\n//   };\n\n//   const prevOpen = useRef(open);\n//   useEffect(() => {\n//     if (prevOpen.current === true && open === false) {\n//       anchorRef.current.focus();\n//     }\n\n//     prevOpen.current = open;\n//   }, [open]);\n\n//   return (\n//     <>\n//       <Chip\n//         sx={{\n//           height: '48px',\n//           alignItems: 'center',\n//           borderRadius: '27px',\n//           transition: 'all .2s ease-in-out',\n//           borderColor: theme.palette.primary.light,\n//           backgroundColor: theme.palette.primary.light,\n//           '&[aria-controls=\"menu-list-grow\"], &:hover': {\n//             borderColor: theme.palette.primary.main,\n//             background: `${theme.palette.primary.main}!important`,\n//             color: theme.palette.primary.light,\n//             '& svg': {\n//               stroke: theme.palette.primary.light\n//             }\n//           },\n//           '& .MuiChip-label': {\n//             lineHeight: 0\n//           }\n//         }}\n//         icon={\n//           <Avatar\n//             src={User1}\n//             sx={{\n//               ...theme.typography.mediumAvatar,\n//               margin: '8px 0 8px 8px !important',\n//               cursor: 'pointer'\n//             }}\n//             ref={anchorRef}\n//             aria-controls={open ? 'menu-list-grow' : undefined}\n//             aria-haspopup=\"true\"\n//             color=\"inherit\"\n//           />\n//         }\n//         label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\n//         variant=\"outlined\"\n//         ref={anchorRef}\n//         aria-controls={open ? 'menu-list-grow' : undefined}\n//         aria-haspopup=\"true\"\n//         onClick={handleToggle}\n//         color=\"primary\"\n//       />\n//       <Popper\n//         placement=\"bottom-end\"\n//         open={open}\n//         anchorEl={anchorRef.current}\n//         role={undefined}\n//         transition\n//         disablePortal\n//         popperOptions={{\n//           modifiers: [\n//             {\n//               name: 'offset',\n//               options: {\n//                 offset: [0, 14]\n//               }\n//             }\n//           ]\n//         }}\n//       >\n//         {({ TransitionProps }) => (\n//           <Transitions in={open} {...TransitionProps}>\n//             <Paper>\n//               <ClickAwayListener onClickAway={handleClose}>\n//                 <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\n//                   <Box sx={{ p: 2 }}>\n//                     <Stack>\n//                       <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\n//                         <Typography variant=\"h4\">Good Morning,</Typography>\n//                         <Typography component=\"span\" variant=\"h4\" sx={{ fontWeight: 400 }}>\n//                           Johne Doe\n//                         </Typography>\n//                       </Stack>\n//                       {/* <Typography variant=\"subtitle2\">Project Admin</Typography> */}\n//                     </Stack>\n//                     {/* <OutlinedInput\n//                       sx={{ width: '100%', pr: 1, pl: 2, my: 2 }}\n//                       id=\"input-search-profile\"\n//                       value={value}\n//                       onChange={(e) => setValue(e.target.value)}\n//                       placeholder=\"Search profile options\"\n//                       startAdornment={\n//                         <InputAdornment position=\"start\">\n//                           <IconSearch stroke={1.5} size=\"1rem\" color={theme.palette.grey[500]} />\n//                         </InputAdornment>\n//                       }\n//                       aria-describedby=\"search-helper-text\"\n//                       inputProps={{\n//                         'aria-label': 'weight'\n//                       }}\n//                     /> */}\n//                     {/* <Divider /> */}\n//                   </Box>\n//                   <PerfectScrollbar style={{ height: '100%', maxHeight: 'calc(100vh - 250px)', overflowX: 'hidden' }}>\n//                     <Box sx={{ p: 2 }}>\n//                       {/* <UpgradePlanCard /> */}\n//                       <Divider />\n//                       {/* <Card\n//                         sx={{\n//                           bgcolor: theme.palette.primary.light,\n//                           my: 2\n//                         }}\n//                       >\n//                         <CardContent>\n//                           <Grid container spacing={3} direction=\"column\">\n//                             <Grid item>\n//                               <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\n//                                 <Grid item>\n//                                   <Typography variant=\"subtitle1\">Start DND Mode</Typography>\n//                                 </Grid>\n//                                 <Grid item>\n//                                   <Switch\n//                                     color=\"primary\"\n//                                     checked={sdm}\n//                                     onChange={(e) => setSdm(e.target.checked)}\n//                                     name=\"sdm\"\n//                                     size=\"small\"\n//                                   />\n//                                 </Grid>\n//                               </Grid>\n//                             </Grid>\n//                             <Grid item>\n//                               <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\n//                                 <Grid item>\n//                                   <Typography variant=\"subtitle1\">Allow Notifications</Typography>\n//                                 </Grid>\n//                                 <Grid item>\n//                                   <Switch\n//                                     checked={notification}\n//                                     onChange={(e) => setNotification(e.target.checked)}\n//                                     name=\"sdm\"\n//                                     size=\"small\"\n//                                   />\n//                                 </Grid>\n//                               </Grid>\n//                             </Grid>\n//                           </Grid>\n//                         </CardContent>\n//                       </Card>\n//                       <Divider /> */}\n//                       <List\n//                         component=\"nav\"\n//                         sx={{\n//                           width: '100%',\n//                           maxWidth: 350,\n//                           minWidth: 300,\n//                           backgroundColor: theme.palette.background.paper,\n//                           borderRadius: '10px',\n//                           [theme.breakpoints.down('md')]: {\n//                             minWidth: '100%'\n//                           },\n//                           '& .MuiListItemButton-root': {\n//                             mt: 0.5\n//                           }\n//                         }}\n//                       >\n//                         {/* <ListItemButton\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\n//                           selected={selectedIndex === 0}\n//                           onClick={(event) => handleListItemClick(event, 0, '#')}\n//                         >\n//                           <ListItemIcon>\n//                             <IconSettings stroke={1.5} size=\"1.3rem\" />\n//                           </ListItemIcon>\n//                           <ListItemText primary={<Typography variant=\"body2\">Account Settings</Typography>} />\n//                         </ListItemButton> */}\n//                         {/* <ListItemButton\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\n//                           selected={selectedIndex === 1}\n//                           onClick={(event) => handleListItemClick(event, 1, '#')}\n//                         >\n//                           <ListItemIcon>\n//                             <IconUser stroke={1.5} size=\"1.3rem\" />\n//                           </ListItemIcon>\n//                           <ListItemText\n//                             primary={\n//                               <Grid container spacing={1} justifyContent=\"space-between\">\n//                                 <Grid item>\n//                                   <Typography variant=\"body2\">Social Profile</Typography>\n//                                 </Grid>\n//                                 <Grid item>\n//                                   <Chip\n//                                     label=\"02\"\n//                                     size=\"small\"\n//                                     sx={{\n//                                       bgcolor: theme.palette.warning.dark,\n//                                       color: theme.palette.background.default\n//                                     }}\n//                                   />\n//                                 </Grid>\n//                               </Grid>\n//                             }\n//                           />\n//                         </ListItemButton> */}\n//                         <ListItemButton\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\n//                           selected={selectedIndex === 4}\n//                           onClick={handleLogout}\n//                         >\n//                           <ListItemIcon>\n//                             <IconLogout stroke={1.5} size=\"1.3rem\" />\n//                           </ListItemIcon>\n//                           <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\n//                         </ListItemButton>\n//                       </List>\n//                     </Box>\n//                   </PerfectScrollbar>\n//                 </MainCard>\n//               </ClickAwayListener>\n//             </Paper>\n//           </Transitions>\n//         )}\n//       </Popper>\n//     </>\n//   );\n// };\n\n// export default ProfileSection;","map":{"version":3,"names":[],"sources":["C:/CSB-haha/create-react-app/src/layout/StudenLayout/Header/ProfileSection/index.js"],"sourcesContent":["// import { useState, useRef, useEffect } from 'react';\r\n\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { useSelector } from 'react-redux';\r\n\r\n// // material-ui\r\n// import { useTheme } from '@mui/material/styles';\r\n// import {\r\n//   Avatar,\r\n//   Box,\r\n//   Card,\r\n//   CardContent,\r\n//   Chip,\r\n//   ClickAwayListener,\r\n//   Divider,\r\n//   Grid,\r\n//   InputAdornment,\r\n//   List,\r\n//   ListItemButton,\r\n//   ListItemIcon,\r\n//   ListItemText,\r\n//   OutlinedInput,\r\n//   Paper,\r\n//   Popper,\r\n//   Stack,\r\n//   Switch,\r\n//   Typography\r\n// } from '@mui/material';\r\n\r\n// // third-party\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n// // project imports\r\n// import MainCard from 'ui-component/cards/MainCard';\r\n// import Transitions from 'ui-component/extended/Transitions';\r\n// import UpgradePlanCard from './UpgradePlanCard';\r\n// import User1 from 'assets/images/users/user-round.svg';\r\n\r\n// // assets\r\n// import { IconLogout, IconSearch, IconSettings, IconUser } from '@tabler/icons-react';\r\n\r\n// // ==============================|| PROFILE MENU ||============================== //\r\n\r\n// const ProfileSection = () => {\r\n//   const theme = useTheme();\r\n//   const customization = useSelector((state) => state.customization);\r\n//   const navigate = useNavigate();\r\n\r\n//   const [sdm, setSdm] = useState(true);\r\n//   const [value, setValue] = useState('');\r\n//   const [notification, setNotification] = useState(false);\r\n//   const [selectedIndex, setSelectedIndex] = useState(-1);\r\n//   const [open, setOpen] = useState(false);\r\n//   /**\r\n//    * anchorRef is used on different componets and specifying one type leads to other components throwing an error\r\n//    * */\r\n//   const anchorRef = useRef(null);\r\n//   const handleLogout = async () => {\r\n//     window.location.href = '/free';\r\n//     console.log('Logout');\r\n//   };\r\n\r\n//   const handleClose = (event) => {\r\n//     if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n//       return;\r\n//     }\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   const handleListItemClick = (event, index, route = '') => {\r\n//     setSelectedIndex(index);\r\n//     handleClose(event);\r\n\r\n//     if (route && route !== '') {\r\n//       navigate(route);\r\n//     }\r\n//   };\r\n//   const handleToggle = () => {\r\n//     setOpen((prevOpen) => !prevOpen);\r\n//   };\r\n\r\n//   const prevOpen = useRef(open);\r\n//   useEffect(() => {\r\n//     if (prevOpen.current === true && open === false) {\r\n//       anchorRef.current.focus();\r\n//     }\r\n\r\n//     prevOpen.current = open;\r\n//   }, [open]);\r\n\r\n//   return (\r\n//     <>\r\n//       <Chip\r\n//         sx={{\r\n//           height: '48px',\r\n//           alignItems: 'center',\r\n//           borderRadius: '27px',\r\n//           transition: 'all .2s ease-in-out',\r\n//           borderColor: theme.palette.primary.light,\r\n//           backgroundColor: theme.palette.primary.light,\r\n//           '&[aria-controls=\"menu-list-grow\"], &:hover': {\r\n//             borderColor: theme.palette.primary.main,\r\n//             background: `${theme.palette.primary.main}!important`,\r\n//             color: theme.palette.primary.light,\r\n//             '& svg': {\r\n//               stroke: theme.palette.primary.light\r\n//             }\r\n//           },\r\n//           '& .MuiChip-label': {\r\n//             lineHeight: 0\r\n//           }\r\n//         }}\r\n//         icon={\r\n//           <Avatar\r\n//             src={User1}\r\n//             sx={{\r\n//               ...theme.typography.mediumAvatar,\r\n//               margin: '8px 0 8px 8px !important',\r\n//               cursor: 'pointer'\r\n//             }}\r\n//             ref={anchorRef}\r\n//             aria-controls={open ? 'menu-list-grow' : undefined}\r\n//             aria-haspopup=\"true\"\r\n//             color=\"inherit\"\r\n//           />\r\n//         }\r\n//         label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\r\n//         variant=\"outlined\"\r\n//         ref={anchorRef}\r\n//         aria-controls={open ? 'menu-list-grow' : undefined}\r\n//         aria-haspopup=\"true\"\r\n//         onClick={handleToggle}\r\n//         color=\"primary\"\r\n//       />\r\n//       <Popper\r\n//         placement=\"bottom-end\"\r\n//         open={open}\r\n//         anchorEl={anchorRef.current}\r\n//         role={undefined}\r\n//         transition\r\n//         disablePortal\r\n//         popperOptions={{\r\n//           modifiers: [\r\n//             {\r\n//               name: 'offset',\r\n//               options: {\r\n//                 offset: [0, 14]\r\n//               }\r\n//             }\r\n//           ]\r\n//         }}\r\n//       >\r\n//         {({ TransitionProps }) => (\r\n//           <Transitions in={open} {...TransitionProps}>\r\n//             <Paper>\r\n//               <ClickAwayListener onClickAway={handleClose}>\r\n//                 <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\r\n//                   <Box sx={{ p: 2 }}>\r\n//                     <Stack>\r\n//                       <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n//                         <Typography variant=\"h4\">Good Morning,</Typography>\r\n//                         <Typography component=\"span\" variant=\"h4\" sx={{ fontWeight: 400 }}>\r\n//                           Johne Doe\r\n//                         </Typography>\r\n//                       </Stack>\r\n//                       {/* <Typography variant=\"subtitle2\">Project Admin</Typography> */}\r\n//                     </Stack>\r\n//                     {/* <OutlinedInput\r\n//                       sx={{ width: '100%', pr: 1, pl: 2, my: 2 }}\r\n//                       id=\"input-search-profile\"\r\n//                       value={value}\r\n//                       onChange={(e) => setValue(e.target.value)}\r\n//                       placeholder=\"Search profile options\"\r\n//                       startAdornment={\r\n//                         <InputAdornment position=\"start\">\r\n//                           <IconSearch stroke={1.5} size=\"1rem\" color={theme.palette.grey[500]} />\r\n//                         </InputAdornment>\r\n//                       }\r\n//                       aria-describedby=\"search-helper-text\"\r\n//                       inputProps={{\r\n//                         'aria-label': 'weight'\r\n//                       }}\r\n//                     /> */}\r\n//                     {/* <Divider /> */}\r\n//                   </Box>\r\n//                   <PerfectScrollbar style={{ height: '100%', maxHeight: 'calc(100vh - 250px)', overflowX: 'hidden' }}>\r\n//                     <Box sx={{ p: 2 }}>\r\n//                       {/* <UpgradePlanCard /> */}\r\n//                       <Divider />\r\n//                       {/* <Card\r\n//                         sx={{\r\n//                           bgcolor: theme.palette.primary.light,\r\n//                           my: 2\r\n//                         }}\r\n//                       >\r\n//                         <CardContent>\r\n//                           <Grid container spacing={3} direction=\"column\">\r\n//                             <Grid item>\r\n//                               <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\r\n//                                 <Grid item>\r\n//                                   <Typography variant=\"subtitle1\">Start DND Mode</Typography>\r\n//                                 </Grid>\r\n//                                 <Grid item>\r\n//                                   <Switch\r\n//                                     color=\"primary\"\r\n//                                     checked={sdm}\r\n//                                     onChange={(e) => setSdm(e.target.checked)}\r\n//                                     name=\"sdm\"\r\n//                                     size=\"small\"\r\n//                                   />\r\n//                                 </Grid>\r\n//                               </Grid>\r\n//                             </Grid>\r\n//                             <Grid item>\r\n//                               <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\r\n//                                 <Grid item>\r\n//                                   <Typography variant=\"subtitle1\">Allow Notifications</Typography>\r\n//                                 </Grid>\r\n//                                 <Grid item>\r\n//                                   <Switch\r\n//                                     checked={notification}\r\n//                                     onChange={(e) => setNotification(e.target.checked)}\r\n//                                     name=\"sdm\"\r\n//                                     size=\"small\"\r\n//                                   />\r\n//                                 </Grid>\r\n//                               </Grid>\r\n//                             </Grid>\r\n//                           </Grid>\r\n//                         </CardContent>\r\n//                       </Card>\r\n//                       <Divider /> */}\r\n//                       <List\r\n//                         component=\"nav\"\r\n//                         sx={{\r\n//                           width: '100%',\r\n//                           maxWidth: 350,\r\n//                           minWidth: 300,\r\n//                           backgroundColor: theme.palette.background.paper,\r\n//                           borderRadius: '10px',\r\n//                           [theme.breakpoints.down('md')]: {\r\n//                             minWidth: '100%'\r\n//                           },\r\n//                           '& .MuiListItemButton-root': {\r\n//                             mt: 0.5\r\n//                           }\r\n//                         }}\r\n//                       >\r\n//                         {/* <ListItemButton\r\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n//                           selected={selectedIndex === 0}\r\n//                           onClick={(event) => handleListItemClick(event, 0, '#')}\r\n//                         >\r\n//                           <ListItemIcon>\r\n//                             <IconSettings stroke={1.5} size=\"1.3rem\" />\r\n//                           </ListItemIcon>\r\n//                           <ListItemText primary={<Typography variant=\"body2\">Account Settings</Typography>} />\r\n//                         </ListItemButton> */}\r\n//                         {/* <ListItemButton\r\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n//                           selected={selectedIndex === 1}\r\n//                           onClick={(event) => handleListItemClick(event, 1, '#')}\r\n//                         >\r\n//                           <ListItemIcon>\r\n//                             <IconUser stroke={1.5} size=\"1.3rem\" />\r\n//                           </ListItemIcon>\r\n//                           <ListItemText\r\n//                             primary={\r\n//                               <Grid container spacing={1} justifyContent=\"space-between\">\r\n//                                 <Grid item>\r\n//                                   <Typography variant=\"body2\">Social Profile</Typography>\r\n//                                 </Grid>\r\n//                                 <Grid item>\r\n//                                   <Chip\r\n//                                     label=\"02\"\r\n//                                     size=\"small\"\r\n//                                     sx={{\r\n//                                       bgcolor: theme.palette.warning.dark,\r\n//                                       color: theme.palette.background.default\r\n//                                     }}\r\n//                                   />\r\n//                                 </Grid>\r\n//                               </Grid>\r\n//                             }\r\n//                           />\r\n//                         </ListItemButton> */}\r\n//                         <ListItemButton\r\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n//                           selected={selectedIndex === 4}\r\n//                           onClick={handleLogout}\r\n//                         >\r\n//                           <ListItemIcon>\r\n//                             <IconLogout stroke={1.5} size=\"1.3rem\" />\r\n//                           </ListItemIcon>\r\n//                           <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\r\n//                         </ListItemButton>\r\n//                       </List>\r\n//                     </Box>\r\n//                   </PerfectScrollbar>\r\n//                 </MainCard>\r\n//               </ClickAwayListener>\r\n//             </Paper>\r\n//           </Transitions>\r\n//         )}\r\n//       </Popper>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ProfileSection;\r\n\r\n\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}