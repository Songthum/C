{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\create-react-app\\\\src\\\\views\\\\utilities\\\\InputScoreCSB01.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Paper, Grid, Table, TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Dialog, DialogTitle, DialogContent, DialogActions, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { gridSpacing } from 'store/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputScoreCSB01() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [examResults, setExamResults] = useState([]);\n  const [exams, setExams] = useState([]); // State for exam information\n  const [open, setOpen] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const initialData = [{\n    id: 1,\n    name: 'การวิเคราะห์ปัญหา(Problem Analysis)',\n    description: ['1. มีการระบุที่มาของปัญหา', '2. มีการนำเสนอข้อมูลทางสถิติหรือหลักฐานเพื่อสนับสนุนความสำคัญของปัญหา', '3. มีอ้างอิงแหล่งข้อมูลที่น่าเชื่อถือ'],\n    score: ''\n  }, {\n    id: 2,\n    name: 'แนวคิด/ แนวทางของระบบ(Solution)',\n    description: ['1. มีความสามารถแก้ปัญหาได้แท้จริง ตรงเป้า', '2. มีวิธีการที่นำเสนอที่มีประสิทธิภาพ'],\n    score: ''\n  }, {\n    id: 3,\n    name: 'ขอบเขตและปริมาณงาน(Scope)',\n    description: ['1. มีลักษณะและปริมาณงานเหมาะสมสำหรับปริญญานิพนธ์', '2. มีความเหมาะสมตามกรอบเวลา'],\n    score: ''\n  }, {\n    id: 4,\n    name: 'ต้นแบบระบบ(System Prototype)',\n    description: ['มีการนำเสนอต้นแบบระบบด้วยเครื่องมือที่มีความเหมาะสม เช่น Mockup, wireframe, story board และ system architecture'],\n    score: ''\n  }, {\n    id: 5,\n    name: 'ลักษณะของกลุ่มผู้ใช้งาน(Target market)',\n    description: ['1. มีการกำหนดเป้าหมายสำหรับการใช้งานระบบอย่างชัดเจน', '2. มีการศึกษาลักษณะกลุ่มเป้าหมาย', '3. มีการศึกษาผลกระทบที่คาดว่าจะเกิดต่อกลุ่มเป้าหมาย'],\n    score: ''\n  }, {\n    id: 6,\n    name: 'การวิเคราะห์การตลาด (Market analysis)',\n    description: ['1. มีการนำเสนอระบบที่ใกล้เคียง/ที่เกี่ยวข้องอย่างน้อย 2 ระบบ', '2. มีการระบุข้อจำกัดของระบบที่ใกล้เคียงหรือเกี่ยวข้อง', '3. มีการระบุความแตกต่างหรือจุดเด่นของระบบที่นำเสนอ'],\n    score: ''\n  }, {\n    id: 7,\n    name: 'การศึกษาความเป็นไปได้ (Feasibility study)',\n    description: ['1. มีการนำเสนอการศึกษาเทคนิคที่เกี่ยวข้องเบื้องต้น ', '2. มีการศึกษาข้อจำกัดของอุปกรณ์/ระบบที่เกี่ยวข้อง'],\n    score: ''\n  }, {\n    id: 8,\n    name: 'ผลการประเมิน',\n    score: ''\n  }];\n  const [allChecked, setAllChecked] = useState(false);\n  const [Data, setData] = useState(initialData || []);\n  useEffect(() => {\n    const fetchProjectsAndExams = async () => {\n      try {\n        const [projectResponse, examResultsResponse, examResponse] = await Promise.all([axios.get('http://localhost:9999/Project'), axios.get('http://localhost:9999/Exam_results'), axios.get('http://localhost:9999/Exam')]);\n\n        // Update state for exams\n        setExams(examResponse.data);\n\n        // Check if any exam is open\n        const openExams = examResponse.data.filter(exam => exam.Exam_o_CSB01 === 'เปิด').map(exam => exam.Exam_name);\n\n        // Get completed project names\n        const completedProjectNames = new Set(examResultsResponse.data.filter(result => result.Er_CSB01) // Check if Er_CSB01 has value\n        .map(result => result.Er_name) // Get only project names that are completed\n        );\n\n        // Filter projects based on open exams and not completed\n        const filteredProjects = projectResponse.data.filter(project => openExams.includes(project.P_name) && !completedProjectNames.has(project.P_name));\n        setProjects(filteredProjects); // Set filtered projects to state\n      } catch (error) {\n        console.error('Error fetching projects, exam results, or exams:', error);\n      }\n    };\n    fetchProjectsAndExams();\n  }, []);\n  useEffect(() => {\n    updateFinalScore();\n    checkAllChecked();\n  }, [Data]);\n  const handleDonNotGoAny = () => {\n    const updatedData = projects.map(project => ({\n      ...project,\n      isRed: true,\n      isDisabled: true\n    }));\n    setProjects(updatedData);\n  };\n  const handleLinkClick = index => {\n    setSelectedProject(projects[index]);\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    resetCheckboxData(); // Reset checkbox values when closing the dialog\n  };\n  const handleDisableRow = index => {\n    const updatedProjects = projects.map((project, i) => i === index ? {\n      ...project,\n      isDisabled: true\n    } : project);\n    setProjects(updatedProjects);\n  };\n  const handleRedRow = index => {\n    const updatedProjects = projects.map((project, i) => i === index ? {\n      ...project,\n      isRed: true\n    } : project);\n    setProjects(updatedProjects);\n  };\n  const handleCheckboxChange = (id, type) => {\n    setData(prevData => prevData.map(item => item.id === id ? {\n      ...item,\n      score: type === 'yes' ? 'ผ่าน' : 'ไม่ผ่าน'\n    } : item));\n  };\n  const updateFinalScore = () => {\n    const countPass = Data.filter(item => item.id >= 1 && item.id <= 7).filter(item => item.score === 'ผ่าน').length;\n    const countFail = Data.filter(item => item.id >= 1 && item.id <= 7).filter(item => item.score === 'ไม่ผ่าน').length;\n    if (countFail >= 4) {\n      setData(prevData => prevData.map(item => item.id === 8 ? {\n        ...item,\n        score: 'ไม่ผ่านการประเมินหัวข้อ'\n      } : item));\n    } else if (countPass >= 4) {\n      setData(prevData => prevData.map(item => item.id === 8 ? {\n        ...item,\n        score: 'ผ่านการประเมินหัวข้อ'\n      } : item));\n    }\n  };\n  const checkAllChecked = () => {\n    const allChecked = Data.filter(item => item.id >= 1 && item.id <= 7).every(item => item.score === 'ผ่าน' || item.score === 'ไม่ผ่าน');\n    setAllChecked(allChecked);\n  };\n  const handleSavePopup = async e => {\n    if (allChecked) {\n      e.preventDefault();\n      try {\n        await saveScore(); // Save the score\n        // Remove only the selected project from the list\n        setProjects(prevProjects => prevProjects.filter(project => project.P_id !== selectedProject.P_id));\n        resetCheckboxData(); // Reset the form data\n        setOpen(false); // Close the popup\n      } catch (error) {\n        console.error('Error saving score:', error);\n      }\n    } else {\n      alert('กรุณาตรวจสอบให้ครบทุกหัวข้อก่อนทำการบันทึก');\n    }\n  };\n  const resetCheckboxData = () => {\n    setData(initialData); // Reset to initial state\n    setAllChecked(false); // Reset allChecked state\n  };\n  const saveScore = async () => {\n    const lastScore = Data[Data.length - 1].score;\n    const erStatus = lastScore === 'ผ่านการประเมินหัวข้อ' ? 'กำลังดำเนินการ' : 'ไม่ผ่าน'; // Set Er_status based on final result\n    const erName = selectedProject.P_name; // Get the project name for Er_name\n\n    try {\n      const response = await axios.post('http://localhost:9999/Exam_results', {\n        Er_name: erName,\n        // Use the project's name\n        Er_CSB01: lastScore,\n        Er_status: erStatus\n      });\n      console.log('Score saved successfully:', response.data);\n    } catch (error) {\n      console.error('Error saving score:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Project Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: project.P_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => handleLinkClick(index),\n                      children: \"Evaluate\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 23\n                  }, this)]\n                }, project.P_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Evaluate Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.P_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), Data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.description.map((desc, idx) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: desc\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleCheckboxChange(item.id, 'yes'),\n              children: \"Pass\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleCheckboxChange(item.id, 'no'),\n              children: \"Fail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSavePopup,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(InputScoreCSB01, \"6e/SkPEyc55zB46u0+EUHri8sEI=\");\n_c = InputScoreCSB01;\nexport default InputScoreCSB01;\nvar _c;\n$RefreshReg$(_c, \"InputScoreCSB01\");","map":{"version":3,"names":["React","useState","useEffect","Button","Paper","Grid","Table","TextField","TableBody","TableCell","TableContainer","TableHead","TableRow","Dialog","DialogTitle","DialogContent","DialogActions","Typography","axios","gridSpacing","jsxDEV","_jsxDEV","InputScoreCSB01","_s","projects","setProjects","examResults","setExamResults","exams","setExams","open","setOpen","selectedProject","setSelectedProject","openDialog","setOpenDialog","initialData","id","name","description","score","allChecked","setAllChecked","Data","setData","fetchProjectsAndExams","projectResponse","examResultsResponse","examResponse","Promise","all","get","data","openExams","filter","exam","Exam_o_CSB01","map","Exam_name","completedProjectNames","Set","result","Er_CSB01","Er_name","filteredProjects","project","includes","P_name","has","error","console","updateFinalScore","checkAllChecked","handleDonNotGoAny","updatedData","isRed","isDisabled","handleLinkClick","index","handleClose","resetCheckboxData","handleDisableRow","updatedProjects","i","handleRedRow","handleCheckboxChange","type","prevData","item","countPass","length","countFail","every","handleSavePopup","e","preventDefault","saveScore","prevProjects","P_id","alert","lastScore","erStatus","erName","response","post","Er_status","log","children","container","spacing","xs","component","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClose","variant","desc","idx","_c","$RefreshReg$"],"sources":["C:/test/create-react-app/src/views/utilities/InputScoreCSB01.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Paper, Grid, Table, TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Dialog, DialogTitle, DialogContent, DialogActions, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nfunction InputScoreCSB01() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [examResults, setExamResults] = useState([]);\r\n  const [exams, setExams] = useState([]); // State for exam information\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const initialData = [\r\n    { id: 1, name: 'การวิเคราะห์ปัญหา(Problem Analysis)', description: ['1. มีการระบุที่มาของปัญหา', '2. มีการนำเสนอข้อมูลทางสถิติหรือหลักฐานเพื่อสนับสนุนความสำคัญของปัญหา', '3. มีอ้างอิงแหล่งข้อมูลที่น่าเชื่อถือ'], score: '' },\r\n    { id: 2, name: 'แนวคิด/ แนวทางของระบบ(Solution)', description: ['1. มีความสามารถแก้ปัญหาได้แท้จริง ตรงเป้า', '2. มีวิธีการที่นำเสนอที่มีประสิทธิภาพ'], score: '' },\r\n    { id: 3, name: 'ขอบเขตและปริมาณงาน(Scope)', description: ['1. มีลักษณะและปริมาณงานเหมาะสมสำหรับปริญญานิพนธ์', '2. มีความเหมาะสมตามกรอบเวลา'], score: '' },\r\n    { id: 4, name: 'ต้นแบบระบบ(System Prototype)', description: ['มีการนำเสนอต้นแบบระบบด้วยเครื่องมือที่มีความเหมาะสม เช่น Mockup, wireframe, story board และ system architecture'], score: '' },\r\n    { id: 5, name: 'ลักษณะของกลุ่มผู้ใช้งาน(Target market)', description: ['1. มีการกำหนดเป้าหมายสำหรับการใช้งานระบบอย่างชัดเจน', '2. มีการศึกษาลักษณะกลุ่มเป้าหมาย', '3. มีการศึกษาผลกระทบที่คาดว่าจะเกิดต่อกลุ่มเป้าหมาย'], score: '' },\r\n    { id: 6, name: 'การวิเคราะห์การตลาด (Market analysis)', description: ['1. มีการนำเสนอระบบที่ใกล้เคียง/ที่เกี่ยวข้องอย่างน้อย 2 ระบบ', '2. มีการระบุข้อจำกัดของระบบที่ใกล้เคียงหรือเกี่ยวข้อง', '3. มีการระบุความแตกต่างหรือจุดเด่นของระบบที่นำเสนอ'], score: '' },\r\n    { id: 7, name: 'การศึกษาความเป็นไปได้ (Feasibility study)', description: ['1. มีการนำเสนอการศึกษาเทคนิคที่เกี่ยวข้องเบื้องต้น ', '2. มีการศึกษาข้อจำกัดของอุปกรณ์/ระบบที่เกี่ยวข้อง'], score: '' },\r\n    { id: 8, name: 'ผลการประเมิน', score: '' },\r\n  ];\r\n\r\n\r\n  const [allChecked, setAllChecked] = useState(false);\r\n\r\nconst [Data, setData] = useState(initialData || []);\r\n\r\n  useEffect(() => {\r\n    const fetchProjectsAndExams = async () => {\r\n      try {\r\n        const [projectResponse, examResultsResponse, examResponse] = await Promise.all([\r\n          axios.get('http://localhost:9999/Project'),\r\n          axios.get('http://localhost:9999/Exam_results'),\r\n          axios.get('http://localhost:9999/Exam')\r\n        ]);\r\n\r\n        // Update state for exams\r\n        setExams(examResponse.data);\r\n\r\n        // Check if any exam is open\r\n        const openExams = examResponse.data.filter(exam => exam.Exam_o_CSB01 === 'เปิด').map(exam => exam.Exam_name);\r\n\r\n        // Get completed project names\r\n        const completedProjectNames = new Set(\r\n          examResultsResponse.data\r\n            .filter(result => result.Er_CSB01) // Check if Er_CSB01 has value\r\n            .map(result => result.Er_name) // Get only project names that are completed\r\n        );\r\n\r\n        // Filter projects based on open exams and not completed\r\n        const filteredProjects = projectResponse.data\r\n          .filter(project => openExams.includes(project.P_name) && !completedProjectNames.has(project.P_name));\r\n\r\n        setProjects(filteredProjects); // Set filtered projects to state\r\n      } catch (error) {\r\n        console.error('Error fetching projects, exam results, or exams:', error);\r\n      }\r\n    };\r\n\r\n    fetchProjectsAndExams();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateFinalScore();\r\n    checkAllChecked();\r\n  }, [Data]);\r\n\r\n  const handleDonNotGoAny = () => {\r\n    const updatedData = projects.map(project => ({ ...project, isRed: true, isDisabled: true }));\r\n    setProjects(updatedData);\r\n  };\r\n\r\n  const handleLinkClick = (index) => {\r\n    setSelectedProject(projects[index]);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    resetCheckboxData(); // Reset checkbox values when closing the dialog\r\n  };\r\n\r\n  const handleDisableRow = (index) => {\r\n    const updatedProjects = projects.map((project, i) =>\r\n      i === index ? { ...project, isDisabled: true } : project\r\n    );\r\n    setProjects(updatedProjects);\r\n  };\r\n\r\n  const handleRedRow = (index) => {\r\n    const updatedProjects = projects.map((project, i) =>\r\n      i === index ? { ...project, isRed: true } : project\r\n    );\r\n    setProjects(updatedProjects);\r\n  };\r\n\r\n  const handleCheckboxChange = (id, type) => {\r\n    setData(prevData =>\r\n      prevData.map(item =>\r\n        item.id === id\r\n          ? { ...item, score: type === 'yes' ? 'ผ่าน' : 'ไม่ผ่าน' }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateFinalScore = () => {\r\n    const countPass = Data\r\n      .filter(item => item.id >= 1 && item.id <= 7)\r\n      .filter(item => item.score === 'ผ่าน').length;\r\n\r\n    const countFail = Data\r\n      .filter(item => item.id >= 1 && item.id <= 7)\r\n      .filter(item => item.score === 'ไม่ผ่าน').length;\r\n\r\n    if (countFail >= 4) {\r\n      setData(prevData =>\r\n        prevData.map(item =>\r\n          item.id === 8\r\n            ? { ...item, score: 'ไม่ผ่านการประเมินหัวข้อ' }\r\n            : item\r\n        )\r\n      );\r\n    } else if (countPass >= 4) {\r\n      setData(prevData =>\r\n        prevData.map(item =>\r\n          item.id === 8\r\n            ? { ...item, score: 'ผ่านการประเมินหัวข้อ' }\r\n            : item\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const checkAllChecked = () => {\r\n    const allChecked = Data\r\n      .filter(item => item.id >= 1 && item.id <= 7)\r\n      .every(item => item.score === 'ผ่าน' || item.score === 'ไม่ผ่าน');\r\n    setAllChecked(allChecked);\r\n  };\r\n\r\n  const handleSavePopup = async (e) => {\r\n    if (allChecked) {\r\n      e.preventDefault();\r\n      try {\r\n        await saveScore(); // Save the score\r\n        // Remove only the selected project from the list\r\n        setProjects(prevProjects => prevProjects.filter(project => project.P_id !== selectedProject.P_id));\r\n        resetCheckboxData(); // Reset the form data\r\n        setOpen(false); // Close the popup\r\n      } catch (error) {\r\n        console.error('Error saving score:', error);\r\n      }\r\n    } else {\r\n      alert('กรุณาตรวจสอบให้ครบทุกหัวข้อก่อนทำการบันทึก');\r\n    }\r\n  };\r\n\r\n  const resetCheckboxData = () => {\r\n    setData(initialData); // Reset to initial state\r\n    setAllChecked(false); // Reset allChecked state\r\n  };\r\n\r\n  const saveScore = async () => {\r\n    const lastScore = Data[Data.length - 1].score;\r\n    const erStatus = lastScore === 'ผ่านการประเมินหัวข้อ' ? 'กำลังดำเนินการ' : 'ไม่ผ่าน'; // Set Er_status based on final result\r\n    const erName = selectedProject.P_name; // Get the project name for Er_name\r\n  \r\n    try {\r\n      const response = await axios.post('http://localhost:9999/Exam_results', {\r\n        Er_name: erName, // Use the project's name\r\n        Er_CSB01: lastScore,\r\n        Er_status: erStatus\r\n      });\r\n      console.log('Score saved successfully:', response.data);\r\n    } catch (error) {\r\n      console.error('Error saving score:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <Grid container spacing={gridSpacing}>\r\n          <Grid item xs={12}>\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Project Name</TableCell>\r\n                    <TableCell>Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {projects.map((project, index) => (\r\n                    <TableRow key={project.P_id}>\r\n                      <TableCell>{project.P_name}</TableCell>\r\n                      <TableCell>\r\n                        <Button onClick={() => handleLinkClick(index)}>Evaluate</Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Evaluate Project</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"h6\">{selectedProject?.P_name}</Typography>\r\n          {Data.map(item => (\r\n            <div key={item.id}>\r\n              <Typography variant=\"subtitle1\">{item.name}</Typography>\r\n              <div>\r\n                {item.description.map((desc, idx) => (\r\n                  <Typography key={idx}>{desc}</Typography>\r\n                ))}\r\n              </div>\r\n              <div>\r\n                <Button onClick={() => handleCheckboxChange(item.id, 'yes')}>Pass</Button>\r\n                <Button onClick={() => handleCheckboxChange(item.id, 'no')}>Fail</Button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleSavePopup}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputScoreCSB01;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}