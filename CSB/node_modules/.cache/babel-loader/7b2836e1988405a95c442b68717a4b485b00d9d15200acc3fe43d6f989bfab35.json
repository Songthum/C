{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\create-react-app\\\\src\\\\views\\\\dashboard\\\\Default\\\\CSB\\\\ManageExamRoom.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { TextField, Select, MenuItem, FormControl, InputLabel, Button, Grid, Typography } from '@mui/material';\n// import { DemoContainer } from '@mui/x-date-pickers/internals/demo';\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\n// import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\n// import { DatePicker } from '@mui/x-date-pickers/DatePicker';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// const ManageExamRoom = () => {\n//     const [option, setOption] = useState('');\n//     const [room, setRoom] = useState('');\n//     const [numberOfFields, setNumberOfFields] = useState(0);\n//     const [numberOfFields2, setNumberOfFields2] = useState(0);\n//     const [dayOn1, setDayOn1] = useState(null);\n//     const [timeOn1, setTimeOn1] = useState([]);\n//     const [invalidTimes, setInvalidTimes] = useState([]);\n\n//     const handleInputChange = (event) => {\n//         setNumberOfFields(parseInt(event.target.value) || 0);\n//     };\n\n//     const handleInputChange2 = (event) => {\n//         setNumberOfFields2(parseInt(event.target.value) || 0);\n//     };\n\n//     const [teacherValues, setTeacherValues] = useState(Array(numberOfFields).fill(''));\n//     const [positionValues, setPositionValues] = useState(Array(numberOfFields).fill(''));\n//     const [ProjectValues, setProjectValues] = useState(Array(numberOfFields2).fill(''));\n\n//     const handleSelectTeacher = (index) => (event) => {\n//         const newTeacherValues = [...teacherValues];\n//         newTeacherValues[index] = event.target.value;\n//         setTeacherValues(newTeacherValues);\n//     };\n\n//     const handleSelectPosition = (index) => (event) => {\n//         const newPositionValues = [...positionValues];\n//         newPositionValues[index] = event.target.value;\n//         setPositionValues(newPositionValues);\n//     };\n\n//     const handleSelectProject = (index) => (event) => {\n//         const newProjectValues = [...ProjectValues];\n//         newProjectValues[index] = event.target.value;\n//         setProjectValues(newProjectValues);\n//     };\n\n//     const handleSelectTime = (index) => (event) => {\n//         const newTime = event.target.value;\n//         const newTimeOn1 = [...timeOn1];\n//         newTimeOn1[index] = newTime;\n\n//         // Check for duplicates\n//         const timeCounts = newTimeOn1.reduce((acc, time) => {\n//             acc[time] = (acc[time] || 0) + 1;\n//             return acc;\n//         }, {});\n//         const newInvalidTimes = newTimeOn1.map((time, i) => timeCounts[time] > 1 && i !== newTimeOn1.indexOf(time));\n\n//         setTimeOn1(newTimeOn1);\n//         setInvalidTimes(newInvalidTimes);\n//     };\n\n//     const getFilteredTeachers = (index) => {\n//         const selectedTeachers = teacherValues.filter((_, i) => i !== index);\n//         return Teacher.filter((teacher) => !selectedTeachers.includes(teacher.ID));\n//     };\n\n//     const getFilteredPositions = (index) => {\n//         const selectedPositions = positionValues.filter((_, i) => i !== index);\n//         return positionData.filter((position) => !selectedPositions.includes(position.ID) || position.ID !== 'No1');\n//     };\n\n//     const getFilteredProject = (index) => {\n//         const selectedProject = ProjectValues.filter((_, i) => i !== index);\n//         return ProjectData.filter((ProjectData) => !selectedProject.includes(ProjectData.ID));\n//     };\n\n//     const testData = [\n//         { ID: 'CSB01', Name: 'สอบหัวข้อ' },\n//         { ID: 'CSB02', Name: 'สอบก้าวหน้า' },\n//         { ID: 'CSB03', Name: 'สอบป้องกัน' }\n//     ];\n\n//     const roomData = [\n//         { ID: '78-618' },\n//         { ID: '78-618/2' },\n//         { ID: '78-619' },\n//         { ID: '78-621' },\n//         { ID: '78-617' }\n//     ];\n\n//     const Teacher = [\n//         { ID: 'NLP', Name: 'ลือพล ไม่น่ารักเลย' },\n//         { ID: 'SWK', Name: 'สุวัชชัย ตัวตึง' },\n//         { ID: 'KAB', Name: 'คัณฑารัตน์ สุดละเอียด' },\n//         { ID: 'CRL', Name: 'เฉียบวุฒิ สุดจ้าบ' },\n//         { ID: 'ARN', Name: 'เอิญ ไม่ใจดี' },\n//         { ID: 'TNA', Name: 'ธณาภัทร ใจร้าย' },\n//         { ID: 'BLP', Name: 'เบญจพร ร้ายกาจ' },\n//         { ID: 'NAT', Name: 'ณัฐวุฒิ ช่วยด้วย' },\n//         { ID: 'KOB', Name: 'กอบเกียรติ อิหยังวะ' },\n//         { ID: 'ANW', Name: 'อนุสรณ์ หนีไป' }\n//     ];\n\n//     const positionData = [\n//         { ID: 'No1', Name: 'ประธาน' },\n//         { ID: 'No2', Name: 'กรรมการ' }\n//     ];\n\n//     const ProjectData = [\n//         { ID: 'SP1-01', Name: 'การตรวจสอบจบ' },\n//         { ID: 'SP1-02', Name: 'การยื่นสอบปริญญานิพนจ์' },\n//         { ID: 'SP1-03', Name: 'โมเดลจำลองอะตอม' },\n//         { ID: 'SP1-04', Name: 'AIจับมนุษย์' },\n//         { ID: 'SP1-05', Name: 'โปรแกรมปลูกต้นไม้' },\n//         { ID: 'SP1-06', Name: 'โปรแกรมออกแบบการนำเสนอ' },\n//         { ID: 'SP1-07', Name: 'โปรแกรมคำนวณพื้นที่' },\n//         { ID: 'SP1-08', Name: 'การจัดการการสอบสำหรับ CSB' },\n//         { ID: 'SP1-09', Name: 'โปรแกรมจองตั๋วรถไฟ' },\n//         { ID: 'SP1-10', Name: 'เกมเอาตัวรอดในCS' }\n//     ];\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//                         จัดห้องสอบ\n//                     </Typography>\n//                     <Grid container spacing={2} alignItems=\"center\">\n//                         <Grid item xs={10} md={4}>\n//                             <FormControl fullWidth>\n//                                 <InputLabel id=\"option-label\">เลือกการสอบ</InputLabel>\n//                                 <Select\n//                                     label=\"รหัสการสอบ\"\n//                                     id=\"option\"\n//                                     value={option}\n//                                     onChange={(e) => setOption(e.target.value)}\n//                                 >\n//                                     {testData.map((test) => (\n//                                         <MenuItem key={test.ID} value={test.ID}>\n//                                             {test.ID + ' : ' + test.Name}\n//                                         </MenuItem>\n//                                     ))}\n//                                 </Select>\n//                             </FormControl>\n//                         </Grid>\n//                         <Grid item xs={12} md={4}>\n//                             <FormControl fullWidth>\n//                                 <InputLabel id=\"room-label\">ห้องสอบ</InputLabel>\n//                                 <Select\n//                                     label=\"ห้องสอบ\"\n//                                     id=\"room\"\n//                                     value={room}\n//                                     onChange={(e) => setRoom(e.target.value)}\n//                                 >\n//                                     {roomData.map((room) => (\n//                                         <MenuItem key={room.ID} value={room.ID}>\n//                                             {room.ID}\n//                                         </MenuItem>\n//                                     ))}\n//                                 </Select>\n//                             </FormControl>\n//                         </Grid>\n//                         <Grid item xs={12} md={4}>\n//                             <FormControl fullWidth>\n//                             <LocalizationProvider dateAdapter={AdapterDayjs}>\n//                                 <DemoContainer components={['DatePicker']}>\n//                                     <DatePicker\n//                                         label=\"วันที่สอบ\"\n//                                         value={dayOn1}\n//                                         onChange={(newValue) => setDayOn1(newValue)}\n//                                         renderInput={(params) => <TextField {...params} fullWidth />}\n//                                     />\n//                                 </DemoContainer>\n//                             </LocalizationProvider>\n//                             </FormControl>\n//                         </Grid>\n//                     </Grid>\n//                     <Grid container spacing={3} mt={3}>\n//                         <Grid item xs={12}>\n//                             <Typography variant=\"h6\" gutterBottom>\n//                                 จำนวนกรรมการสอบ\n//                             </Typography>\n//                             <TextField\n//                                 label=\"จำนวนกรรมการสอบ\"\n//                                 type=\"number\"\n//                                 value={numberOfFields}\n//                                 onChange={handleInputChange}\n//                                 fullWidth\n//                             />\n//                         </Grid>\n//                         {Array.from({ length: numberOfFields }).map((_, index) => (\n//                             <Grid item xs={12} md={6} key={index}>\n//                                 <Typography variant=\"h6\" gutterBottom>\n//                                     รายชื่อกรรมการที่ {index + 1}\n//                                 </Typography>\n//                                 <FormControl fullWidth>\n//                                     <InputLabel id={`teacher-label-${index}`}>เลือกกรรมการ</InputLabel>\n//                                     <Select\n//                                         label=\"เลือกกรรมการ\"\n//                                         id={`teacher-${index}`}\n//                                         value={teacherValues[index]}\n//                                         onChange={handleSelectTeacher(index)}\n//                                     >\n//                                         {getFilteredTeachers(index).map((teacher) => (\n//                                             <MenuItem key={teacher.ID} value={teacher.ID}>\n//                                                 {teacher.Name}\n//                                             </MenuItem>\n//                                         ))}\n//                                     </Select>\n//                                 </FormControl>\n//                                 <FormControl fullWidth>\n//                                     <InputLabel id={`position-label-${index}`}>เลือกตำแหน่ง</InputLabel>\n//                                     <Select\n//                                         label=\"ตำแหน่ง\"\n//                                         id={`position-${index}`}\n//                                         value={positionValues[index]}\n//                                         onChange={handleSelectPosition(index)}\n//                                     >\n//                                         {getFilteredPositions(index).map((position) => (\n//                                             <MenuItem key={position.ID} value={position.ID}>\n//                                                 {position.Name}\n//                                             </MenuItem>\n//                                         ))}\n//                                     </Select>\n//                                 </FormControl>\n//                             </Grid>\n//                         ))}\n//                         <Grid item xs={12}>\n//                             <Typography variant=\"h6\" gutterBottom>\n//                                 จำนวนโปรเจคที่สอบ\n//                             </Typography>\n//                             <TextField\n//                                 label=\"จำนวนโปรเจค\"\n//                                 type=\"number\"\n//                                 value={numberOfFields2}\n//                                 onChange={handleInputChange2}\n//                                 fullWidth\n//                             />\n//                         </Grid>\n//                         {Array.from({ length: numberOfFields2 }).map((_, index) => (\n//                             <Grid item xs={12} md={6} key={index}>\n//                                 <Typography variant=\"h6\" gutterBottom>\n//                                     รายชื่อโปรเจคที่ {index + 1}\n//                                 </Typography>\n//                                 <FormControl fullWidth>\n//                                     <InputLabel id={`project-label-${index}`}>เลือกโปรเจค</InputLabel>\n//                                     <Select\n//                                         label=\"เลือกโปรเจค\"\n//                                         id={`project-${index}`}\n//                                         value={ProjectValues[index]}\n//                                         onChange={handleSelectProject(index)}\n//                                     >\n//                                         {getFilteredProject(index).map((project) => (\n//                                             <MenuItem key={project.ID} value={project.ID}>\n//                                                 {project.Name}\n//                                             </MenuItem>\n//                                         ))}\n//                                     </Select>\n//                                 </FormControl>\n//                             </Grid>\n//                         ))}\n//                         <Grid item xs={12}>\n//                             <Typography variant=\"h6\" gutterBottom>\n//                                 เวลาที่สอบ\n//                             </Typography>\n//                             {Array.from({ length: numberOfFields }).map((_, index) => (\n//                                 <FormControl fullWidth margin=\"normal\" key={index}>\n//                                     <InputLabel id={`time-label-${index}`}>เวลา {index + 1}</InputLabel>\n//                                     <Select\n//                                         label=\"เวลา\"\n//                                         id={`time-${index}`}\n//                                         value={timeOn1[index] || ''}\n//                                         onChange={handleSelectTime(index)}\n//                                     >\n//                                         {[...Array(24)].map((_, i) => (\n//                                             <MenuItem key={i} value={`${i}:00`}>\n//                                                 {i}:00\n//                                             </MenuItem>\n//                                         ))}\n//                                     </Select>\n//                                     {invalidTimes[index] && (\n//                                         <Typography color=\"error\" variant=\"body2\">\n//                                             Duplicate time selected!\n//                                         </Typography>\n//                                     )}\n//                                 </FormControl>\n//                             ))}\n//                         </Grid>\n//                         <Grid item xs={12}>\n//                             <Button variant=\"contained\" color=\"primary\">\n//                                 บันทึก\n//                             </Button>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard>\n//     );\n// };\n\n// export default ManageExamRoom;\n\nimport React, { useState } from 'react';\nimport { TextField, Select, MenuItem, FormControl, InputLabel, Button, Grid, Typography } from '@mui/material';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageExamRoom = () => {\n  _s();\n  const [option, setOption] = useState('');\n  const [room, setRoom] = useState('');\n  const [date, setDate] = useState(null);\n  const [numOfMembers, setNumOfMembers] = useState(0);\n  const [members, setMembers] = useState([]);\n\n  // Mock data for select options\n  const testData = [{\n    ID: 'CSB01',\n    Name: 'สอบหัวข้อ'\n  }, {\n    ID: 'CSB02',\n    Name: 'สอบก้าวหน้า'\n  }, {\n    ID: 'CSB03',\n    Name: 'สอบป้องกัน'\n  }];\n  const roomData = [{\n    ID: '78-618'\n  }, {\n    ID: '78-618/2'\n  }, {\n    ID: '78-619'\n  }, {\n    ID: '78-621'\n  }, {\n    ID: '78-617'\n  }];\n  const teacherData = [{\n    ID: 'NLP',\n    Name: 'ลือพล ไม่น่ารักเลย'\n  }, {\n    ID: 'SWK',\n    Name: 'สุวัชชัย ตัวตึง'\n  }, {\n    ID: 'KAB',\n    Name: 'คัณฑารัตน์ สุดละเอียด'\n  }, {\n    ID: 'CRL',\n    Name: 'เฉียบวุฒิ สุดจ้าบ'\n  }, {\n    ID: 'ARN',\n    Name: 'เอิญ ไม่ใจดี'\n  }, {\n    ID: 'TNA',\n    Name: 'ธณาภัทร ใจร้าย'\n  }, {\n    ID: 'BLP',\n    Name: 'เบญจพร ร้ายกาจ'\n  }, {\n    ID: 'NAT',\n    Name: 'ณัฐวุฒิ ช่วยด้วย'\n  }, {\n    ID: 'KOB',\n    Name: 'กอบเกียรติ อิหยังวะ'\n  }, {\n    ID: 'ANW',\n    Name: 'อนุสรณ์ หนีไป'\n  }];\n  const handleNumOfMembersChange = event => {\n    const newNumOfMembers = parseInt(event.target.value) || 0;\n    setNumOfMembers(newNumOfMembers);\n    setMembers(Array(newNumOfMembers).fill({\n      teacher: '',\n      position: ''\n    }));\n  };\n  const handleMemberChange = (index, field) => event => {\n    const newMembers = [...members];\n    newMembers[index][field] = event.target.value;\n    setMembers(newMembers);\n  };\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"\\u0E08\\u0E31\\u0E14\\u0E2B\\u0E49\\u0E2D\\u0E07\\u0E2A\\u0E2D\\u0E1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"option-label\",\n                children: \"\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E01\\u0E32\\u0E23\\u0E2A\\u0E2D\\u0E1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"option-label\",\n                value: option,\n                onChange: e => setOption(e.target.value),\n                children: testData.map(test => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: test.ID,\n                  children: test.ID + ' : ' + test.Name\n                }, test.ID, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"room-label\",\n                children: \"\\u0E2B\\u0E49\\u0E2D\\u0E07\\u0E2A\\u0E2D\\u0E1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"room-label\",\n                value: room,\n                onChange: e => setRoom(e.target.value),\n                children: roomData.map(room => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: room.ID,\n                  children: room.ID\n                }, room.ID, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDayjs,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  label: \"\\u0E27\\u0E31\\u0E19\\u0E17\\u0E35\\u0E48\\u0E2A\\u0E2D\\u0E1A\",\n                  value: date,\n                  onChange: newValue => setDate(newValue),\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                    ...params,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 66\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E01\\u0E23\\u0E23\\u0E21\\u0E01\\u0E32\\u0E23\\u0E2A\\u0E2D\\u0E1A\",\n                type: \"number\",\n                value: numOfMembers,\n                onChange: handleNumOfMembersChange,\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 25\n          }, this), members.map((member, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                marginTop: 3\n              },\n              fontSize: '20px',\n              children: [\"\\u0E01\\u0E23\\u0E23\\u0E21\\u0E01\\u0E32\\u0E23\\u0E2A\\u0E2D\\u0E1A \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: `teacher-label-${index}`,\n                    children: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E01\\u0E23\\u0E23\\u0E21\\u0E01\\u0E32\\u0E23\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: `teacher-label-${index}`,\n                    value: member.teacher,\n                    onChange: handleMemberChange(index, 'teacher'),\n                    children: teacherData.map(teacher => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: teacher.ID,\n                      children: teacher.Name\n                    }, teacher.ID, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 53\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: `position-label-${index}`,\n                    children: \"\\u0E15\\u0E33\\u0E41\\u0E2B\\u0E19\\u0E48\\u0E07\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: `position-label-${index}`,\n                    value: member.position,\n                    onChange: handleMemberChange(index, 'position'),\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Chair\",\n                      children: \"\\u0E1B\\u0E23\\u0E30\\u0E18\\u0E32\\u0E19\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: \"Member\",\n                      children: \"\\u0E01\\u0E23\\u0E23\\u0E21\\u0E01\\u0E32\\u0E23\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sx: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => console.log('Save clicked'),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 9\n  }, this);\n};\n_s(ManageExamRoom, \"TNSrrD3YGOLBkeq2wPPGwttPjzs=\");\n_c = ManageExamRoom;\nexport default ManageExamRoom;\nvar _c;\n$RefreshReg$(_c, \"ManageExamRoom\");","map":{"version":3,"names":["React","useState","TextField","Select","MenuItem","FormControl","InputLabel","Button","Grid","Typography","LocalizationProvider","DatePicker","AdapterDayjs","MainCard","gridSpacing","jsxDEV","_jsxDEV","ManageExamRoom","_s","option","setOption","room","setRoom","date","setDate","numOfMembers","setNumOfMembers","members","setMembers","testData","ID","Name","roomData","teacherData","handleNumOfMembersChange","event","newNumOfMembers","parseInt","target","value","Array","fill","teacher","position","handleMemberChange","index","field","newMembers","children","container","spacing","item","xs","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","md","fullWidth","id","labelId","onChange","e","map","test","dateAdapter","label","newValue","renderInput","params","type","member","sx","marginTop","fontSize","textAlign","onClick","console","log","_c","$RefreshReg$"],"sources":["C:/test/create-react-app/src/views/dashboard/Default/CSB/ManageExamRoom.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { TextField, Select, MenuItem, FormControl, InputLabel, Button, Grid, Typography } from '@mui/material';\r\n// import { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\n// import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n// import { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n// import MainCard from 'ui-component/cards/MainCard';\r\n// import { gridSpacing } from 'store/constant';\r\n\r\n// const ManageExamRoom = () => {\r\n//     const [option, setOption] = useState('');\r\n//     const [room, setRoom] = useState('');\r\n//     const [numberOfFields, setNumberOfFields] = useState(0);\r\n//     const [numberOfFields2, setNumberOfFields2] = useState(0);\r\n//     const [dayOn1, setDayOn1] = useState(null);\r\n//     const [timeOn1, setTimeOn1] = useState([]);\r\n//     const [invalidTimes, setInvalidTimes] = useState([]);\r\n\r\n//     const handleInputChange = (event) => {\r\n//         setNumberOfFields(parseInt(event.target.value) || 0);\r\n//     };\r\n\r\n//     const handleInputChange2 = (event) => {\r\n//         setNumberOfFields2(parseInt(event.target.value) || 0);\r\n//     };\r\n\r\n//     const [teacherValues, setTeacherValues] = useState(Array(numberOfFields).fill(''));\r\n//     const [positionValues, setPositionValues] = useState(Array(numberOfFields).fill(''));\r\n//     const [ProjectValues, setProjectValues] = useState(Array(numberOfFields2).fill(''));\r\n\r\n//     const handleSelectTeacher = (index) => (event) => {\r\n//         const newTeacherValues = [...teacherValues];\r\n//         newTeacherValues[index] = event.target.value;\r\n//         setTeacherValues(newTeacherValues);\r\n//     };\r\n\r\n//     const handleSelectPosition = (index) => (event) => {\r\n//         const newPositionValues = [...positionValues];\r\n//         newPositionValues[index] = event.target.value;\r\n//         setPositionValues(newPositionValues);\r\n//     };\r\n\r\n//     const handleSelectProject = (index) => (event) => {\r\n//         const newProjectValues = [...ProjectValues];\r\n//         newProjectValues[index] = event.target.value;\r\n//         setProjectValues(newProjectValues);\r\n//     };\r\n\r\n//     const handleSelectTime = (index) => (event) => {\r\n//         const newTime = event.target.value;\r\n//         const newTimeOn1 = [...timeOn1];\r\n//         newTimeOn1[index] = newTime;\r\n\r\n//         // Check for duplicates\r\n//         const timeCounts = newTimeOn1.reduce((acc, time) => {\r\n//             acc[time] = (acc[time] || 0) + 1;\r\n//             return acc;\r\n//         }, {});\r\n//         const newInvalidTimes = newTimeOn1.map((time, i) => timeCounts[time] > 1 && i !== newTimeOn1.indexOf(time));\r\n\r\n//         setTimeOn1(newTimeOn1);\r\n//         setInvalidTimes(newInvalidTimes);\r\n//     };\r\n\r\n//     const getFilteredTeachers = (index) => {\r\n//         const selectedTeachers = teacherValues.filter((_, i) => i !== index);\r\n//         return Teacher.filter((teacher) => !selectedTeachers.includes(teacher.ID));\r\n//     };\r\n\r\n//     const getFilteredPositions = (index) => {\r\n//         const selectedPositions = positionValues.filter((_, i) => i !== index);\r\n//         return positionData.filter((position) => !selectedPositions.includes(position.ID) || position.ID !== 'No1');\r\n//     };\r\n\r\n//     const getFilteredProject = (index) => {\r\n//         const selectedProject = ProjectValues.filter((_, i) => i !== index);\r\n//         return ProjectData.filter((ProjectData) => !selectedProject.includes(ProjectData.ID));\r\n//     };\r\n\r\n//     const testData = [\r\n//         { ID: 'CSB01', Name: 'สอบหัวข้อ' },\r\n//         { ID: 'CSB02', Name: 'สอบก้าวหน้า' },\r\n//         { ID: 'CSB03', Name: 'สอบป้องกัน' }\r\n//     ];\r\n\r\n//     const roomData = [\r\n//         { ID: '78-618' },\r\n//         { ID: '78-618/2' },\r\n//         { ID: '78-619' },\r\n//         { ID: '78-621' },\r\n//         { ID: '78-617' }\r\n//     ];\r\n\r\n//     const Teacher = [\r\n//         { ID: 'NLP', Name: 'ลือพล ไม่น่ารักเลย' },\r\n//         { ID: 'SWK', Name: 'สุวัชชัย ตัวตึง' },\r\n//         { ID: 'KAB', Name: 'คัณฑารัตน์ สุดละเอียด' },\r\n//         { ID: 'CRL', Name: 'เฉียบวุฒิ สุดจ้าบ' },\r\n//         { ID: 'ARN', Name: 'เอิญ ไม่ใจดี' },\r\n//         { ID: 'TNA', Name: 'ธณาภัทร ใจร้าย' },\r\n//         { ID: 'BLP', Name: 'เบญจพร ร้ายกาจ' },\r\n//         { ID: 'NAT', Name: 'ณัฐวุฒิ ช่วยด้วย' },\r\n//         { ID: 'KOB', Name: 'กอบเกียรติ อิหยังวะ' },\r\n//         { ID: 'ANW', Name: 'อนุสรณ์ หนีไป' }\r\n//     ];\r\n\r\n//     const positionData = [\r\n//         { ID: 'No1', Name: 'ประธาน' },\r\n//         { ID: 'No2', Name: 'กรรมการ' }\r\n//     ];\r\n\r\n//     const ProjectData = [\r\n//         { ID: 'SP1-01', Name: 'การตรวจสอบจบ' },\r\n//         { ID: 'SP1-02', Name: 'การยื่นสอบปริญญานิพนจ์' },\r\n//         { ID: 'SP1-03', Name: 'โมเดลจำลองอะตอม' },\r\n//         { ID: 'SP1-04', Name: 'AIจับมนุษย์' },\r\n//         { ID: 'SP1-05', Name: 'โปรแกรมปลูกต้นไม้' },\r\n//         { ID: 'SP1-06', Name: 'โปรแกรมออกแบบการนำเสนอ' },\r\n//         { ID: 'SP1-07', Name: 'โปรแกรมคำนวณพื้นที่' },\r\n//         { ID: 'SP1-08', Name: 'การจัดการการสอบสำหรับ CSB' },\r\n//         { ID: 'SP1-09', Name: 'โปรแกรมจองตั๋วรถไฟ' },\r\n//         { ID: 'SP1-10', Name: 'เกมเอาตัวรอดในCS' }\r\n//     ];\r\n\r\n//     return (\r\n//         <MainCard>\r\n//             <Grid container spacing={gridSpacing}>\r\n//                 <Grid item xs={12}>\r\n//                     <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n//                         จัดห้องสอบ\r\n//                     </Typography>\r\n//                     <Grid container spacing={2} alignItems=\"center\">\r\n//                         <Grid item xs={10} md={4}>\r\n//                             <FormControl fullWidth>\r\n//                                 <InputLabel id=\"option-label\">เลือกการสอบ</InputLabel>\r\n//                                 <Select\r\n//                                     label=\"รหัสการสอบ\"\r\n//                                     id=\"option\"\r\n//                                     value={option}\r\n//                                     onChange={(e) => setOption(e.target.value)}\r\n//                                 >\r\n//                                     {testData.map((test) => (\r\n//                                         <MenuItem key={test.ID} value={test.ID}>\r\n//                                             {test.ID + ' : ' + test.Name}\r\n//                                         </MenuItem>\r\n//                                     ))}\r\n//                                 </Select>\r\n//                             </FormControl>\r\n//                         </Grid>\r\n//                         <Grid item xs={12} md={4}>\r\n//                             <FormControl fullWidth>\r\n//                                 <InputLabel id=\"room-label\">ห้องสอบ</InputLabel>\r\n//                                 <Select\r\n//                                     label=\"ห้องสอบ\"\r\n//                                     id=\"room\"\r\n//                                     value={room}\r\n//                                     onChange={(e) => setRoom(e.target.value)}\r\n//                                 >\r\n//                                     {roomData.map((room) => (\r\n//                                         <MenuItem key={room.ID} value={room.ID}>\r\n//                                             {room.ID}\r\n//                                         </MenuItem>\r\n//                                     ))}\r\n//                                 </Select>\r\n//                             </FormControl>\r\n//                         </Grid>\r\n//                         <Grid item xs={12} md={4}>\r\n//                             <FormControl fullWidth>\r\n//                             <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n//                                 <DemoContainer components={['DatePicker']}>\r\n//                                     <DatePicker\r\n//                                         label=\"วันที่สอบ\"\r\n//                                         value={dayOn1}\r\n//                                         onChange={(newValue) => setDayOn1(newValue)}\r\n//                                         renderInput={(params) => <TextField {...params} fullWidth />}\r\n//                                     />\r\n//                                 </DemoContainer>\r\n//                             </LocalizationProvider>\r\n//                             </FormControl>\r\n//                         </Grid>\r\n//                     </Grid>\r\n//                     <Grid container spacing={3} mt={3}>\r\n//                         <Grid item xs={12}>\r\n//                             <Typography variant=\"h6\" gutterBottom>\r\n//                                 จำนวนกรรมการสอบ\r\n//                             </Typography>\r\n//                             <TextField\r\n//                                 label=\"จำนวนกรรมการสอบ\"\r\n//                                 type=\"number\"\r\n//                                 value={numberOfFields}\r\n//                                 onChange={handleInputChange}\r\n//                                 fullWidth\r\n//                             />\r\n//                         </Grid>\r\n//                         {Array.from({ length: numberOfFields }).map((_, index) => (\r\n//                             <Grid item xs={12} md={6} key={index}>\r\n//                                 <Typography variant=\"h6\" gutterBottom>\r\n//                                     รายชื่อกรรมการที่ {index + 1}\r\n//                                 </Typography>\r\n//                                 <FormControl fullWidth>\r\n//                                     <InputLabel id={`teacher-label-${index}`}>เลือกกรรมการ</InputLabel>\r\n//                                     <Select\r\n//                                         label=\"เลือกกรรมการ\"\r\n//                                         id={`teacher-${index}`}\r\n//                                         value={teacherValues[index]}\r\n//                                         onChange={handleSelectTeacher(index)}\r\n//                                     >\r\n//                                         {getFilteredTeachers(index).map((teacher) => (\r\n//                                             <MenuItem key={teacher.ID} value={teacher.ID}>\r\n//                                                 {teacher.Name}\r\n//                                             </MenuItem>\r\n//                                         ))}\r\n//                                     </Select>\r\n//                                 </FormControl>\r\n//                                 <FormControl fullWidth>\r\n//                                     <InputLabel id={`position-label-${index}`}>เลือกตำแหน่ง</InputLabel>\r\n//                                     <Select\r\n//                                         label=\"ตำแหน่ง\"\r\n//                                         id={`position-${index}`}\r\n//                                         value={positionValues[index]}\r\n//                                         onChange={handleSelectPosition(index)}\r\n//                                     >\r\n//                                         {getFilteredPositions(index).map((position) => (\r\n//                                             <MenuItem key={position.ID} value={position.ID}>\r\n//                                                 {position.Name}\r\n//                                             </MenuItem>\r\n//                                         ))}\r\n//                                     </Select>\r\n//                                 </FormControl>\r\n//                             </Grid>\r\n//                         ))}\r\n//                         <Grid item xs={12}>\r\n//                             <Typography variant=\"h6\" gutterBottom>\r\n//                                 จำนวนโปรเจคที่สอบ\r\n//                             </Typography>\r\n//                             <TextField\r\n//                                 label=\"จำนวนโปรเจค\"\r\n//                                 type=\"number\"\r\n//                                 value={numberOfFields2}\r\n//                                 onChange={handleInputChange2}\r\n//                                 fullWidth\r\n//                             />\r\n//                         </Grid>\r\n//                         {Array.from({ length: numberOfFields2 }).map((_, index) => (\r\n//                             <Grid item xs={12} md={6} key={index}>\r\n//                                 <Typography variant=\"h6\" gutterBottom>\r\n//                                     รายชื่อโปรเจคที่ {index + 1}\r\n//                                 </Typography>\r\n//                                 <FormControl fullWidth>\r\n//                                     <InputLabel id={`project-label-${index}`}>เลือกโปรเจค</InputLabel>\r\n//                                     <Select\r\n//                                         label=\"เลือกโปรเจค\"\r\n//                                         id={`project-${index}`}\r\n//                                         value={ProjectValues[index]}\r\n//                                         onChange={handleSelectProject(index)}\r\n//                                     >\r\n//                                         {getFilteredProject(index).map((project) => (\r\n//                                             <MenuItem key={project.ID} value={project.ID}>\r\n//                                                 {project.Name}\r\n//                                             </MenuItem>\r\n//                                         ))}\r\n//                                     </Select>\r\n//                                 </FormControl>\r\n//                             </Grid>\r\n//                         ))}\r\n//                         <Grid item xs={12}>\r\n//                             <Typography variant=\"h6\" gutterBottom>\r\n//                                 เวลาที่สอบ\r\n//                             </Typography>\r\n//                             {Array.from({ length: numberOfFields }).map((_, index) => (\r\n//                                 <FormControl fullWidth margin=\"normal\" key={index}>\r\n//                                     <InputLabel id={`time-label-${index}`}>เวลา {index + 1}</InputLabel>\r\n//                                     <Select\r\n//                                         label=\"เวลา\"\r\n//                                         id={`time-${index}`}\r\n//                                         value={timeOn1[index] || ''}\r\n//                                         onChange={handleSelectTime(index)}\r\n//                                     >\r\n//                                         {[...Array(24)].map((_, i) => (\r\n//                                             <MenuItem key={i} value={`${i}:00`}>\r\n//                                                 {i}:00\r\n//                                             </MenuItem>\r\n//                                         ))}\r\n//                                     </Select>\r\n//                                     {invalidTimes[index] && (\r\n//                                         <Typography color=\"error\" variant=\"body2\">\r\n//                                             Duplicate time selected!\r\n//                                         </Typography>\r\n//                                     )}\r\n//                                 </FormControl>\r\n//                             ))}\r\n//                         </Grid>\r\n//                         <Grid item xs={12}>\r\n//                             <Button variant=\"contained\" color=\"primary\">\r\n//                                 บันทึก\r\n//                             </Button>\r\n//                         </Grid>\r\n//                     </Grid>\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </MainCard>\r\n//     );\r\n// };\r\n\r\n// export default ManageExamRoom;\r\n\r\nimport React, { useState } from 'react';\r\nimport { TextField, Select, MenuItem, FormControl, InputLabel, Button, Grid, Typography } from '@mui/material';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nconst ManageExamRoom = () => {\r\n    const [option, setOption] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [date, setDate] = useState(null);\r\n    const [numOfMembers, setNumOfMembers] = useState(0);\r\n    const [members, setMembers] = useState([]);\r\n\r\n    // Mock data for select options\r\n    const testData = [\r\n        { ID: 'CSB01', Name: 'สอบหัวข้อ' },\r\n        { ID: 'CSB02', Name: 'สอบก้าวหน้า' },\r\n        { ID: 'CSB03', Name: 'สอบป้องกัน' }\r\n    ];\r\n\r\n    const roomData = [\r\n        { ID: '78-618' },\r\n        { ID: '78-618/2' },\r\n        { ID: '78-619' },\r\n        { ID: '78-621' },\r\n        { ID: '78-617' }\r\n    ];\r\n\r\n    const teacherData = [\r\n        { ID: 'NLP', Name: 'ลือพล ไม่น่ารักเลย' },\r\n        { ID: 'SWK', Name: 'สุวัชชัย ตัวตึง' },\r\n        { ID: 'KAB', Name: 'คัณฑารัตน์ สุดละเอียด' },\r\n        { ID: 'CRL', Name: 'เฉียบวุฒิ สุดจ้าบ' },\r\n        { ID: 'ARN', Name: 'เอิญ ไม่ใจดี' },\r\n        { ID: 'TNA', Name: 'ธณาภัทร ใจร้าย' },\r\n        { ID: 'BLP', Name: 'เบญจพร ร้ายกาจ' },\r\n        { ID: 'NAT', Name: 'ณัฐวุฒิ ช่วยด้วย' },\r\n        { ID: 'KOB', Name: 'กอบเกียรติ อิหยังวะ' },\r\n        { ID: 'ANW', Name: 'อนุสรณ์ หนีไป' }\r\n    ];\r\n\r\n    const handleNumOfMembersChange = (event) => {\r\n        const newNumOfMembers = parseInt(event.target.value) || 0;\r\n        setNumOfMembers(newNumOfMembers);\r\n        setMembers(Array(newNumOfMembers).fill({ teacher: '', position: '' }));\r\n    };\r\n\r\n    const handleMemberChange = (index, field) => (event) => {\r\n        const newMembers = [...members];\r\n        newMembers[index][field] = event.target.value;\r\n        setMembers(newMembers);\r\n    };\r\n\r\n    return (\r\n        <MainCard>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h2\" align=\"center\" gutterBottom>จัดห้องสอบ</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2}>\r\n                        {/* Select for test type */}\r\n                        <Grid item xs={12} md={4}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"option-label\">เลือกการสอบ</InputLabel>\r\n                                <Select\r\n                                    labelId=\"option-label\"\r\n                                    value={option}\r\n                                    onChange={(e) => setOption(e.target.value)}\r\n                                >\r\n                                    {testData.map((test) => (\r\n                                        <MenuItem key={test.ID} value={test.ID}>\r\n                                            {test.ID + ' : ' + test.Name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/* Select for exam room */}\r\n                        <Grid item xs={12} md={4}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"room-label\">ห้องสอบ</InputLabel>\r\n                                <Select\r\n                                    labelId=\"room-label\"\r\n                                    value={room}\r\n                                    onChange={(e) => setRoom(e.target.value)}\r\n                                >\r\n                                    {roomData.map((room) => (\r\n                                        <MenuItem key={room.ID} value={room.ID}>\r\n                                            {room.ID}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/* Date picker */}\r\n                        <Grid item xs={12} md={4}>\r\n                            <FormControl fullWidth>\r\n                                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                    <DatePicker\r\n                                        label=\"วันที่สอบ\"\r\n                                        value={date}\r\n                                        onChange={(newValue) => setDate(newValue)}\r\n                                        renderInput={(params) => <TextField {...params} fullWidth />}\r\n                                    />\r\n                                </LocalizationProvider>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/* Number of examiners */}\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth>\r\n                                <TextField\r\n                                    label=\"จำนวนกรรมการสอบ\"\r\n                                    type=\"number\"\r\n                                    value={numOfMembers}\r\n                                    onChange={handleNumOfMembersChange}\r\n                                    fullWidth\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/* Examiners info */}\r\n                        {members.map((member, index) => (\r\n                            <Grid item xs={12} key={index}>\r\n                                <Typography sx={{ marginTop: 3 }} fontSize={'20px'}>\r\n                                    กรรมการสอบ {index + 1}\r\n                                </Typography>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <FormControl fullWidth>\r\n                                            <InputLabel id={`teacher-label-${index}`}>ชื่อกรรมการ</InputLabel>\r\n                                            <Select\r\n                                                labelId={`teacher-label-${index}`}\r\n                                                value={member.teacher}\r\n                                                onChange={handleMemberChange(index, 'teacher')}\r\n                                            >\r\n                                                {teacherData.map((teacher) => (\r\n                                                    <MenuItem key={teacher.ID} value={teacher.ID}>\r\n                                                        {teacher.Name}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <FormControl fullWidth>\r\n                                            <InputLabel id={`position-label-${index}`}>ตำแหน่ง</InputLabel>\r\n                                            <Select\r\n                                                labelId={`position-label-${index}`}\r\n                                                value={member.position}\r\n                                                onChange={handleMemberChange(index, 'position')}\r\n                                            >\r\n                                                <MenuItem value=\"Chair\">ประธาน</MenuItem>\r\n                                                <MenuItem value=\"Member\">กรรมการ</MenuItem>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        ))}\r\n                        <Grid item xs={12} sx={{ textAlign: 'center' }}>\r\n                            <Button variant=\"contained\" onClick={() => console.log('Save clicked')}>\r\n                                Save\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ManageExamRoom;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}