{"ast":null,"code":"// import React, { useState } from 'react';\n// import { Button, TableCell, TableContainer, Table, TableHead, TableBody, TableRow, Select, MenuItem, TextField, Dialog, DialogContent, DialogActions } from '@mui/material';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// function RequestAdvisor() {\n//     const ProjectCSB = [\n//         {\n//             \"ID\": \"CSB1-01\",\n//             \"Name\": \"ระบบจัดการการยื่นจบสำหรับโครงการพิเศษสองภาษา\",\n//             \"Option\": \"อำนวยความสะดวกในการยื่นจบ\"\n//         },\n//         {\n//             \"ID\": \"CSB1-02\",\n//             \"Name\": \"ระบบจัดการการสอบโครงงานพิเศษสำหรับโครงการพิเศษสองภาษา\",\n//             \"Option\": \"อำนวยความสะดวกในการยื่นสอบจบ\"\n//         },\n//     ]\n\n//     const [tableData, setTableData] = useState('');\n//     const [openPopup, setOpenPopup] = useState(false);\n//     //const [selectedRowId, setSelectedRowId] = useState(null);\n\n//     const handlePopupClick = () => {\n//         setOpenPopup(true);\n//         //setSelectedRowId(id);\n//     };\n\n//     const handlePopupClose = () => {\n//         setOpenPopup(false);\n//     };\n\n//     const handleSaveClick = (id) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Save logic goes here\n//                 console.log(`Save button clicked for row ${id}`);\n//                 return { ...row, isEditable: false };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//         setOpenPopup(false);\n//     };\n\n//     const handleOptionChange = (id, event) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Update option logic goes here\n//                 console.log(`Option changed for row ${id}: ${event.target.value}`);\n//                 return { ...row, col4: event.target.value };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//     };\n\n//     const handleTextChange = (id, event) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Update text logic goes here\n//                 console.log(`Text changed for row ${id}: ${event.target.value}`);\n//                 return { ...row, col5: event.target.value };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//     };\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\n//                             <div>\n//                                 <h1>สถานะคำร้องขอเป็นอาจารย์ที่ปรึกษา</h1>\n//                                 <TableContainer>\n//                                     <Table>\n//                                         <TableHead>\n//                                             <TableRow>\n//                                                 <TableCell>ลำดับที่</TableCell>\n//                                                 <TableCell>ชื่อโครงงาน</TableCell>\n//                                                 <TableCell>รายละเอียดโดยย่อ</TableCell>\n//                                                 <TableCell>สถานะอนุมัติเป็นที่ปรึกษา</TableCell>\n//                                                 <TableCell>หมายเหตุ</TableCell>\n//                                                 <TableCell>บันทึก</TableCell>\n//                                             </TableRow>\n//                                         </TableHead>\n//                                         <TableBody>\n//                                             {tableData.length > 0 ? (\n//                                                 tableData.map(row => (\n//                                                     <TableRow key={row.id}>\n//                                                         <TableCell>{row.col1}</TableCell>\n//                                                         <TableCell>{row.col2}</TableCell>\n//                                                         <TableCell>\n//                                                             {row.col3}\n//                                                             {/* <Button disabled={!row.isEditable} onClick={() => handlePopupClick(row.id)}>Popup</Button> /}\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <Select value={row.col4} onChange={(e) => handleOptionChange(row.id, e)} disabled={!row.isEditable}>\n//                                                                 <MenuItem value=\"Option 1\">ยินยอม</MenuItem>\n//                                                                 <MenuItem value=\"Option 2\">ไม่ยินยอม</MenuItem>\n//                                                                 {/ Add more options as needed */}\n//                                                                 {/* </Select> */}\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <TextField value={row.col5} onChange={(e) => handleTextChange(row.id, e)} disabled={!row.isEditable} />\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <Button disabled={!row.isEditable} onClick={() => handleSaveClick(row.id)}>Save</Button>\n//                                                         </TableCell>\n//                                                     </TableRow>\n//                                                 ))\n//                                             ) : (\n//                                                 <TableRow>\n//                                                     <TableCell colSpan={6} align=\"center\">\n//                                                         No data available\n//                                                     </TableCell>\n//                                                 </TableRow>\n//                                             )}\n//                                         </TableBody>\n//                                     </Table>\n//                                 </TableContainer>\n//                                 <Dialog open={openPopup} onClose={handlePopupClose}>\n//                                     <DialogContent>\n//                                         รายละเอียดโดยย่อของโครงงานที่จะแสดงในนี้จะต้องดึงข้อมุลมาจากรายละเอียดของโครงงานที่จะพัฒนาจากการกรอกข้อมูลยื่นสอบหัวข้อ\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handlePopupClose}>Close</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                             </div>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard >\n//     );\n// }\n\n// export default RequestAdvisor;","map":{"version":3,"names":[],"sources":["C:/test/create-react-app/src/views/utilities/RequestAdvisor.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Button, TableCell, TableContainer, Table, TableHead, TableBody, TableRow, Select, MenuItem, TextField, Dialog, DialogContent, DialogActions } from '@mui/material';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// function RequestAdvisor() {\n//     const ProjectCSB = [\n//         {\n//             \"ID\": \"CSB1-01\",\n//             \"Name\": \"ระบบจัดการการยื่นจบสำหรับโครงการพิเศษสองภาษา\",\n//             \"Option\": \"อำนวยความสะดวกในการยื่นจบ\"\n//         },\n//         {\n//             \"ID\": \"CSB1-02\",\n//             \"Name\": \"ระบบจัดการการสอบโครงงานพิเศษสำหรับโครงการพิเศษสองภาษา\",\n//             \"Option\": \"อำนวยความสะดวกในการยื่นสอบจบ\"\n//         },\n//     ]\n\n//     const [tableData, setTableData] = useState('');\n//     const [openPopup, setOpenPopup] = useState(false);\n//     //const [selectedRowId, setSelectedRowId] = useState(null);\n\n//     const handlePopupClick = () => {\n//         setOpenPopup(true);\n//         //setSelectedRowId(id);\n//     };\n\n//     const handlePopupClose = () => {\n//         setOpenPopup(false);\n//     };\n\n//     const handleSaveClick = (id) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Save logic goes here\n//                 console.log(`Save button clicked for row ${id}`);\n//                 return { ...row, isEditable: false };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//         setOpenPopup(false);\n//     };\n\n//     const handleOptionChange = (id, event) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Update option logic goes here\n//                 console.log(`Option changed for row ${id}: ${event.target.value}`);\n//                 return { ...row, col4: event.target.value };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//     };\n\n//     const handleTextChange = (id, event) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Update text logic goes here\n//                 console.log(`Text changed for row ${id}: ${event.target.value}`);\n//                 return { ...row, col5: event.target.value };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//     };\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\n//                             <div>\n//                                 <h1>สถานะคำร้องขอเป็นอาจารย์ที่ปรึกษา</h1>\n//                                 <TableContainer>\n//                                     <Table>\n//                                         <TableHead>\n//                                             <TableRow>\n//                                                 <TableCell>ลำดับที่</TableCell>\n//                                                 <TableCell>ชื่อโครงงาน</TableCell>\n//                                                 <TableCell>รายละเอียดโดยย่อ</TableCell>\n//                                                 <TableCell>สถานะอนุมัติเป็นที่ปรึกษา</TableCell>\n//                                                 <TableCell>หมายเหตุ</TableCell>\n//                                                 <TableCell>บันทึก</TableCell>\n//                                             </TableRow>\n//                                         </TableHead>\n//                                         <TableBody>\n//                                             {tableData.length > 0 ? (\n//                                                 tableData.map(row => (\n//                                                     <TableRow key={row.id}>\n//                                                         <TableCell>{row.col1}</TableCell>\n//                                                         <TableCell>{row.col2}</TableCell>\n//                                                         <TableCell>\n//                                                             {row.col3}\n//                                                             {/* <Button disabled={!row.isEditable} onClick={() => handlePopupClick(row.id)}>Popup</Button> /}\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <Select value={row.col4} onChange={(e) => handleOptionChange(row.id, e)} disabled={!row.isEditable}>\n//                                                                 <MenuItem value=\"Option 1\">ยินยอม</MenuItem>\n//                                                                 <MenuItem value=\"Option 2\">ไม่ยินยอม</MenuItem>\n//                                                                 {/ Add more options as needed */}\n//                                                                 {/* </Select> */}\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <TextField value={row.col5} onChange={(e) => handleTextChange(row.id, e)} disabled={!row.isEditable} />\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <Button disabled={!row.isEditable} onClick={() => handleSaveClick(row.id)}>Save</Button>\n//                                                         </TableCell>\n//                                                     </TableRow>\n//                                                 ))\n//                                             ) : (\n//                                                 <TableRow>\n//                                                     <TableCell colSpan={6} align=\"center\">\n//                                                         No data available\n//                                                     </TableCell>\n//                                                 </TableRow>\n//                                             )}\n//                                         </TableBody>\n//                                     </Table>\n//                                 </TableContainer>\n//                                 <Dialog open={openPopup} onClose={handlePopupClose}>\n//                                     <DialogContent>\n//                                         รายละเอียดโดยย่อของโครงงานที่จะแสดงในนี้จะต้องดึงข้อมุลมาจากรายละเอียดของโครงงานที่จะพัฒนาจากการกรอกข้อมูลยื่นสอบหัวข้อ\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handlePopupClose}>Close</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                             </div>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard >\n//     );\n// }\n\n// export default RequestAdvisor;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}