{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import { Stack } from '@mui/system';\n// import { Typography } from '@mui/material';\n// import InputLabel from '@mui/material/InputLabel';\n// import MenuItem from '@mui/material/MenuItem';\n// import FormControl from '@mui/material/FormControl';\n// import Select from '@mui/material/Select';\n// import Radio from '@mui/material/Radio';\n// import RadioGroup from '@mui/material/RadioGroup';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import FormGroup from '@mui/material/FormGroup';\n// import Button from '@mui/material/Button';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\n// import Dialog from '@mui/material/Dialog';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n// import axios from 'axios';\n\n// function CSB01() {\n\n//     const [selectedValues, setSelectedValues] = useState({\n//         networks: false,\n//         graphics: false,\n//         database: false,\n//         ai: false,\n//         games: false,\n//     });\n\n//     const getFilteredOptions = (selectedStudentIds) => {\n//         // สมมติว่า projectStudents เป็น array ที่เก็บรหัสนักเรียนที่มีอยู่ในโครงการ\n//         const projectStudents = []; // ดึงข้อมูลจาก API หรือสถานะที่เก็บไว้\n\n//         return studentData.filter(student => \n//             !selectedStudentIds.includes(student.S_id) && \n//             !projectStudents.includes(student.S_id)\n//         );\n//     };\n\n//     const [openDialog, setOpenDialog] = useState(false);\n\n//     const handleCloseDialog = () => setOpenDialog(false);\n\n//     const [selectedValue, setSelectedValue] = useState('');\n\n//     const handleProjectNameChange = (e) => {\n//         const regex = /^[A-Za-z\\s]*$/;\n//         if (regex.test(e.target.value)) {\n//             setPData({ ...PData, P_name: e.target.value });\n//         }\n//     };\n\n//     const handleSelectChange = (e) => {\n//         const { name, value } = e.target;\n//         if (name === 'S_id1' || name === 'S_id2') {\n//             setSData(prevState => ({\n//                 ...prevState,\n//                 [name]: value\n//             }));\n//         } else if (name === 'T_id') {\n//             setTData({ T_id: value });\n//         }\n//     };\n\n//     const [studentData, setStudentData] = useState([]);\n//     const [studentNames, setStudentNames] = useState([]);\n//     const [teachers, setTeachers] = useState([]);\n\n//     const [PData, setPData] = useState({\n//         P_name: '',\n//         P_details: '',\n//         P_status: '',\n//         P_CSB01: '',\n//         P_CSB02: '',\n//         P_CSB03: '',\n//         P_S1: '',\n//         P_S2: '',\n//         P_T: '',\n//         P_type: '',\n//         P_tool: '',\n//     });\n\n//     const [SData, setSData] = useState({\n//         S_id1: '',\n//         S_id2: ''\n//     });\n\n//     const [TData, setTData] = useState({\n//         T_id: ''\n//     });\n\n//     const validateForm = () => {\n//         const errors = {\n//             projectName: !PData.P_name,\n//             projectDetails: !PData.P_details,\n//             student1: !SData.S_id1,\n//             student2: !SData.S_id2\n//         };\n\n//         setErrors(errors);\n//         return !Object.values(errors).includes(true);\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         if (!validateForm()) {\n//             alert('กรุณากรอกข้อมูลที่จำเป็นให้ครบถ้วน');\n//             return;\n//         }\n\n//         const student1Name = studentData.find(student => student.S_id === SData.S_id1)?.S_name || '';\n//         const student2Name = studentData.find(student => student.S_id === SData.S_id2)?.S_name || '';\n//         const teacherName = teachers.find(teacher => teacher.T_id === TData.T_id)?.T_name || '';\n\n//         const projectData = {\n//             ...PData,\n//             P_S1: student1Name,\n//             P_S2: student2Name,\n//             P_T: teacherName\n//         };\n\n//         try {\n//             console.log('Submitting data:', projectData);\n//             const response = await axios.post('http://localhost:9999/Project', projectData);\n//             console.log('Project added:', response.data);\n//             alert(\"บันทึกโครงงานสำเร็จ!\");\n\n//             setPData({\n//                 P_name: '',\n//                 P_details: '',\n//                 P_status: '',\n//                 P_CSB01: '',\n//                 P_CSB02: '',\n//                 P_CSB03: '',\n//                 P_S1: '',\n//                 P_S2: '',\n//                 P_T: '',\n//                 P_type: '',\n//                 P_tool: ''\n//             });\n//             setSData({\n//                 S_id1: '',\n//                 S_id2: ''\n//             });\n//             setTData({\n//                 T_id: ''\n//             });\n//         } catch (error) {\n//             console.error('Error adding project:', error);\n//             alert(\"ไม่สามารถบันทึกโครงงานได้ กรุณาลองอีกครั้ง\");\n//         }\n\n//         setOpenDialog(true);\n//     };\n\n//     const handleRadioChange = (event) => {\n//         const selectedValue = event.target.value;\n\n//         if (selectedValue === \"No\") {\n//             setPData(prevData => ({\n//                 ...prevData,\n//                 P_status: \"ไม่มีที่ปรึกษา\",\n//                 P_T: ''\n//             }));\n\n//             fetch('http://localhost:9999/Project', {\n//                 method: 'PATCH',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({\n//                     P_status: \"ไม่มีที่ปรึกษา\",\n//                     P_T: null\n//                 }),\n//             })\n//                 .then(response => response.json())\n//                 .then(data => {\n//                     console.log('Success:', data);\n//                 })\n//                 .catch((error) => {\n//                     console.error('Error:', error);\n//                 });\n//         } else if (selectedValue === \"Yes\") {\n//             setPData(prevData => ({\n//                 ...prevData,\n//                 P_status: ''\n//             }));\n//         }\n\n//         setSelectedValue(selectedValue);\n//     };\n\n//     const [errors, setErrors] = useState({\n//         projectName: false,\n//         projectDetails: false,\n//         student1: false,\n//         student2: false\n//     });\n\n//     const selectedIds = [SData.S_id1, SData.S_id2].filter(id => id);\n\n//     useEffect(() => {\n//         const fetchStudent = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:9999/students');\n//                 if (response.data && Array.isArray(response.data)) {\n//                     const uniqueStudents = Array.from(new Map(response.data.map(item => [item.S_id, item])).values());\n//                     setStudentData(uniqueStudents);\n//                     setStudentNames(uniqueStudents.map(item => ({ S_id: item.S_id, S_name: item.S_name })));\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching Student names:', error);\n//             }\n//         };\n//         fetchStudent();\n//     }, []);\n\n//     useEffect(() => {\n//         const fetchTeachers = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:9999/Teacher');\n//                 if (response.data && Array.isArray(response.data)) {\n//                     setTeachers(response.data);\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching Teacher names:', error);\n//             }\n//         };\n//         fetchTeachers();\n//     }, []);\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 // Fetch Exam status data\n//                 const examResponse = await axios.get('http://localhost:9999/Exam');\n//                 const examData = examResponse.data;\n\n//                 // Check the status of Exam_o_CSB01\n//                 const examCSB01 = examData.find(exam => exam.Exam_o_CSB01 !== undefined);\n//                 if (examCSB01 && examCSB01.Exam_o_CSB01 === 'เปิด') {\n//                     setIsExamOpen(true);\n//                 } else {\n//                     setIsExamOpen(false);\n//                     alert('ไม่ได้อยู่ในช่วงยื่นสอบหัวข้อ');\n//                     return; // Exit if the exam is not open\n//                 }\n\n//                 // Fetch Project data\n//                 const projectResponse = await axios.get('http://localhost:9999/Project');\n//                 const projectData = projectResponse.data;\n\n//                 // Fetch Exam results data\n//                 const examResultsResponse = await axios.get('http://localhost:9999/Exam_results');\n//                 const examResultsData = examResultsResponse.data;\n\n//                 if (Array.isArray(projectData) && projectData.length > 0) {\n//                     const project = projectData[0]; // Adjust based on actual API response\n\n//                     // Find the corresponding exam result by P_id\n//                     const examResult = examResultsData.find(\n//                         (result) => result.P_id === project._id\n//                     );\n\n//                     setPData({\n//                         P_id: project._id || '',\n//                         P_name: project.P_name || '',\n//                         P_S1: project.P_S1 || '',\n//                         P_S2: project.P_S2 || '',\n//                         P_T: project.P_T || '',\n//                         ExamStatus: examResult ? examResult.Exam_CSB01_status : ''\n//                     });\n//                 } else {\n//                     console.error('Unexpected API response:', projectData);\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching data:', error);\n//             }\n//         };\n\n//         fetchData();\n//     }, []);\n\n//     // Additional code (related to form handling and submission) remains unchanged\n//     const handleChangeSelectObject = (event) => {\n//         const { name, checked } = event.target;\n//         setSelectedValues((prevValues) => ({\n//             ...prevValues,\n//             [name]: checked,\n//         }));\n//         console.log(`${name} is now ${checked ? 'selected' : 'deselected'}`);\n//     };\n\n//     // Rest of your code\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\n//                             <Box\n//                                 component=\"form\"\n//                                 sx={{\n//                                     marginTop: 8,\n//                                     display: 'block',\n//                                     flexDirection: 'column',\n//                                 }}\n//                                 noValidate\n//                                 autoComplete=\"off\"\n//                             >\n//                                 <Grid container alignItems=\"center\" justifyContent=\"center\" sx={{ ml: 20 }}>\n//                                     <Grid item>\n//                                         <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n//                                             <Typography fontSize='18px'>\n//                                                 <b>แบบฟอร์มเสนอหัวข้อโครงงานพิเศษ</b><br></br>\n//                                             </Typography>\n//                                             <Typography fontSize='18px'>\n//                                                 <b>โครงการพิเศษ (สองภาษา) ภาควิชาวิทยาการคอมพิวเตอร์และสารสนเทศ</b><br></br>\n//                                             </Typography>\n//                                             <Typography fontSize='18px'>\n//                                                 <b>คณะวิทยาศาสตร์ประยุกต์มหาวิทยาลัยเทคโนโลยีพระจอมเกล้าพระนครเหนือ</b>\n//                                             </Typography>\n//                                         </Stack>\n//                                     </Grid>\n//                                 </Grid>\n//                                 <Grid>\n//                                     <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1} sx={{ mt: 5, ml: 35 }}>\n//                                         <Typography fontSize='18px'>\n//                                             รหัสนักศึกษา คนที่ 1\n//                                             <Box\n//                                                 sx={{\n//                                                     minWidth: 180,\n//                                                     marginTop: 1,\n//                                                     marginLeft: 3,\n//                                                     display: \"flex\",\n//                                                 }}\n//                                             >\n//                                                 <FormControl\n//                                                     sx={{\n//                                                         minWidth: 180,\n//                                                         marginRight: 33,\n//                                                     }}>\n//                                                     <InputLabel id=\"StudentID-select-label-1\">รหัสนักศึกษา</InputLabel>\n//                                                     <Select\n//                                                         labelId=\"StudentID-select-label-1\"\n//                                                         id=\"StudentID-select1\"\n//                                                         name=\"S_id1\"\n//                                                         value={SData.S_id1}\n//                                                         label=\"รหัสนักศึกษา\"\n//                                                         onChange={handleSelectChange}\n//                                                     >\n//                                                         {getFilteredOptions([SData.S_id2]).map((student, index) => (\n//                                                             <MenuItem key={index} value={student.S_id}>\n//                                                                 {student.S_id}\n//                                                             </MenuItem>\n//                                                         ))}\n//                                                     </Select>\n//                                                 </FormControl>\n//                                                 <TextField\n//                                                     disabled\n//                                                     id=\"Name1\"\n//                                                     label=\"ชื่อ - สกุล\"\n//                                                     value={studentData.find(student => student.S_id === SData.S_id1)?.S_name || ''}\n//                                                 />\n//                                             </Box>\n//                                         </Typography>\n\n//                                         <Typography\n//                                             fontSize='18px'\n//                                             sx={{\n//                                                 marginTop: 5,\n//                                                 marginLeft: 50,\n//                                             }}>\n//                                             รหัสนักศึกษา คนที่ 2\n//                                             <Box\n//                                                 sx={{\n//                                                     minWidth: 180,\n//                                                     marginTop: 1,\n//                                                     marginLeft: 3,\n//                                                     display: \"flex\",\n//                                                 }}\n//                                             >\n//                                                 <FormControl\n//                                                     sx={{\n//                                                         minWidth: 180,\n//                                                         marginRight: 33,\n//                                                     }}>\n//                                                     <InputLabel id=\"StudentID-select-label-2\">รหัสนักศึกษา</InputLabel>\n//                                                     <Select\n//                                                         labelId=\"StudentID-select-label-2\"\n//                                                         id=\"StudentID-select2\"\n//                                                         name=\"S_id2\"\n//                                                         value={SData.S_id2}\n//                                                         label=\"รหัสนักศึกษา\"\n//                                                         onChange={handleSelectChange}\n//                                                     >\n//                                                         {getFilteredOptions([SData.S_id1]).map((student, index) => (\n//                                                             <MenuItem key={index} value={student.S_id}>\n//                                                                 {student.S_id}\n//                                                             </MenuItem>\n//                                                         ))}\n//                                                     </Select>\n//                                                 </FormControl>\n//                                                 <TextField\n//                                                     disabled\n//                                                     id=\"Name2\"\n//                                                     label=\"ชื่อ - สกุล\"\n//                                                     value={studentData.find(student => student.S_id === SData.S_id2)?.S_name || ''}\n//                                                 />\n//                                             </Box>\n//                                         </Typography>\n\n//                                     </Stack>\n//                                 </Grid>\n//                                 <div>\n//                                     <Typography\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 5,\n//                                             marginLeft: 50,\n\n//                                         }}>\n//                                         ชื่อโครงงานภาษาอังกฤษ\n//                                         <Box\n//                                             sx={{\n//                                                 '& .MuiTextField-root': { width: '75ch' },\n//                                                 marginTop: 1,\n//                                                 marginLeft: 3,\n//                                                 display: \"flex\",\n//                                             }}\n//                                         >\n//                                             <TextField\n//                                                 required\n//                                                 label=\"ชื่อโครงงานภาษาอังกฤษ\"\n//                                                 id=\"P_name\"\n//                                                 value={PData.P_name}\n//                                                 onChange={handleProjectNameChange}\n//                                                 error={errors.projectName}\n//                                                 helperText={errors.projectName ? 'ชื่อโครงงานภาษาอังกฤษจำเป็นต้องกรอก' : ''}\n//                                                 inputProps={{ pattern: \"[A-Za-z ]*\" }}\n//                                             />\n//                                         </Box>\n//                                     </Typography>\n//                                 </div>\n//                                 <div>\n//                                     <Typography\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 5,\n//                                             marginLeft: 50,\n//                                         }}\n//                                     >\n//                                         มีอาจารย์ที่ปรึกษาหรือไม่ ?\n//                                     </Typography>\n//                                     <FormControl\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 0,\n//                                             marginLeft: 55,\n//                                         }}\n//                                     >\n//                                         <RadioGroup\n//                                             row\n//                                             aria-labelledby=\"demo-row-radio-buttons-group-label\"\n//                                             name=\"row-radio-buttons-group\"\n//                                             id=\"selectHaveOrDon't\"\n//                                             value={selectedValue}\n//                                             onChange={handleRadioChange}\n//                                         >\n//                                             <FormControlLabel value=\"Yes\" control={<Radio />} label=\"มี\" />\n//                                             <FormControlLabel value=\"No\" control={<Radio />} label=\"ไม่มี\" sx={{ marginLeft: 10 }} />\n//                                         </RadioGroup>\n//                                     </FormControl>\n\n//                                     {selectedValue === 'Yes' && (\n//                                         <FormControl\n//                                             sx={{\n//                                                 marginTop: 2,\n//                                                 marginLeft: 55,\n//                                                 minWidth: 180,\n//                                                 marginRight: 33,\n//                                             }}>\n//                                             <InputLabel id=\"teacher-select-label\">Teacher</InputLabel>\n//                                             <Select\n//                                                 labelId=\"teacher-select-label\"\n//                                                 id=\"teacher-select\"\n//                                                 name=\"T_id\"\n//                                                 value={TData.T_id}\n//                                                 label=\"Teacher\"\n//                                                 onChange={handleSelectChange}\n//                                             >\n//                                                 {teachers.map((teacher) => (\n//                                                     <MenuItem key={teacher.T_id} value={teacher.T_id}>\n//                                                         {teacher.T_name}\n//                                                     </MenuItem>\n//                                                 ))}\n//                                             </Select>\n//                                         </FormControl>\n//                                     )}\n//                                 </div>\n//                                 <div>\n//                                     <Typography\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 5,\n//                                             marginLeft: 50,\n//                                         }}\n//                                     >\n//                                         โครงงานนี้จัดอยู่ในประเภท\n//                                     </Typography>\n//                                     <FormGroup\n//                                         id=\"object-select\"\n//                                         fontSize=\"18px\"\n//                                         sx={{\n//                                             marginTop: 0,\n//                                             marginLeft: 55,\n//                                         }}\n//                                     >\n//                                         {['networks', 'graphics', 'database', 'ai', 'games'].map((category) => (\n//                                             <FormControlLabel\n//                                                 key={category}\n//                                                 control={\n//                                                     <Checkbox\n//                                                         checked={selectedValues[category]}\n//                                                         onChange={handleChangeSelectObject}\n//                                                         name={category}\n//                                                     />\n//                                                 }\n//                                                 label={category} \n//                                             />\n//                                         ))}\n//                                         {errors.atLeastOneCategory && (\n//                                             <Typography color=\"error\" sx={{ marginLeft: 55, marginTop: 1 }}>\n//                                                 ต้องเลือกประเภทของโครงงานอย่างน้อยหนึ่งรายการ\n//                                             </Typography>\n//                                         )}\n//                                     </FormGroup>\n//                                 </div>\n//                                 <div>\n//                                     <Typography\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 5,\n//                                             marginLeft: 50,\n//                                         }}\n//                                     >\n//                                         รายละเอียดของโครงงานที่จะพัฒนา\n//                                     </Typography>\n//                                     <Box\n//                                         sx={{\n//                                             '& .MuiTextField-root': { width: '85ch' },\n//                                         }}\n//                                     >\n//                                         <TextField\n//                                             fontSize='18px'\n//                                             sx={{\n//                                                 marginTop: 0,\n//                                                 marginLeft: 55,\n//                                             }}\n//                                             id=\"details\"\n//                                             label=\"\"\n//                                             multiline\n//                                             maxRows={8}\n//                                             error={errors.projectDetails}\n//                                             helperText={errors.projectDetails ? 'รายละเอียดของโครงงานต้องกรอก' : ''}\n//                                             onChange={(e) => setPData({ ...PData, P_details: e.target.value })}\n//                                         />\n\n//                                     </Box>\n//                                 </div>\n//                                 <div>\n//                                     <Typography\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 5,\n//                                             marginLeft: 50,\n//                                         }}\n//                                     >\n//                                         เครื่องมือและอุปกรณ์ที่ใช้ในการทำโครงงานนี้\n//                                     </Typography>\n//                                     <Box\n//                                         sx={{\n//                                             '& .MuiTextField-root': { width: '85ch' },\n//                                         }}\n//                                     >\n//                                         <TextField\n//                                             fontSize='18px'\n//                                             sx={{\n//                                                 marginTop: 0,\n//                                                 marginLeft: 55,\n//                                             }}\n//                                             id=\"P_tool\"\n//                                             label=\"\"\n//                                             multiline\n//                                             maxRows={8}\n//                                             value={PData.P_tool}\n//                                             onChange={(e) => setPData({ ...PData, P_tool: e.target.value })}\n//                                         />\n//                                     </Box>\n//                                 </div>\n//                                 <div>\n//                                     <Stack\n//                                         alignItems=\"center\"\n//                                         justifyContent=\"center\"\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 5,\n//                                             marginLeft: 45\n//                                         }}\n//                                     >\n//                                         <Button variant=\"contained\" onClick={handleSubmit}>\n//                                             ยืนยัน\n//                                         </Button>\n//                                     </Stack>\n//                                 </div>\n//                                 <Dialog open={openDialog} onClose={handleCloseDialog}>\n//                                     <DialogTitle>ทำการบันทึกสำเร็จ !!</DialogTitle>\n//                                     <DialogContent>\n//                                         <p>รอการตรวจสอบจากเจ้าหน้าที่</p>\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handleCloseDialog}>Close</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                             </Box>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard>\n//     );\n// }\n\n// export default CSB01;","map":{"version":3,"names":[],"sources":["C:/test/create-react-app/src/views/sample-page/CSB01.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import TextField from '@mui/material/TextField';\r\n// import { Stack } from '@mui/system';\r\n// import { Typography } from '@mui/material';\r\n// import InputLabel from '@mui/material/InputLabel';\r\n// import MenuItem from '@mui/material/MenuItem';\r\n// import FormControl from '@mui/material/FormControl';\r\n// import Select from '@mui/material/Select';\r\n// import Radio from '@mui/material/Radio';\r\n// import RadioGroup from '@mui/material/RadioGroup';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import FormGroup from '@mui/material/FormGroup';\r\n// import Button from '@mui/material/Button';\r\n// import DialogTitle from '@mui/material/DialogTitle';\r\n// import DialogContent from '@mui/material/DialogContent';\r\n// import DialogActions from '@mui/material/DialogActions';\r\n// import Dialog from '@mui/material/Dialog';\r\n// import { Grid } from '@mui/material';\r\n// import MainCard from 'ui-component/cards/MainCard';\r\n// import { gridSpacing } from 'store/constant';\r\n// import axios from 'axios';\r\n\r\n// function CSB01() {\r\n\r\n\r\n    \r\n//     const [selectedValues, setSelectedValues] = useState({\r\n//         networks: false,\r\n//         graphics: false,\r\n//         database: false,\r\n//         ai: false,\r\n//         games: false,\r\n//     });\r\n\r\n//     const getFilteredOptions = (selectedStudentIds) => {\r\n//         // สมมติว่า projectStudents เป็น array ที่เก็บรหัสนักเรียนที่มีอยู่ในโครงการ\r\n//         const projectStudents = []; // ดึงข้อมูลจาก API หรือสถานะที่เก็บไว้\r\n    \r\n//         return studentData.filter(student => \r\n//             !selectedStudentIds.includes(student.S_id) && \r\n//             !projectStudents.includes(student.S_id)\r\n//         );\r\n//     };\r\n    \r\n\r\n//     const [openDialog, setOpenDialog] = useState(false);\r\n\r\n//     const handleCloseDialog = () => setOpenDialog(false);\r\n\r\n//     const [selectedValue, setSelectedValue] = useState('');\r\n\r\n//     const handleProjectNameChange = (e) => {\r\n//         const regex = /^[A-Za-z\\s]*$/;\r\n//         if (regex.test(e.target.value)) {\r\n//             setPData({ ...PData, P_name: e.target.value });\r\n//         }\r\n//     };\r\n\r\n//     const handleSelectChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         if (name === 'S_id1' || name === 'S_id2') {\r\n//             setSData(prevState => ({\r\n//                 ...prevState,\r\n//                 [name]: value\r\n//             }));\r\n//         } else if (name === 'T_id') {\r\n//             setTData({ T_id: value });\r\n//         }\r\n//     };\r\n\r\n//     const [studentData, setStudentData] = useState([]);\r\n//     const [studentNames, setStudentNames] = useState([]);\r\n//     const [teachers, setTeachers] = useState([]);\r\n\r\n//     const [PData, setPData] = useState({\r\n//         P_name: '',\r\n//         P_details: '',\r\n//         P_status: '',\r\n//         P_CSB01: '',\r\n//         P_CSB02: '',\r\n//         P_CSB03: '',\r\n//         P_S1: '',\r\n//         P_S2: '',\r\n//         P_T: '',\r\n//         P_type: '',\r\n//         P_tool: '',\r\n//     });\r\n\r\n//     const [SData, setSData] = useState({\r\n//         S_id1: '',\r\n//         S_id2: ''\r\n//     });\r\n\r\n//     const [TData, setTData] = useState({\r\n//         T_id: ''\r\n//     });\r\n\r\n//     const validateForm = () => {\r\n//         const errors = {\r\n//             projectName: !PData.P_name,\r\n//             projectDetails: !PData.P_details,\r\n//             student1: !SData.S_id1,\r\n//             student2: !SData.S_id2\r\n//         };\r\n\r\n//         setErrors(errors);\r\n//         return !Object.values(errors).includes(true);\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         if (!validateForm()) {\r\n//             alert('กรุณากรอกข้อมูลที่จำเป็นให้ครบถ้วน');\r\n//             return;\r\n//         }\r\n\r\n//         const student1Name = studentData.find(student => student.S_id === SData.S_id1)?.S_name || '';\r\n//         const student2Name = studentData.find(student => student.S_id === SData.S_id2)?.S_name || '';\r\n//         const teacherName = teachers.find(teacher => teacher.T_id === TData.T_id)?.T_name || '';\r\n\r\n//         const projectData = {\r\n//             ...PData,\r\n//             P_S1: student1Name,\r\n//             P_S2: student2Name,\r\n//             P_T: teacherName\r\n//         };\r\n\r\n//         try {\r\n//             console.log('Submitting data:', projectData);\r\n//             const response = await axios.post('http://localhost:9999/Project', projectData);\r\n//             console.log('Project added:', response.data);\r\n//             alert(\"บันทึกโครงงานสำเร็จ!\");\r\n\r\n//             setPData({\r\n//                 P_name: '',\r\n//                 P_details: '',\r\n//                 P_status: '',\r\n//                 P_CSB01: '',\r\n//                 P_CSB02: '',\r\n//                 P_CSB03: '',\r\n//                 P_S1: '',\r\n//                 P_S2: '',\r\n//                 P_T: '',\r\n//                 P_type: '',\r\n//                 P_tool: ''\r\n//             });\r\n//             setSData({\r\n//                 S_id1: '',\r\n//                 S_id2: ''\r\n//             });\r\n//             setTData({\r\n//                 T_id: ''\r\n//             });\r\n//         } catch (error) {\r\n//             console.error('Error adding project:', error);\r\n//             alert(\"ไม่สามารถบันทึกโครงงานได้ กรุณาลองอีกครั้ง\");\r\n//         }\r\n\r\n//         setOpenDialog(true);\r\n//     };\r\n\r\n//     const handleRadioChange = (event) => {\r\n//         const selectedValue = event.target.value;\r\n\r\n//         if (selectedValue === \"No\") {\r\n//             setPData(prevData => ({\r\n//                 ...prevData,\r\n//                 P_status: \"ไม่มีที่ปรึกษา\",\r\n//                 P_T: ''\r\n//             }));\r\n\r\n//             fetch('http://localhost:9999/Project', {\r\n//                 method: 'PATCH',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify({\r\n//                     P_status: \"ไม่มีที่ปรึกษา\",\r\n//                     P_T: null\r\n//                 }),\r\n//             })\r\n//                 .then(response => response.json())\r\n//                 .then(data => {\r\n//                     console.log('Success:', data);\r\n//                 })\r\n//                 .catch((error) => {\r\n//                     console.error('Error:', error);\r\n//                 });\r\n//         } else if (selectedValue === \"Yes\") {\r\n//             setPData(prevData => ({\r\n//                 ...prevData,\r\n//                 P_status: ''\r\n//             }));\r\n//         }\r\n\r\n//         setSelectedValue(selectedValue);\r\n//     };\r\n\r\n//     const [errors, setErrors] = useState({\r\n//         projectName: false,\r\n//         projectDetails: false,\r\n//         student1: false,\r\n//         student2: false\r\n//     });\r\n\r\n//     const selectedIds = [SData.S_id1, SData.S_id2].filter(id => id);\r\n\r\n//     useEffect(() => {\r\n//         const fetchStudent = async () => {\r\n//             try {\r\n//                 const response = await axios.get('http://localhost:9999/students');\r\n//                 if (response.data && Array.isArray(response.data)) {\r\n//                     const uniqueStudents = Array.from(new Map(response.data.map(item => [item.S_id, item])).values());\r\n//                     setStudentData(uniqueStudents);\r\n//                     setStudentNames(uniqueStudents.map(item => ({ S_id: item.S_id, S_name: item.S_name })));\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error('Error fetching Student names:', error);\r\n//             }\r\n//         };\r\n//         fetchStudent();\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         const fetchTeachers = async () => {\r\n//             try {\r\n//                 const response = await axios.get('http://localhost:9999/Teacher');\r\n//                 if (response.data && Array.isArray(response.data)) {\r\n//                     setTeachers(response.data);\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error('Error fetching Teacher names:', error);\r\n//             }\r\n//         };\r\n//         fetchTeachers();\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             try {\r\n//                 // Fetch Exam status data\r\n//                 const examResponse = await axios.get('http://localhost:9999/Exam');\r\n//                 const examData = examResponse.data;\r\n    \r\n//                 // Check the status of Exam_o_CSB01\r\n//                 const examCSB01 = examData.find(exam => exam.Exam_o_CSB01 !== undefined);\r\n//                 if (examCSB01 && examCSB01.Exam_o_CSB01 === 'เปิด') {\r\n//                     setIsExamOpen(true);\r\n//                 } else {\r\n//                     setIsExamOpen(false);\r\n//                     alert('ไม่ได้อยู่ในช่วงยื่นสอบหัวข้อ');\r\n//                     return; // Exit if the exam is not open\r\n//                 }\r\n\r\n//                 // Fetch Project data\r\n//                 const projectResponse = await axios.get('http://localhost:9999/Project');\r\n//                 const projectData = projectResponse.data;\r\n    \r\n//                 // Fetch Exam results data\r\n//                 const examResultsResponse = await axios.get('http://localhost:9999/Exam_results');\r\n//                 const examResultsData = examResultsResponse.data;\r\n    \r\n//                 if (Array.isArray(projectData) && projectData.length > 0) {\r\n//                     const project = projectData[0]; // Adjust based on actual API response\r\n    \r\n//                     // Find the corresponding exam result by P_id\r\n//                     const examResult = examResultsData.find(\r\n//                         (result) => result.P_id === project._id\r\n//                     );\r\n    \r\n//                     setPData({\r\n//                         P_id: project._id || '',\r\n//                         P_name: project.P_name || '',\r\n//                         P_S1: project.P_S1 || '',\r\n//                         P_S2: project.P_S2 || '',\r\n//                         P_T: project.P_T || '',\r\n//                         ExamStatus: examResult ? examResult.Exam_CSB01_status : ''\r\n//                     });\r\n//                 } else {\r\n//                     console.error('Unexpected API response:', projectData);\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error('Error fetching data:', error);\r\n//             }\r\n//         };\r\n    \r\n//         fetchData();\r\n//     }, []);\r\n    \r\n//     // Additional code (related to form handling and submission) remains unchanged\r\n//     const handleChangeSelectObject = (event) => {\r\n//         const { name, checked } = event.target;\r\n//         setSelectedValues((prevValues) => ({\r\n//             ...prevValues,\r\n//             [name]: checked,\r\n//         }));\r\n//         console.log(`${name} is now ${checked ? 'selected' : 'deselected'}`);\r\n//     };\r\n    \r\n//     // Rest of your code\r\n    \r\n\r\n//     return (\r\n//         <MainCard>\r\n//             <Grid container spacing={gridSpacing}>\r\n//                 <Grid item xs={12}>\r\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n//                         <Grid item>\r\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\r\n//                             <Box\r\n//                                 component=\"form\"\r\n//                                 sx={{\r\n//                                     marginTop: 8,\r\n//                                     display: 'block',\r\n//                                     flexDirection: 'column',\r\n//                                 }}\r\n//                                 noValidate\r\n//                                 autoComplete=\"off\"\r\n//                             >\r\n//                                 <Grid container alignItems=\"center\" justifyContent=\"center\" sx={{ ml: 20 }}>\r\n//                                     <Grid item>\r\n//                                         <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n//                                             <Typography fontSize='18px'>\r\n//                                                 <b>แบบฟอร์มเสนอหัวข้อโครงงานพิเศษ</b><br></br>\r\n//                                             </Typography>\r\n//                                             <Typography fontSize='18px'>\r\n//                                                 <b>โครงการพิเศษ (สองภาษา) ภาควิชาวิทยาการคอมพิวเตอร์และสารสนเทศ</b><br></br>\r\n//                                             </Typography>\r\n//                                             <Typography fontSize='18px'>\r\n//                                                 <b>คณะวิทยาศาสตร์ประยุกต์มหาวิทยาลัยเทคโนโลยีพระจอมเกล้าพระนครเหนือ</b>\r\n//                                             </Typography>\r\n//                                         </Stack>\r\n//                                     </Grid>\r\n//                                 </Grid>\r\n//                                 <Grid>\r\n//                                     <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1} sx={{ mt: 5, ml: 35 }}>\r\n//                                         <Typography fontSize='18px'>\r\n//                                             รหัสนักศึกษา คนที่ 1\r\n//                                             <Box\r\n//                                                 sx={{\r\n//                                                     minWidth: 180,\r\n//                                                     marginTop: 1,\r\n//                                                     marginLeft: 3,\r\n//                                                     display: \"flex\",\r\n//                                                 }}\r\n//                                             >\r\n//                                                 <FormControl\r\n//                                                     sx={{\r\n//                                                         minWidth: 180,\r\n//                                                         marginRight: 33,\r\n//                                                     }}>\r\n//                                                     <InputLabel id=\"StudentID-select-label-1\">รหัสนักศึกษา</InputLabel>\r\n//                                                     <Select\r\n//                                                         labelId=\"StudentID-select-label-1\"\r\n//                                                         id=\"StudentID-select1\"\r\n//                                                         name=\"S_id1\"\r\n//                                                         value={SData.S_id1}\r\n//                                                         label=\"รหัสนักศึกษา\"\r\n//                                                         onChange={handleSelectChange}\r\n//                                                     >\r\n//                                                         {getFilteredOptions([SData.S_id2]).map((student, index) => (\r\n//                                                             <MenuItem key={index} value={student.S_id}>\r\n//                                                                 {student.S_id}\r\n//                                                             </MenuItem>\r\n//                                                         ))}\r\n//                                                     </Select>\r\n//                                                 </FormControl>\r\n//                                                 <TextField\r\n//                                                     disabled\r\n//                                                     id=\"Name1\"\r\n//                                                     label=\"ชื่อ - สกุล\"\r\n//                                                     value={studentData.find(student => student.S_id === SData.S_id1)?.S_name || ''}\r\n//                                                 />\r\n//                                             </Box>\r\n//                                         </Typography>\r\n\r\n//                                         <Typography\r\n//                                             fontSize='18px'\r\n//                                             sx={{\r\n//                                                 marginTop: 5,\r\n//                                                 marginLeft: 50,\r\n//                                             }}>\r\n//                                             รหัสนักศึกษา คนที่ 2\r\n//                                             <Box\r\n//                                                 sx={{\r\n//                                                     minWidth: 180,\r\n//                                                     marginTop: 1,\r\n//                                                     marginLeft: 3,\r\n//                                                     display: \"flex\",\r\n//                                                 }}\r\n//                                             >\r\n//                                                 <FormControl\r\n//                                                     sx={{\r\n//                                                         minWidth: 180,\r\n//                                                         marginRight: 33,\r\n//                                                     }}>\r\n//                                                     <InputLabel id=\"StudentID-select-label-2\">รหัสนักศึกษา</InputLabel>\r\n//                                                     <Select\r\n//                                                         labelId=\"StudentID-select-label-2\"\r\n//                                                         id=\"StudentID-select2\"\r\n//                                                         name=\"S_id2\"\r\n//                                                         value={SData.S_id2}\r\n//                                                         label=\"รหัสนักศึกษา\"\r\n//                                                         onChange={handleSelectChange}\r\n//                                                     >\r\n//                                                         {getFilteredOptions([SData.S_id1]).map((student, index) => (\r\n//                                                             <MenuItem key={index} value={student.S_id}>\r\n//                                                                 {student.S_id}\r\n//                                                             </MenuItem>\r\n//                                                         ))}\r\n//                                                     </Select>\r\n//                                                 </FormControl>\r\n//                                                 <TextField\r\n//                                                     disabled\r\n//                                                     id=\"Name2\"\r\n//                                                     label=\"ชื่อ - สกุล\"\r\n//                                                     value={studentData.find(student => student.S_id === SData.S_id2)?.S_name || ''}\r\n//                                                 />\r\n//                                             </Box>\r\n//                                         </Typography>\r\n\r\n//                                     </Stack>\r\n//                                 </Grid>\r\n//                                 <div>\r\n//                                     <Typography\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 5,\r\n//                                             marginLeft: 50,\r\n\r\n//                                         }}>\r\n//                                         ชื่อโครงงานภาษาอังกฤษ\r\n//                                         <Box\r\n//                                             sx={{\r\n//                                                 '& .MuiTextField-root': { width: '75ch' },\r\n//                                                 marginTop: 1,\r\n//                                                 marginLeft: 3,\r\n//                                                 display: \"flex\",\r\n//                                             }}\r\n//                                         >\r\n//                                             <TextField\r\n//                                                 required\r\n//                                                 label=\"ชื่อโครงงานภาษาอังกฤษ\"\r\n//                                                 id=\"P_name\"\r\n//                                                 value={PData.P_name}\r\n//                                                 onChange={handleProjectNameChange}\r\n//                                                 error={errors.projectName}\r\n//                                                 helperText={errors.projectName ? 'ชื่อโครงงานภาษาอังกฤษจำเป็นต้องกรอก' : ''}\r\n//                                                 inputProps={{ pattern: \"[A-Za-z ]*\" }}\r\n//                                             />\r\n//                                         </Box>\r\n//                                     </Typography>\r\n//                                 </div>\r\n//                                 <div>\r\n//                                     <Typography\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 5,\r\n//                                             marginLeft: 50,\r\n//                                         }}\r\n//                                     >\r\n//                                         มีอาจารย์ที่ปรึกษาหรือไม่ ?\r\n//                                     </Typography>\r\n//                                     <FormControl\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 0,\r\n//                                             marginLeft: 55,\r\n//                                         }}\r\n//                                     >\r\n//                                         <RadioGroup\r\n//                                             row\r\n//                                             aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n//                                             name=\"row-radio-buttons-group\"\r\n//                                             id=\"selectHaveOrDon't\"\r\n//                                             value={selectedValue}\r\n//                                             onChange={handleRadioChange}\r\n//                                         >\r\n//                                             <FormControlLabel value=\"Yes\" control={<Radio />} label=\"มี\" />\r\n//                                             <FormControlLabel value=\"No\" control={<Radio />} label=\"ไม่มี\" sx={{ marginLeft: 10 }} />\r\n//                                         </RadioGroup>\r\n//                                     </FormControl>\r\n\r\n//                                     {selectedValue === 'Yes' && (\r\n//                                         <FormControl\r\n//                                             sx={{\r\n//                                                 marginTop: 2,\r\n//                                                 marginLeft: 55,\r\n//                                                 minWidth: 180,\r\n//                                                 marginRight: 33,\r\n//                                             }}>\r\n//                                             <InputLabel id=\"teacher-select-label\">Teacher</InputLabel>\r\n//                                             <Select\r\n//                                                 labelId=\"teacher-select-label\"\r\n//                                                 id=\"teacher-select\"\r\n//                                                 name=\"T_id\"\r\n//                                                 value={TData.T_id}\r\n//                                                 label=\"Teacher\"\r\n//                                                 onChange={handleSelectChange}\r\n//                                             >\r\n//                                                 {teachers.map((teacher) => (\r\n//                                                     <MenuItem key={teacher.T_id} value={teacher.T_id}>\r\n//                                                         {teacher.T_name}\r\n//                                                     </MenuItem>\r\n//                                                 ))}\r\n//                                             </Select>\r\n//                                         </FormControl>\r\n//                                     )}\r\n//                                 </div>\r\n//                                 <div>\r\n//                                     <Typography\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 5,\r\n//                                             marginLeft: 50,\r\n//                                         }}\r\n//                                     >\r\n//                                         โครงงานนี้จัดอยู่ในประเภท\r\n//                                     </Typography>\r\n//                                     <FormGroup\r\n//                                         id=\"object-select\"\r\n//                                         fontSize=\"18px\"\r\n//                                         sx={{\r\n//                                             marginTop: 0,\r\n//                                             marginLeft: 55,\r\n//                                         }}\r\n//                                     >\r\n//                                         {['networks', 'graphics', 'database', 'ai', 'games'].map((category) => (\r\n//                                             <FormControlLabel\r\n//                                                 key={category}\r\n//                                                 control={\r\n//                                                     <Checkbox\r\n//                                                         checked={selectedValues[category]}\r\n//                                                         onChange={handleChangeSelectObject}\r\n//                                                         name={category}\r\n//                                                     />\r\n//                                                 }\r\n//                                                 label={category} \r\n//                                             />\r\n//                                         ))}\r\n//                                         {errors.atLeastOneCategory && (\r\n//                                             <Typography color=\"error\" sx={{ marginLeft: 55, marginTop: 1 }}>\r\n//                                                 ต้องเลือกประเภทของโครงงานอย่างน้อยหนึ่งรายการ\r\n//                                             </Typography>\r\n//                                         )}\r\n//                                     </FormGroup>\r\n//                                 </div>\r\n//                                 <div>\r\n//                                     <Typography\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 5,\r\n//                                             marginLeft: 50,\r\n//                                         }}\r\n//                                     >\r\n//                                         รายละเอียดของโครงงานที่จะพัฒนา\r\n//                                     </Typography>\r\n//                                     <Box\r\n//                                         sx={{\r\n//                                             '& .MuiTextField-root': { width: '85ch' },\r\n//                                         }}\r\n//                                     >\r\n//                                         <TextField\r\n//                                             fontSize='18px'\r\n//                                             sx={{\r\n//                                                 marginTop: 0,\r\n//                                                 marginLeft: 55,\r\n//                                             }}\r\n//                                             id=\"details\"\r\n//                                             label=\"\"\r\n//                                             multiline\r\n//                                             maxRows={8}\r\n//                                             error={errors.projectDetails}\r\n//                                             helperText={errors.projectDetails ? 'รายละเอียดของโครงงานต้องกรอก' : ''}\r\n//                                             onChange={(e) => setPData({ ...PData, P_details: e.target.value })}\r\n//                                         />\r\n\r\n//                                     </Box>\r\n//                                 </div>\r\n//                                 <div>\r\n//                                     <Typography\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 5,\r\n//                                             marginLeft: 50,\r\n//                                         }}\r\n//                                     >\r\n//                                         เครื่องมือและอุปกรณ์ที่ใช้ในการทำโครงงานนี้\r\n//                                     </Typography>\r\n//                                     <Box\r\n//                                         sx={{\r\n//                                             '& .MuiTextField-root': { width: '85ch' },\r\n//                                         }}\r\n//                                     >\r\n//                                         <TextField\r\n//                                             fontSize='18px'\r\n//                                             sx={{\r\n//                                                 marginTop: 0,\r\n//                                                 marginLeft: 55,\r\n//                                             }}\r\n//                                             id=\"P_tool\"\r\n//                                             label=\"\"\r\n//                                             multiline\r\n//                                             maxRows={8}\r\n//                                             value={PData.P_tool}\r\n//                                             onChange={(e) => setPData({ ...PData, P_tool: e.target.value })}\r\n//                                         />\r\n//                                     </Box>\r\n//                                 </div>\r\n//                                 <div>\r\n//                                     <Stack\r\n//                                         alignItems=\"center\"\r\n//                                         justifyContent=\"center\"\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 5,\r\n//                                             marginLeft: 45\r\n//                                         }}\r\n//                                     >\r\n//                                         <Button variant=\"contained\" onClick={handleSubmit}>\r\n//                                             ยืนยัน\r\n//                                         </Button>\r\n//                                     </Stack>\r\n//                                 </div>\r\n//                                 <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n//                                     <DialogTitle>ทำการบันทึกสำเร็จ !!</DialogTitle>\r\n//                                     <DialogContent>\r\n//                                         <p>รอการตรวจสอบจากเจ้าหน้าที่</p>\r\n//                                     </DialogContent>\r\n//                                     <DialogActions>\r\n//                                         <Button onClick={handleCloseDialog}>Close</Button>\r\n//                                     </DialogActions>\r\n//                                 </Dialog>\r\n//                             </Box>\r\n//                         </Grid>\r\n//                     </Grid>\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </MainCard>\r\n//     );\r\n// }\r\n\r\n// export default CSB01;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}