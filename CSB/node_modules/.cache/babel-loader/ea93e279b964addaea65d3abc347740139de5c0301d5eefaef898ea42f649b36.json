{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\create-react-app\\\\src\\\\views\\\\sample-page\\\\CSB01.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import { Stack } from '@mui/system';\n// import { Typography } from '@mui/material';\n// import InputLabel from '@mui/material/InputLabel';\n// import MenuItem from '@mui/material/MenuItem';\n// import FormControl from '@mui/material/FormControl';\n// import Select from '@mui/material/Select';\n// import Radio from '@mui/material/Radio';\n// import RadioGroup from '@mui/material/RadioGroup';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\n// import FormGroup from '@mui/material/FormGroup';\n// import Button from '@mui/material/Button';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\n// import Dialog from '@mui/material/Dialog';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n// import axios from 'axios';\n\n// function CSB01() {\n\n//     const [selectedValues, setSelectedValues] = useState({\n//         networks: false,\n//         graphics: false,\n//         database: false,\n//         ai: false,\n//         games: false,\n//     });\n\n//     const getFilteredOptions = (selectedStudentIds) => {\n//         // สมมติว่า projectStudents เป็น array ที่เก็บรหัสนักเรียนที่มีอยู่ในโครงการ\n//         const projectStudents = []; // ดึงข้อมูลจาก API หรือสถานะที่เก็บไว้\n\n//         return studentData.filter(student => \n//             !selectedStudentIds.includes(student.S_id) && \n//             !projectStudents.includes(student.S_id)\n//         );\n//     };\n\n//     const [openDialog, setOpenDialog] = useState(false);\n\n//     const handleCloseDialog = () => setOpenDialog(false);\n\n//     const [selectedValue, setSelectedValue] = useState('');\n\n//     const handleProjectNameChange = (e) => {\n//         const regex = /^[A-Za-z\\s]*$/;\n//         if (regex.test(e.target.value)) {\n//             setPData({ ...PData, P_name: e.target.value });\n//         }\n//     };\n\n//     const handleSelectChange = (e) => {\n//         const { name, value } = e.target;\n//         if (name === 'S_id1' || name === 'S_id2') {\n//             setSData(prevState => ({\n//                 ...prevState,\n//                 [name]: value\n//             }));\n//         } else if (name === 'T_id') {\n//             setTData({ T_id: value });\n//         }\n//     };\n\n//     const [studentData, setStudentData] = useState([]);\n//     const [studentNames, setStudentNames] = useState([]);\n//     const [teachers, setTeachers] = useState([]);\n\n//     const [PData, setPData] = useState({\n//         P_name: '',\n//         P_details: '',\n//         P_status: '',\n//         P_CSB01: '',\n//         P_CSB02: '',\n//         P_CSB03: '',\n//         P_S1: '',\n//         P_S2: '',\n//         P_T: '',\n//         P_type: '',\n//         P_tool: '',\n//     });\n\n//     const [SData, setSData] = useState({\n//         S_id1: '',\n//         S_id2: ''\n//     });\n\n//     const [TData, setTData] = useState({\n//         T_id: ''\n//     });\n\n//     const validateForm = () => {\n//         const errors = {\n//             projectName: !PData.P_name,\n//             projectDetails: !PData.P_details,\n//             student1: !SData.S_id1,\n//             student2: !SData.S_id2\n//         };\n\n//         setErrors(errors);\n//         return !Object.values(errors).includes(true);\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         if (!validateForm()) {\n//             alert('กรุณากรอกข้อมูลที่จำเป็นให้ครบถ้วน');\n//             return;\n//         }\n\n//         const student1Name = studentData.find(student => student.S_id === SData.S_id1)?.S_name || '';\n//         const student2Name = studentData.find(student => student.S_id === SData.S_id2)?.S_name || '';\n//         const teacherName = teachers.find(teacher => teacher.T_id === TData.T_id)?.T_name || '';\n\n//         const projectData = {\n//             ...PData,\n//             P_S1: student1Name,\n//             P_S2: student2Name,\n//             P_T: teacherName\n//         };\n\n//         try {\n//             console.log('Submitting data:', projectData);\n//             const response = await axios.post('http://localhost:9999/Project', projectData);\n//             console.log('Project added:', response.data);\n//             alert(\"บันทึกโครงงานสำเร็จ!\");\n\n//             setPData({\n//                 P_name: '',\n//                 P_details: '',\n//                 P_status: '',\n//                 P_CSB01: '',\n//                 P_CSB02: '',\n//                 P_CSB03: '',\n//                 P_S1: '',\n//                 P_S2: '',\n//                 P_T: '',\n//                 P_type: '',\n//                 P_tool: ''\n//             });\n//             setSData({\n//                 S_id1: '',\n//                 S_id2: ''\n//             });\n//             setTData({\n//                 T_id: ''\n//             });\n//         } catch (error) {\n//             console.error('Error adding project:', error);\n//             alert(\"ไม่สามารถบันทึกโครงงานได้ กรุณาลองอีกครั้ง\");\n//         }\n\n//         setOpenDialog(true);\n//     };\n\n//     const handleRadioChange = (event) => {\n//         const selectedValue = event.target.value;\n\n//         if (selectedValue === \"No\") {\n//             setPData(prevData => ({\n//                 ...prevData,\n//                 P_status: \"ไม่มีที่ปรึกษา\",\n//                 P_T: ''\n//             }));\n\n//             fetch('http://localhost:9999/Project', {\n//                 method: 'PATCH',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({\n//                     P_status: \"ไม่มีที่ปรึกษา\",\n//                     P_T: null\n//                 }),\n//             })\n//                 .then(response => response.json())\n//                 .then(data => {\n//                     console.log('Success:', data);\n//                 })\n//                 .catch((error) => {\n//                     console.error('Error:', error);\n//                 });\n//         } else if (selectedValue === \"Yes\") {\n//             setPData(prevData => ({\n//                 ...prevData,\n//                 P_status: ''\n//             }));\n//         }\n\n//         setSelectedValue(selectedValue);\n//     };\n\n//     const [errors, setErrors] = useState({\n//         projectName: false,\n//         projectDetails: false,\n//         student1: false,\n//         student2: false\n//     });\n\n//     const selectedIds = [SData.S_id1, SData.S_id2].filter(id => id);\n\n//     useEffect(() => {\n//         const fetchStudent = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:9999/students');\n//                 if (response.data && Array.isArray(response.data)) {\n//                     const uniqueStudents = Array.from(new Map(response.data.map(item => [item.S_id, item])).values());\n//                     setStudentData(uniqueStudents);\n//                     setStudentNames(uniqueStudents.map(item => ({ S_id: item.S_id, S_name: item.S_name })));\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching Student names:', error);\n//             }\n//         };\n//         fetchStudent();\n//     }, []);\n\n//     useEffect(() => {\n//         const fetchTeachers = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:9999/Teacher');\n//                 if (response.data && Array.isArray(response.data)) {\n//                     setTeachers(response.data);\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching Teacher names:', error);\n//             }\n//         };\n//         fetchTeachers();\n//     }, []);\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 // Fetch Exam status data\n//                 const examResponse = await axios.get('http://localhost:9999/Exam');\n//                 const examData = examResponse.data;\n\n//                 // Check the status of Exam_o_CSB01\n//                 const examCSB01 = examData.find(exam => exam.Exam_o_CSB01 !== undefined);\n//                 if (examCSB01 && examCSB01.Exam_o_CSB01 === 'เปิด') {\n//                     setIsExamOpen(true);\n//                 } else {\n//                     setIsExamOpen(false);\n//                     alert('ไม่ได้อยู่ในช่วงยื่นสอบหัวข้อ');\n//                     return; // Exit if the exam is not open\n//                 }\n\n//                 // Fetch Project data\n//                 const projectResponse = await axios.get('http://localhost:9999/Project');\n//                 const projectData = projectResponse.data;\n\n//                 // Fetch Exam results data\n//                 const examResultsResponse = await axios.get('http://localhost:9999/Exam_results');\n//                 const examResultsData = examResultsResponse.data;\n\n//                 if (Array.isArray(projectData) && projectData.length > 0) {\n//                     const project = projectData[0]; // Adjust based on actual API response\n\n//                     // Find the corresponding exam result by P_id\n//                     const examResult = examResultsData.find(\n//                         (result) => result.P_id === project._id\n//                     );\n\n//                     setPData({\n//                         P_id: project._id || '',\n//                         P_name: project.P_name || '',\n//                         P_S1: project.P_S1 || '',\n//                         P_S2: project.P_S2 || '',\n//                         P_T: project.P_T || '',\n//                         ExamStatus: examResult ? examResult.Exam_CSB01_status : ''\n//                     });\n//                 } else {\n//                     console.error('Unexpected API response:', projectData);\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching data:', error);\n//             }\n//         };\n\n//         fetchData();\n//     }, []);\n\n//     // Additional code (related to form handling and submission) remains unchanged\n//     const handleChangeSelectObject = (event) => {\n//         const { name, checked } = event.target;\n//         setSelectedValues((prevValues) => ({\n//             ...prevValues,\n//             [name]: checked,\n//         }));\n//         console.log(`${name} is now ${checked ? 'selected' : 'deselected'}`);\n//     };\n\n//     // Rest of your code\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\n//                             <Box\n//                                 component=\"form\"\n//                                 sx={{\n//                                     marginTop: 8,\n//                                     display: 'block',\n//                                     flexDirection: 'column',\n//                                 }}\n//                                 noValidate\n//                                 autoComplete=\"off\"\n//                             >\n//                                 <Grid container alignItems=\"center\" justifyContent=\"center\" sx={{ ml: 20 }}>\n//                                     <Grid item>\n//                                         <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n//                                             <Typography fontSize='18px'>\n//                                                 <b>แบบฟอร์มเสนอหัวข้อโครงงานพิเศษ</b><br></br>\n//                                             </Typography>\n//                                             <Typography fontSize='18px'>\n//                                                 <b>โครงการพิเศษ (สองภาษา) ภาควิชาวิทยาการคอมพิวเตอร์และสารสนเทศ</b><br></br>\n//                                             </Typography>\n//                                             <Typography fontSize='18px'>\n//                                                 <b>คณะวิทยาศาสตร์ประยุกต์มหาวิทยาลัยเทคโนโลยีพระจอมเกล้าพระนครเหนือ</b>\n//                                             </Typography>\n//                                         </Stack>\n//                                     </Grid>\n//                                 </Grid>\n//                                 <Grid>\n//                                     <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1} sx={{ mt: 5, ml: 35 }}>\n//                                         <Typography fontSize='18px'>\n//                                             รหัสนักศึกษา คนที่ 1\n//                                             <Box\n//                                                 sx={{\n//                                                     minWidth: 180,\n//                                                     marginTop: 1,\n//                                                     marginLeft: 3,\n//                                                     display: \"flex\",\n//                                                 }}\n//                                             >\n//                                                 <FormControl\n//                                                     sx={{\n//                                                         minWidth: 180,\n//                                                         marginRight: 33,\n//                                                     }}>\n//                                                     <InputLabel id=\"StudentID-select-label-1\">รหัสนักศึกษา</InputLabel>\n//                                                     <Select\n//                                                         labelId=\"StudentID-select-label-1\"\n//                                                         id=\"StudentID-select1\"\n//                                                         name=\"S_id1\"\n//                                                         value={SData.S_id1}\n//                                                         label=\"รหัสนักศึกษา\"\n//                                                         onChange={handleSelectChange}\n//                                                     >\n//                                                         {getFilteredOptions([SData.S_id2]).map((student, index) => (\n//                                                             <MenuItem key={index} value={student.S_id}>\n//                                                                 {student.S_id}\n//                                                             </MenuItem>\n//                                                         ))}\n//                                                     </Select>\n//                                                 </FormControl>\n//                                                 <TextField\n//                                                     disabled\n//                                                     id=\"Name1\"\n//                                                     label=\"ชื่อ - สกุล\"\n//                                                     value={studentData.find(student => student.S_id === SData.S_id1)?.S_name || ''}\n//                                                 />\n//                                             </Box>\n//                                         </Typography>\n\n//                                         <Typography\n//                                             fontSize='18px'\n//                                             sx={{\n//                                                 marginTop: 5,\n//                                                 marginLeft: 50,\n//                                             }}>\n//                                             รหัสนักศึกษา คนที่ 2\n//                                             <Box\n//                                                 sx={{\n//                                                     minWidth: 180,\n//                                                     marginTop: 1,\n//                                                     marginLeft: 3,\n//                                                     display: \"flex\",\n//                                                 }}\n//                                             >\n//                                                 <FormControl\n//                                                     sx={{\n//                                                         minWidth: 180,\n//                                                         marginRight: 33,\n//                                                     }}>\n//                                                     <InputLabel id=\"StudentID-select-label-2\">รหัสนักศึกษา</InputLabel>\n//                                                     <Select\n//                                                         labelId=\"StudentID-select-label-2\"\n//                                                         id=\"StudentID-select2\"\n//                                                         name=\"S_id2\"\n//                                                         value={SData.S_id2}\n//                                                         label=\"รหัสนักศึกษา\"\n//                                                         onChange={handleSelectChange}\n//                                                     >\n//                                                         {getFilteredOptions([SData.S_id1]).map((student, index) => (\n//                                                             <MenuItem key={index} value={student.S_id}>\n//                                                                 {student.S_id}\n//                                                             </MenuItem>\n//                                                         ))}\n//                                                     </Select>\n//                                                 </FormControl>\n//                                                 <TextField\n//                                                     disabled\n//                                                     id=\"Name2\"\n//                                                     label=\"ชื่อ - สกุล\"\n//                                                     value={studentData.find(student => student.S_id === SData.S_id2)?.S_name || ''}\n//                                                 />\n//                                             </Box>\n//                                         </Typography>\n\n//                                     </Stack>\n//                                 </Grid>\n//                                 <div>\n//                                     <Typography\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 5,\n//                                             marginLeft: 50,\n\n//                                         }}>\n//                                         ชื่อโครงงานภาษาอังกฤษ\n//                                         <Box\n//                                             sx={{\n//                                                 '& .MuiTextField-root': { width: '75ch' },\n//                                                 marginTop: 1,\n//                                                 marginLeft: 3,\n//                                                 display: \"flex\",\n//                                             }}\n//                                         >\n//                                             <TextField\n//                                                 required\n//                                                 label=\"ชื่อโครงงานภาษาอังกฤษ\"\n//                                                 id=\"P_name\"\n//                                                 value={PData.P_name}\n//                                                 onChange={handleProjectNameChange}\n//                                                 error={errors.projectName}\n//                                                 helperText={errors.projectName ? 'ชื่อโครงงานภาษาอังกฤษจำเป็นต้องกรอก' : ''}\n//                                                 inputProps={{ pattern: \"[A-Za-z ]*\" }}\n//                                             />\n//                                         </Box>\n//                                     </Typography>\n//                                 </div>\n//                                 <div>\n//                                     <Typography\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 5,\n//                                             marginLeft: 50,\n//                                         }}\n//                                     >\n//                                         มีอาจารย์ที่ปรึกษาหรือไม่ ?\n//                                     </Typography>\n//                                     <FormControl\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 0,\n//                                             marginLeft: 55,\n//                                         }}\n//                                     >\n//                                         <RadioGroup\n//                                             row\n//                                             aria-labelledby=\"demo-row-radio-buttons-group-label\"\n//                                             name=\"row-radio-buttons-group\"\n//                                             id=\"selectHaveOrDon't\"\n//                                             value={selectedValue}\n//                                             onChange={handleRadioChange}\n//                                         >\n//                                             <FormControlLabel value=\"Yes\" control={<Radio />} label=\"มี\" />\n//                                             <FormControlLabel value=\"No\" control={<Radio />} label=\"ไม่มี\" sx={{ marginLeft: 10 }} />\n//                                         </RadioGroup>\n//                                     </FormControl>\n\n//                                     {selectedValue === 'Yes' && (\n//                                         <FormControl\n//                                             sx={{\n//                                                 marginTop: 2,\n//                                                 marginLeft: 55,\n//                                                 minWidth: 180,\n//                                                 marginRight: 33,\n//                                             }}>\n//                                             <InputLabel id=\"teacher-select-label\">Teacher</InputLabel>\n//                                             <Select\n//                                                 labelId=\"teacher-select-label\"\n//                                                 id=\"teacher-select\"\n//                                                 name=\"T_id\"\n//                                                 value={TData.T_id}\n//                                                 label=\"Teacher\"\n//                                                 onChange={handleSelectChange}\n//                                             >\n//                                                 {teachers.map((teacher) => (\n//                                                     <MenuItem key={teacher.T_id} value={teacher.T_id}>\n//                                                         {teacher.T_name}\n//                                                     </MenuItem>\n//                                                 ))}\n//                                             </Select>\n//                                         </FormControl>\n//                                     )}\n//                                 </div>\n//                                 <div>\n//                                     <Typography\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 5,\n//                                             marginLeft: 50,\n//                                         }}\n//                                     >\n//                                         โครงงานนี้จัดอยู่ในประเภท\n//                                     </Typography>\n//                                     <FormGroup\n//                                         id=\"object-select\"\n//                                         fontSize=\"18px\"\n//                                         sx={{\n//                                             marginTop: 0,\n//                                             marginLeft: 55,\n//                                         }}\n//                                     >\n//                                         {['networks', 'graphics', 'database', 'ai', 'games'].map((category) => (\n//                                             <FormControlLabel\n//                                                 key={category}\n//                                                 control={\n//                                                     <Checkbox\n//                                                         checked={selectedValues[category]}\n//                                                         onChange={handleChangeSelectObject}\n//                                                         name={category}\n//                                                     />\n//                                                 }\n//                                                 label={category} \n//                                             />\n//                                         ))}\n//                                         {errors.atLeastOneCategory && (\n//                                             <Typography color=\"error\" sx={{ marginLeft: 55, marginTop: 1 }}>\n//                                                 ต้องเลือกประเภทของโครงงานอย่างน้อยหนึ่งรายการ\n//                                             </Typography>\n//                                         )}\n//                                     </FormGroup>\n//                                 </div>\n//                                 <div>\n//                                     <Typography\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 5,\n//                                             marginLeft: 50,\n//                                         }}\n//                                     >\n//                                         รายละเอียดของโครงงานที่จะพัฒนา\n//                                     </Typography>\n//                                     <Box\n//                                         sx={{\n//                                             '& .MuiTextField-root': { width: '85ch' },\n//                                         }}\n//                                     >\n//                                         <TextField\n//                                             fontSize='18px'\n//                                             sx={{\n//                                                 marginTop: 0,\n//                                                 marginLeft: 55,\n//                                             }}\n//                                             id=\"details\"\n//                                             label=\"\"\n//                                             multiline\n//                                             maxRows={8}\n//                                             error={errors.projectDetails}\n//                                             helperText={errors.projectDetails ? 'รายละเอียดของโครงงานต้องกรอก' : ''}\n//                                             onChange={(e) => setPData({ ...PData, P_details: e.target.value })}\n//                                         />\n\n//                                     </Box>\n//                                 </div>\n//                                 <div>\n//                                     <Typography\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 5,\n//                                             marginLeft: 50,\n//                                         }}\n//                                     >\n//                                         เครื่องมือและอุปกรณ์ที่ใช้ในการทำโครงงานนี้\n//                                     </Typography>\n//                                     <Box\n//                                         sx={{\n//                                             '& .MuiTextField-root': { width: '85ch' },\n//                                         }}\n//                                     >\n//                                         <TextField\n//                                             fontSize='18px'\n//                                             sx={{\n//                                                 marginTop: 0,\n//                                                 marginLeft: 55,\n//                                             }}\n//                                             id=\"P_tool\"\n//                                             label=\"\"\n//                                             multiline\n//                                             maxRows={8}\n//                                             value={PData.P_tool}\n//                                             onChange={(e) => setPData({ ...PData, P_tool: e.target.value })}\n//                                         />\n//                                     </Box>\n//                                 </div>\n//                                 <div>\n//                                     <Stack\n//                                         alignItems=\"center\"\n//                                         justifyContent=\"center\"\n//                                         fontSize='18px'\n//                                         sx={{\n//                                             marginTop: 5,\n//                                             marginLeft: 45\n//                                         }}\n//                                     >\n//                                         <Button variant=\"contained\" onClick={handleSubmit}>\n//                                             ยืนยัน\n//                                         </Button>\n//                                     </Stack>\n//                                 </div>\n//                                 <Dialog open={openDialog} onClose={handleCloseDialog}>\n//                                     <DialogTitle>ทำการบันทึกสำเร็จ !!</DialogTitle>\n//                                     <DialogContent>\n//                                         <p>รอการตรวจสอบจากเจ้าหน้าที่</p>\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handleCloseDialog}>Close</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                             </Box>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard>\n//     );\n// }\n\n// export default CSB01;\n\nimport React, { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Stack } from '@mui/system';\nimport { Typography } from '@mui/material';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport Button from '@mui/material/Button';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Dialog from '@mui/material/Dialog';\nimport { Grid } from '@mui/material';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CSB01 = () => {\n  _s();\n  var _studentData$find3, _studentData$find4;\n  const [SData, setSData] = useState({\n    S_id1: '',\n    S_id2: ''\n  });\n  const [PData, setPData] = useState({\n    P_name: '',\n    P_details: '',\n    P_tool: ''\n  });\n  const [TData, setTData] = useState({\n    T_id: ''\n  });\n  const [selectedValue, setSelectedValue] = useState('No');\n  const [selectedValues, setSelectedValues] = useState({});\n  const [openDialog, setOpenDialog] = useState(false);\n  const [errors, setErrors] = useState({});\n  const getFilteredOptions = selectedStudentIds => {\n    // สมมติว่า projectStudents เป็น array ที่เก็บรหัสนักเรียนที่มีอยู่ในโครงการ\n    const projectStudents = []; // ดึงข้อมูลจาก API หรือสถานะที่เก็บไว้\n\n    return studentData.filter(student => !selectedStudentIds.includes(student.S_id) && !projectStudents.includes(student.S_id));\n  };\n  const handleCloseDialog = () => setOpenDialog(false);\n  const handleProjectNameChange = e => {\n    const regex = /^[A-Za-z\\s]*$/;\n    if (regex.test(e.target.value)) {\n      setPData({\n        ...PData,\n        P_name: e.target.value\n      });\n    }\n  };\n  const handleSelectChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'S_id1' || name === 'S_id2') {\n      setSData(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    } else if (name === 'T_id') {\n      setTData({\n        T_id: value\n      });\n    }\n  };\n  const [studentData, setStudentData] = useState([]);\n  const [studentNames, setStudentNames] = useState([]);\n  const [teachers, setTeachers] = useState([]);\n  const validateForm = () => {\n    const errors = {\n      projectName: !PData.P_name,\n      projectDetails: !PData.P_details,\n      student1: !SData.S_id1,\n      student2: !SData.S_id2\n    };\n    setErrors(errors);\n    return !Object.values(errors).includes(true);\n  };\n  const handleSubmit = async e => {\n    var _studentData$find, _studentData$find2, _teachers$find;\n    e.preventDefault();\n    if (!validateForm()) {\n      alert('กรุณากรอกข้อมูลที่จำเป็นให้ครบถ้วน');\n      return;\n    }\n    const student1Name = ((_studentData$find = studentData.find(student => student.S_id === SData.S_id1)) === null || _studentData$find === void 0 ? void 0 : _studentData$find.S_name) || '';\n    const student2Name = ((_studentData$find2 = studentData.find(student => student.S_id === SData.S_id2)) === null || _studentData$find2 === void 0 ? void 0 : _studentData$find2.S_name) || '';\n    const teacherName = ((_teachers$find = teachers.find(teacher => teacher.T_id === TData.T_id)) === null || _teachers$find === void 0 ? void 0 : _teachers$find.T_name) || '';\n    const projectData = {\n      ...PData,\n      P_S1: student1Name,\n      P_S2: student2Name,\n      P_T: teacherName\n    };\n    try {\n      console.log('Submitting data:', projectData);\n      const response = await axios.post('http://localhost:9999/Project', projectData);\n      console.log('Project added:', response.data);\n      alert(\"บันทึกโครงงานสำเร็จ!\");\n      setPData({\n        P_name: '',\n        P_details: '',\n        P_status: '',\n        P_CSB01: '',\n        P_CSB02: '',\n        P_CSB03: '',\n        P_S1: '',\n        P_S2: '',\n        P_T: '',\n        P_type: '',\n        P_tool: ''\n      });\n      setSData({\n        S_id1: '',\n        S_id2: ''\n      });\n      setTData({\n        T_id: ''\n      });\n    } catch (error) {\n      console.error('Error adding project:', error);\n      alert(\"ไม่สามารถบันทึกโครงงานได้ กรุณาลองอีกครั้ง\");\n    }\n    setOpenDialog(true);\n  };\n  const handleRadioChange = event => {\n    const selectedValue = event.target.value;\n    if (selectedValue === \"No\") {\n      setPData(prevData => ({\n        ...prevData,\n        P_status: \"ไม่มีที่ปรึกษา\",\n        P_T: ''\n      }));\n      fetch('http://localhost:9999/Project', {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          P_status: \"ไม่มีที่ปรึกษา\",\n          P_T: null\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    } else if (selectedValue === \"Yes\") {\n      setPData(prevData => ({\n        ...prevData,\n        P_status: ''\n      }));\n    }\n    setSelectedValue(selectedValue);\n  };\n  const selectedIds = [SData.S_id1, SData.S_id2].filter(id => id);\n  useEffect(() => {\n    const fetchStudent = async () => {\n      try {\n        const response = await axios.get('http://localhost:9999/students');\n        if (response.data && Array.isArray(response.data)) {\n          const uniqueStudents = Array.from(new Map(response.data.map(item => [item.S_id, item])).values());\n          setStudentData(uniqueStudents);\n          setStudentNames(uniqueStudents.map(item => ({\n            S_id: item.S_id,\n            S_name: item.S_name\n          })));\n        }\n      } catch (error) {\n        console.error('Error fetching Student names:', error);\n      }\n    };\n    fetchStudent();\n  }, []);\n  useEffect(() => {\n    const fetchTeachers = async () => {\n      try {\n        const response = await axios.get('http://localhost:9999/Teacher');\n        if (response.data && Array.isArray(response.data)) {\n          setTeachers(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching Teacher names:', error);\n      }\n    };\n    fetchTeachers();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch Exam status data\n        const examResponse = await axios.get('http://localhost:9999/Exam');\n        const examData = examResponse.data;\n\n        // Check the status of Exam_o_CSB01\n        const examCSB01 = examData.find(exam => exam.Exam_o_CSB01 !== undefined);\n        if (examCSB01 && examCSB01.Exam_o_CSB01 === 'เปิด') {\n          setIsExamOpen(true);\n        } else {\n          setIsExamOpen(false);\n          alert('ไม่ได้อยู่ในช่วงยื่นสอบหัวข้อ');\n          return; // Exit if the exam is not open\n        }\n\n        // Fetch Project data\n        const projectResponse = await axios.get('http://localhost:9999/Project');\n        const projectData = projectResponse.data;\n\n        // Fetch Exam results data\n        const examResultsResponse = await axios.get('http://localhost:9999/Exam_results');\n        const examResultsData = examResultsResponse.data;\n        if (Array.isArray(projectData) && projectData.length > 0) {\n          const project = projectData[0]; // Adjust based on actual API response\n\n          // Find the corresponding exam result by P_id\n          const examResult = examResultsData.find(result => result.P_id === project._id);\n          setPData({\n            P_id: project._id || '',\n            P_name: project.P_name || '',\n            P_S1: project.P_S1 || '',\n            P_S2: project.P_S2 || '',\n            P_T: project.P_T || '',\n            ExamStatus: examResult ? examResult.Exam_CSB01_status : ''\n          });\n        } else {\n          console.error('Unexpected API response:', projectData);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Additional code (related to form handling and submission) remains unchanged\n  const handleChangeSelectObject = event => {\n    const {\n      name,\n      checked\n    } = event.target;\n    setSelectedValues(prevValues => ({\n      ...prevValues,\n      [name]: checked\n    }));\n    console.log(`${name} is now ${checked ? 'selected' : 'deselected'}`);\n  };\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              component: \"form\",\n              sx: {\n                marginTop: 8,\n                display: 'block',\n                flexDirection: 'column'\n              },\n              noValidate: true,\n              autoComplete: \"off\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    spacing: 1,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      fontSize: \"18px\",\n                      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"\\u0E41\\u0E1A\\u0E1A\\u0E1F\\u0E2D\\u0E23\\u0E4C\\u0E21\\u0E40\\u0E2A\\u0E19\\u0E2D\\u0E2B\\u0E31\\u0E27\\u0E02\\u0E49\\u0E2D\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\\u0E1E\\u0E34\\u0E40\\u0E28\\u0E29\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 945,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 945,\n                        columnNumber: 82\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 944,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      fontSize: \"18px\",\n                      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"\\u0E42\\u0E04\\u0E23\\u0E07\\u0E01\\u0E32\\u0E23\\u0E1E\\u0E34\\u0E40\\u0E28\\u0E29 (\\u0E2A\\u0E2D\\u0E07\\u0E20\\u0E32\\u0E29\\u0E32) \\u0E20\\u0E32\\u0E04\\u0E27\\u0E34\\u0E0A\\u0E32\\u0E27\\u0E34\\u0E17\\u0E22\\u0E32\\u0E01\\u0E32\\u0E23\\u0E04\\u0E2D\\u0E21\\u0E1E\\u0E34\\u0E27\\u0E40\\u0E15\\u0E2D\\u0E23\\u0E4C\\u0E41\\u0E25\\u0E30\\u0E2A\\u0E32\\u0E23\\u0E2A\\u0E19\\u0E40\\u0E17\\u0E28\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 948,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 948,\n                        columnNumber: 112\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 947,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      fontSize: \"18px\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"\\u0E04\\u0E13\\u0E30\\u0E27\\u0E34\\u0E17\\u0E22\\u0E32\\u0E28\\u0E32\\u0E2A\\u0E15\\u0E23\\u0E4C\\u0E1B\\u0E23\\u0E30\\u0E22\\u0E38\\u0E01\\u0E15\\u0E4C\\u0E21\\u0E2B\\u0E32\\u0E27\\u0E34\\u0E17\\u0E22\\u0E32\\u0E25\\u0E31\\u0E22\\u0E40\\u0E17\\u0E04\\u0E42\\u0E19\\u0E42\\u0E25\\u0E22\\u0E35\\u0E1E\\u0E23\\u0E30\\u0E08\\u0E2D\\u0E21\\u0E40\\u0E01\\u0E25\\u0E49\\u0E32\\u0E1E\\u0E23\\u0E30\\u0E19\\u0E04\\u0E23\\u0E40\\u0E2B\\u0E19\\u0E37\\u0E2D\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 951,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 950,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 943,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 942,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: \"18px\",\n                children: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32 \\u0E04\\u0E19\\u0E17\\u0E35\\u0E48 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginTop: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  sx: {\n                    minWidth: 180,\n                    marginRight: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"StudentID-select-label-1\",\n                    children: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 961,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"StudentID-select-label-1\",\n                    id: \"StudentID-select1\",\n                    name: \"S_id1\",\n                    value: SData.S_id1,\n                    label: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\",\n                    onChange: handleSelectChange,\n                    children: getFilteredOptions([SData.S_id2]).map((student, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: student.S_id,\n                      children: student.S_id\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 971,\n                      columnNumber: 45\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 962,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 960,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  label: \"\\u0E0A\\u0E37\\u0E48\\u0E2D - \\u0E2A\\u0E01\\u0E38\\u0E25\",\n                  value: ((_studentData$find3 = studentData.find(student => student.S_id === SData.S_id1)) === null || _studentData$find3 === void 0 ? void 0 : _studentData$find3.S_name) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 977,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: \"18px\",\n                sx: {\n                  marginTop: 5\n                },\n                children: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32 \\u0E04\\u0E19\\u0E17\\u0E35\\u0E48 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  marginTop: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  sx: {\n                    minWidth: 180,\n                    marginRight: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"StudentID-select-label-2\",\n                    children: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 988,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"StudentID-select-label-2\",\n                    id: \"StudentID-select2\",\n                    name: \"S_id2\",\n                    value: SData.S_id2,\n                    label: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\",\n                    onChange: handleSelectChange,\n                    children: getFilteredOptions([SData.S_id1]).map((student, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: student.S_id,\n                      children: student.S_id\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 998,\n                      columnNumber: 45\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 989,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 987,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  disabled: true,\n                  label: \"\\u0E0A\\u0E37\\u0E48\\u0E2D - \\u0E2A\\u0E01\\u0E38\\u0E25\",\n                  value: ((_studentData$find4 = studentData.find(student => student.S_id === SData.S_id2)) === null || _studentData$find4 === void 0 ? void 0 : _studentData$find4.S_name) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1004,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 986,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: \"18px\",\n                sx: {\n                  marginTop: 5\n                },\n                children: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\\u0E20\\u0E32\\u0E29\\u0E32\\u0E2D\\u0E31\\u0E07\\u0E01\\u0E24\\u0E29\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                required: true,\n                label: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\\u0E20\\u0E32\\u0E29\\u0E32\\u0E2D\\u0E31\\u0E07\\u0E01\\u0E24\\u0E29\",\n                id: \"P_name\",\n                value: PData.P_name,\n                onChange: handleProjectNameChange,\n                error: errors.projectName,\n                helperText: errors.projectName ? 'ชื่อโครงงานภาษาอังกฤษจำเป็นต้องกรอก' : '',\n                inputProps: {\n                  pattern: \"[A-Za-z ]*\"\n                },\n                sx: {\n                  marginTop: 1,\n                  width: '75%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: \"18px\",\n                sx: {\n                  marginTop: 5\n                },\n                children: \"\\u0E21\\u0E35\\u0E2D\\u0E32\\u0E08\\u0E32\\u0E23\\u0E22\\u0E4C\\u0E17\\u0E35\\u0E48\\u0E1B\\u0E23\\u0E36\\u0E01\\u0E29\\u0E32\\u0E2B\\u0E23\\u0E37\\u0E2D\\u0E44\\u0E21\\u0E48?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                sx: {\n                  marginTop: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  row: true,\n                  value: selectedValue,\n                  onChange: handleRadioChange,\n                  children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"Yes\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1033,\n                      columnNumber: 76\n                    }, this),\n                    label: \"\\u0E21\\u0E35\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1033,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    value: \"No\",\n                    control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1034,\n                      columnNumber: 75\n                    }, this),\n                    label: \"\\u0E44\\u0E21\\u0E48\\u0E21\\u0E35\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1034,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1028,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1027,\n                columnNumber: 29\n              }, this), selectedValue === 'Yes' && /*#__PURE__*/_jsxDEV(FormControl, {\n                sx: {\n                  minWidth: 180,\n                  marginTop: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"teacher-select-label\",\n                  children: \"Teacher\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1039,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"teacher-select-label\",\n                  id: \"teacher-select\",\n                  name: \"T_id\",\n                  value: TData.T_id,\n                  label: \"Teacher\",\n                  onChange: handleSelectChange,\n                  children: teachers.map(teacher => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: teacher.T_id,\n                    children: teacher.T_name\n                  }, teacher.T_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1049,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1040,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1038,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: \"18px\",\n                sx: {\n                  marginTop: 5\n                },\n                children: \"\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\\u0E19\\u0E35\\u0E49\\u0E08\\u0E31\\u0E14\\u0E2D\\u0E22\\u0E39\\u0E48\\u0E43\\u0E19\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E20\\u0E17\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: ['networks', 'graphics', 'database', 'ai', 'games'].map(category => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: selectedValues[category],\n                    onChange: handleChangeSelectObject,\n                    name: category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1064,\n                    columnNumber: 45\n                  }, this),\n                  label: category\n                }, category, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1061,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: \"18px\",\n                sx: {\n                  marginTop: 5\n                },\n                children: \"\\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14\\u0E02\\u0E2D\\u0E07\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\\u0E17\\u0E35\\u0E48\\u0E08\\u0E30\\u0E1E\\u0E31\\u0E12\\u0E19\\u0E32\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1076,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"details\",\n                multiline: true,\n                maxRows: 8,\n                sx: {\n                  width: '85%',\n                  marginTop: 1\n                },\n                onChange: e => setPData({\n                  ...PData,\n                  P_details: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                fontSize: \"18px\",\n                sx: {\n                  marginTop: 5\n                },\n                children: \"\\u0E40\\u0E04\\u0E23\\u0E37\\u0E48\\u0E2D\\u0E07\\u0E21\\u0E37\\u0E2D\\u0E41\\u0E25\\u0E30\\u0E2D\\u0E38\\u0E1B\\u0E01\\u0E23\\u0E13\\u0E4C\\u0E17\\u0E35\\u0E48\\u0E43\\u0E0A\\u0E49\\u0E43\\u0E19\\u0E01\\u0E32\\u0E23\\u0E17\\u0E33\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\\u0E19\\u0E35\\u0E49\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1086,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"P_tool\",\n                multiline: true,\n                maxRows: 8,\n                value: PData.P_tool,\n                onChange: e => setPData({\n                  ...PData,\n                  P_tool: e.target.value\n                }),\n                sx: {\n                  width: '85%',\n                  marginTop: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1087,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                sx: {\n                  marginTop: 3\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: handleSubmit,\n                  children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1098,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E2A\\u0E33\\u0E40\\u0E23\\u0E47\\u0E08\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E44\\u0E14\\u0E49\\u0E16\\u0E39\\u0E01\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E40\\u0E23\\u0E35\\u0E22\\u0E1A\\u0E23\\u0E49\\u0E2D\\u0E22\\u0E41\\u0E25\\u0E49\\u0E27\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: \"\\u0E1B\\u0E34\\u0E14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1115,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 926,\n    columnNumber: 5\n  }, this);\n};\n_s(CSB01, \"rwiBcjxQffR0YjBPpCZnVLFsQUY=\");\n_c = CSB01;\nexport default CSB01;\nvar _c;\n$RefreshReg$(_c, \"CSB01\");","map":{"version":3,"names":["React","useState","useEffect","Box","TextField","Stack","Typography","InputLabel","MenuItem","FormControl","Select","Radio","RadioGroup","FormControlLabel","Checkbox","FormGroup","Button","DialogTitle","DialogContent","DialogActions","Dialog","Grid","MainCard","gridSpacing","axios","jsxDEV","_jsxDEV","CSB01","_s","_studentData$find3","_studentData$find4","SData","setSData","S_id1","S_id2","PData","setPData","P_name","P_details","P_tool","TData","setTData","T_id","selectedValue","setSelectedValue","selectedValues","setSelectedValues","openDialog","setOpenDialog","errors","setErrors","getFilteredOptions","selectedStudentIds","projectStudents","studentData","filter","student","includes","S_id","handleCloseDialog","handleProjectNameChange","e","regex","test","target","value","handleSelectChange","name","prevState","setStudentData","studentNames","setStudentNames","teachers","setTeachers","validateForm","projectName","projectDetails","student1","student2","Object","values","handleSubmit","_studentData$find","_studentData$find2","_teachers$find","preventDefault","alert","student1Name","find","S_name","student2Name","teacherName","teacher","T_name","projectData","P_S1","P_S2","P_T","console","log","response","post","data","P_status","P_CSB01","P_CSB02","P_CSB03","P_type","error","handleRadioChange","event","prevData","fetch","method","headers","body","JSON","stringify","then","json","catch","selectedIds","id","fetchStudent","get","Array","isArray","uniqueStudents","from","Map","map","item","fetchTeachers","fetchData","examResponse","examData","examCSB01","exam","Exam_o_CSB01","undefined","setIsExamOpen","projectResponse","examResultsResponse","examResultsData","length","project","examResult","result","P_id","_id","ExamStatus","Exam_CSB01_status","handleChangeSelectObject","checked","prevValues","children","container","spacing","xs","alignItems","justifyContent","component","sx","marginTop","display","flexDirection","noValidate","autoComplete","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","minWidth","marginRight","labelId","label","onChange","index","disabled","required","helperText","inputProps","pattern","width","row","control","category","multiline","maxRows","variant","onClick","open","onClose","_c","$RefreshReg$"],"sources":["C:/test/create-react-app/src/views/sample-page/CSB01.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import TextField from '@mui/material/TextField';\r\n// import { Stack } from '@mui/system';\r\n// import { Typography } from '@mui/material';\r\n// import InputLabel from '@mui/material/InputLabel';\r\n// import MenuItem from '@mui/material/MenuItem';\r\n// import FormControl from '@mui/material/FormControl';\r\n// import Select from '@mui/material/Select';\r\n// import Radio from '@mui/material/Radio';\r\n// import RadioGroup from '@mui/material/RadioGroup';\r\n// import FormControlLabel from '@mui/material/FormControlLabel';\r\n// import Checkbox from '@mui/material/Checkbox';\r\n// import FormGroup from '@mui/material/FormGroup';\r\n// import Button from '@mui/material/Button';\r\n// import DialogTitle from '@mui/material/DialogTitle';\r\n// import DialogContent from '@mui/material/DialogContent';\r\n// import DialogActions from '@mui/material/DialogActions';\r\n// import Dialog from '@mui/material/Dialog';\r\n// import { Grid } from '@mui/material';\r\n// import MainCard from 'ui-component/cards/MainCard';\r\n// import { gridSpacing } from 'store/constant';\r\n// import axios from 'axios';\r\n\r\n// function CSB01() {\r\n\r\n\r\n    \r\n//     const [selectedValues, setSelectedValues] = useState({\r\n//         networks: false,\r\n//         graphics: false,\r\n//         database: false,\r\n//         ai: false,\r\n//         games: false,\r\n//     });\r\n\r\n//     const getFilteredOptions = (selectedStudentIds) => {\r\n//         // สมมติว่า projectStudents เป็น array ที่เก็บรหัสนักเรียนที่มีอยู่ในโครงการ\r\n//         const projectStudents = []; // ดึงข้อมูลจาก API หรือสถานะที่เก็บไว้\r\n    \r\n//         return studentData.filter(student => \r\n//             !selectedStudentIds.includes(student.S_id) && \r\n//             !projectStudents.includes(student.S_id)\r\n//         );\r\n//     };\r\n    \r\n\r\n//     const [openDialog, setOpenDialog] = useState(false);\r\n\r\n//     const handleCloseDialog = () => setOpenDialog(false);\r\n\r\n//     const [selectedValue, setSelectedValue] = useState('');\r\n\r\n//     const handleProjectNameChange = (e) => {\r\n//         const regex = /^[A-Za-z\\s]*$/;\r\n//         if (regex.test(e.target.value)) {\r\n//             setPData({ ...PData, P_name: e.target.value });\r\n//         }\r\n//     };\r\n\r\n//     const handleSelectChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         if (name === 'S_id1' || name === 'S_id2') {\r\n//             setSData(prevState => ({\r\n//                 ...prevState,\r\n//                 [name]: value\r\n//             }));\r\n//         } else if (name === 'T_id') {\r\n//             setTData({ T_id: value });\r\n//         }\r\n//     };\r\n\r\n//     const [studentData, setStudentData] = useState([]);\r\n//     const [studentNames, setStudentNames] = useState([]);\r\n//     const [teachers, setTeachers] = useState([]);\r\n\r\n//     const [PData, setPData] = useState({\r\n//         P_name: '',\r\n//         P_details: '',\r\n//         P_status: '',\r\n//         P_CSB01: '',\r\n//         P_CSB02: '',\r\n//         P_CSB03: '',\r\n//         P_S1: '',\r\n//         P_S2: '',\r\n//         P_T: '',\r\n//         P_type: '',\r\n//         P_tool: '',\r\n//     });\r\n\r\n//     const [SData, setSData] = useState({\r\n//         S_id1: '',\r\n//         S_id2: ''\r\n//     });\r\n\r\n//     const [TData, setTData] = useState({\r\n//         T_id: ''\r\n//     });\r\n\r\n//     const validateForm = () => {\r\n//         const errors = {\r\n//             projectName: !PData.P_name,\r\n//             projectDetails: !PData.P_details,\r\n//             student1: !SData.S_id1,\r\n//             student2: !SData.S_id2\r\n//         };\r\n\r\n//         setErrors(errors);\r\n//         return !Object.values(errors).includes(true);\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         if (!validateForm()) {\r\n//             alert('กรุณากรอกข้อมูลที่จำเป็นให้ครบถ้วน');\r\n//             return;\r\n//         }\r\n\r\n//         const student1Name = studentData.find(student => student.S_id === SData.S_id1)?.S_name || '';\r\n//         const student2Name = studentData.find(student => student.S_id === SData.S_id2)?.S_name || '';\r\n//         const teacherName = teachers.find(teacher => teacher.T_id === TData.T_id)?.T_name || '';\r\n\r\n//         const projectData = {\r\n//             ...PData,\r\n//             P_S1: student1Name,\r\n//             P_S2: student2Name,\r\n//             P_T: teacherName\r\n//         };\r\n\r\n//         try {\r\n//             console.log('Submitting data:', projectData);\r\n//             const response = await axios.post('http://localhost:9999/Project', projectData);\r\n//             console.log('Project added:', response.data);\r\n//             alert(\"บันทึกโครงงานสำเร็จ!\");\r\n\r\n//             setPData({\r\n//                 P_name: '',\r\n//                 P_details: '',\r\n//                 P_status: '',\r\n//                 P_CSB01: '',\r\n//                 P_CSB02: '',\r\n//                 P_CSB03: '',\r\n//                 P_S1: '',\r\n//                 P_S2: '',\r\n//                 P_T: '',\r\n//                 P_type: '',\r\n//                 P_tool: ''\r\n//             });\r\n//             setSData({\r\n//                 S_id1: '',\r\n//                 S_id2: ''\r\n//             });\r\n//             setTData({\r\n//                 T_id: ''\r\n//             });\r\n//         } catch (error) {\r\n//             console.error('Error adding project:', error);\r\n//             alert(\"ไม่สามารถบันทึกโครงงานได้ กรุณาลองอีกครั้ง\");\r\n//         }\r\n\r\n//         setOpenDialog(true);\r\n//     };\r\n\r\n//     const handleRadioChange = (event) => {\r\n//         const selectedValue = event.target.value;\r\n\r\n//         if (selectedValue === \"No\") {\r\n//             setPData(prevData => ({\r\n//                 ...prevData,\r\n//                 P_status: \"ไม่มีที่ปรึกษา\",\r\n//                 P_T: ''\r\n//             }));\r\n\r\n//             fetch('http://localhost:9999/Project', {\r\n//                 method: 'PATCH',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify({\r\n//                     P_status: \"ไม่มีที่ปรึกษา\",\r\n//                     P_T: null\r\n//                 }),\r\n//             })\r\n//                 .then(response => response.json())\r\n//                 .then(data => {\r\n//                     console.log('Success:', data);\r\n//                 })\r\n//                 .catch((error) => {\r\n//                     console.error('Error:', error);\r\n//                 });\r\n//         } else if (selectedValue === \"Yes\") {\r\n//             setPData(prevData => ({\r\n//                 ...prevData,\r\n//                 P_status: ''\r\n//             }));\r\n//         }\r\n\r\n//         setSelectedValue(selectedValue);\r\n//     };\r\n\r\n//     const [errors, setErrors] = useState({\r\n//         projectName: false,\r\n//         projectDetails: false,\r\n//         student1: false,\r\n//         student2: false\r\n//     });\r\n\r\n//     const selectedIds = [SData.S_id1, SData.S_id2].filter(id => id);\r\n\r\n//     useEffect(() => {\r\n//         const fetchStudent = async () => {\r\n//             try {\r\n//                 const response = await axios.get('http://localhost:9999/students');\r\n//                 if (response.data && Array.isArray(response.data)) {\r\n//                     const uniqueStudents = Array.from(new Map(response.data.map(item => [item.S_id, item])).values());\r\n//                     setStudentData(uniqueStudents);\r\n//                     setStudentNames(uniqueStudents.map(item => ({ S_id: item.S_id, S_name: item.S_name })));\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error('Error fetching Student names:', error);\r\n//             }\r\n//         };\r\n//         fetchStudent();\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         const fetchTeachers = async () => {\r\n//             try {\r\n//                 const response = await axios.get('http://localhost:9999/Teacher');\r\n//                 if (response.data && Array.isArray(response.data)) {\r\n//                     setTeachers(response.data);\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error('Error fetching Teacher names:', error);\r\n//             }\r\n//         };\r\n//         fetchTeachers();\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             try {\r\n//                 // Fetch Exam status data\r\n//                 const examResponse = await axios.get('http://localhost:9999/Exam');\r\n//                 const examData = examResponse.data;\r\n    \r\n//                 // Check the status of Exam_o_CSB01\r\n//                 const examCSB01 = examData.find(exam => exam.Exam_o_CSB01 !== undefined);\r\n//                 if (examCSB01 && examCSB01.Exam_o_CSB01 === 'เปิด') {\r\n//                     setIsExamOpen(true);\r\n//                 } else {\r\n//                     setIsExamOpen(false);\r\n//                     alert('ไม่ได้อยู่ในช่วงยื่นสอบหัวข้อ');\r\n//                     return; // Exit if the exam is not open\r\n//                 }\r\n\r\n//                 // Fetch Project data\r\n//                 const projectResponse = await axios.get('http://localhost:9999/Project');\r\n//                 const projectData = projectResponse.data;\r\n    \r\n//                 // Fetch Exam results data\r\n//                 const examResultsResponse = await axios.get('http://localhost:9999/Exam_results');\r\n//                 const examResultsData = examResultsResponse.data;\r\n    \r\n//                 if (Array.isArray(projectData) && projectData.length > 0) {\r\n//                     const project = projectData[0]; // Adjust based on actual API response\r\n    \r\n//                     // Find the corresponding exam result by P_id\r\n//                     const examResult = examResultsData.find(\r\n//                         (result) => result.P_id === project._id\r\n//                     );\r\n    \r\n//                     setPData({\r\n//                         P_id: project._id || '',\r\n//                         P_name: project.P_name || '',\r\n//                         P_S1: project.P_S1 || '',\r\n//                         P_S2: project.P_S2 || '',\r\n//                         P_T: project.P_T || '',\r\n//                         ExamStatus: examResult ? examResult.Exam_CSB01_status : ''\r\n//                     });\r\n//                 } else {\r\n//                     console.error('Unexpected API response:', projectData);\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error('Error fetching data:', error);\r\n//             }\r\n//         };\r\n    \r\n//         fetchData();\r\n//     }, []);\r\n    \r\n//     // Additional code (related to form handling and submission) remains unchanged\r\n//     const handleChangeSelectObject = (event) => {\r\n//         const { name, checked } = event.target;\r\n//         setSelectedValues((prevValues) => ({\r\n//             ...prevValues,\r\n//             [name]: checked,\r\n//         }));\r\n//         console.log(`${name} is now ${checked ? 'selected' : 'deselected'}`);\r\n//     };\r\n    \r\n//     // Rest of your code\r\n    \r\n\r\n//     return (\r\n//         <MainCard>\r\n//             <Grid container spacing={gridSpacing}>\r\n//                 <Grid item xs={12}>\r\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n//                         <Grid item>\r\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\r\n//                             <Box\r\n//                                 component=\"form\"\r\n//                                 sx={{\r\n//                                     marginTop: 8,\r\n//                                     display: 'block',\r\n//                                     flexDirection: 'column',\r\n//                                 }}\r\n//                                 noValidate\r\n//                                 autoComplete=\"off\"\r\n//                             >\r\n//                                 <Grid container alignItems=\"center\" justifyContent=\"center\" sx={{ ml: 20 }}>\r\n//                                     <Grid item>\r\n//                                         <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n//                                             <Typography fontSize='18px'>\r\n//                                                 <b>แบบฟอร์มเสนอหัวข้อโครงงานพิเศษ</b><br></br>\r\n//                                             </Typography>\r\n//                                             <Typography fontSize='18px'>\r\n//                                                 <b>โครงการพิเศษ (สองภาษา) ภาควิชาวิทยาการคอมพิวเตอร์และสารสนเทศ</b><br></br>\r\n//                                             </Typography>\r\n//                                             <Typography fontSize='18px'>\r\n//                                                 <b>คณะวิทยาศาสตร์ประยุกต์มหาวิทยาลัยเทคโนโลยีพระจอมเกล้าพระนครเหนือ</b>\r\n//                                             </Typography>\r\n//                                         </Stack>\r\n//                                     </Grid>\r\n//                                 </Grid>\r\n//                                 <Grid>\r\n//                                     <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1} sx={{ mt: 5, ml: 35 }}>\r\n//                                         <Typography fontSize='18px'>\r\n//                                             รหัสนักศึกษา คนที่ 1\r\n//                                             <Box\r\n//                                                 sx={{\r\n//                                                     minWidth: 180,\r\n//                                                     marginTop: 1,\r\n//                                                     marginLeft: 3,\r\n//                                                     display: \"flex\",\r\n//                                                 }}\r\n//                                             >\r\n//                                                 <FormControl\r\n//                                                     sx={{\r\n//                                                         minWidth: 180,\r\n//                                                         marginRight: 33,\r\n//                                                     }}>\r\n//                                                     <InputLabel id=\"StudentID-select-label-1\">รหัสนักศึกษา</InputLabel>\r\n//                                                     <Select\r\n//                                                         labelId=\"StudentID-select-label-1\"\r\n//                                                         id=\"StudentID-select1\"\r\n//                                                         name=\"S_id1\"\r\n//                                                         value={SData.S_id1}\r\n//                                                         label=\"รหัสนักศึกษา\"\r\n//                                                         onChange={handleSelectChange}\r\n//                                                     >\r\n//                                                         {getFilteredOptions([SData.S_id2]).map((student, index) => (\r\n//                                                             <MenuItem key={index} value={student.S_id}>\r\n//                                                                 {student.S_id}\r\n//                                                             </MenuItem>\r\n//                                                         ))}\r\n//                                                     </Select>\r\n//                                                 </FormControl>\r\n//                                                 <TextField\r\n//                                                     disabled\r\n//                                                     id=\"Name1\"\r\n//                                                     label=\"ชื่อ - สกุล\"\r\n//                                                     value={studentData.find(student => student.S_id === SData.S_id1)?.S_name || ''}\r\n//                                                 />\r\n//                                             </Box>\r\n//                                         </Typography>\r\n\r\n//                                         <Typography\r\n//                                             fontSize='18px'\r\n//                                             sx={{\r\n//                                                 marginTop: 5,\r\n//                                                 marginLeft: 50,\r\n//                                             }}>\r\n//                                             รหัสนักศึกษา คนที่ 2\r\n//                                             <Box\r\n//                                                 sx={{\r\n//                                                     minWidth: 180,\r\n//                                                     marginTop: 1,\r\n//                                                     marginLeft: 3,\r\n//                                                     display: \"flex\",\r\n//                                                 }}\r\n//                                             >\r\n//                                                 <FormControl\r\n//                                                     sx={{\r\n//                                                         minWidth: 180,\r\n//                                                         marginRight: 33,\r\n//                                                     }}>\r\n//                                                     <InputLabel id=\"StudentID-select-label-2\">รหัสนักศึกษา</InputLabel>\r\n//                                                     <Select\r\n//                                                         labelId=\"StudentID-select-label-2\"\r\n//                                                         id=\"StudentID-select2\"\r\n//                                                         name=\"S_id2\"\r\n//                                                         value={SData.S_id2}\r\n//                                                         label=\"รหัสนักศึกษา\"\r\n//                                                         onChange={handleSelectChange}\r\n//                                                     >\r\n//                                                         {getFilteredOptions([SData.S_id1]).map((student, index) => (\r\n//                                                             <MenuItem key={index} value={student.S_id}>\r\n//                                                                 {student.S_id}\r\n//                                                             </MenuItem>\r\n//                                                         ))}\r\n//                                                     </Select>\r\n//                                                 </FormControl>\r\n//                                                 <TextField\r\n//                                                     disabled\r\n//                                                     id=\"Name2\"\r\n//                                                     label=\"ชื่อ - สกุล\"\r\n//                                                     value={studentData.find(student => student.S_id === SData.S_id2)?.S_name || ''}\r\n//                                                 />\r\n//                                             </Box>\r\n//                                         </Typography>\r\n\r\n//                                     </Stack>\r\n//                                 </Grid>\r\n//                                 <div>\r\n//                                     <Typography\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 5,\r\n//                                             marginLeft: 50,\r\n\r\n//                                         }}>\r\n//                                         ชื่อโครงงานภาษาอังกฤษ\r\n//                                         <Box\r\n//                                             sx={{\r\n//                                                 '& .MuiTextField-root': { width: '75ch' },\r\n//                                                 marginTop: 1,\r\n//                                                 marginLeft: 3,\r\n//                                                 display: \"flex\",\r\n//                                             }}\r\n//                                         >\r\n//                                             <TextField\r\n//                                                 required\r\n//                                                 label=\"ชื่อโครงงานภาษาอังกฤษ\"\r\n//                                                 id=\"P_name\"\r\n//                                                 value={PData.P_name}\r\n//                                                 onChange={handleProjectNameChange}\r\n//                                                 error={errors.projectName}\r\n//                                                 helperText={errors.projectName ? 'ชื่อโครงงานภาษาอังกฤษจำเป็นต้องกรอก' : ''}\r\n//                                                 inputProps={{ pattern: \"[A-Za-z ]*\" }}\r\n//                                             />\r\n//                                         </Box>\r\n//                                     </Typography>\r\n//                                 </div>\r\n//                                 <div>\r\n//                                     <Typography\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 5,\r\n//                                             marginLeft: 50,\r\n//                                         }}\r\n//                                     >\r\n//                                         มีอาจารย์ที่ปรึกษาหรือไม่ ?\r\n//                                     </Typography>\r\n//                                     <FormControl\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 0,\r\n//                                             marginLeft: 55,\r\n//                                         }}\r\n//                                     >\r\n//                                         <RadioGroup\r\n//                                             row\r\n//                                             aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n//                                             name=\"row-radio-buttons-group\"\r\n//                                             id=\"selectHaveOrDon't\"\r\n//                                             value={selectedValue}\r\n//                                             onChange={handleRadioChange}\r\n//                                         >\r\n//                                             <FormControlLabel value=\"Yes\" control={<Radio />} label=\"มี\" />\r\n//                                             <FormControlLabel value=\"No\" control={<Radio />} label=\"ไม่มี\" sx={{ marginLeft: 10 }} />\r\n//                                         </RadioGroup>\r\n//                                     </FormControl>\r\n\r\n//                                     {selectedValue === 'Yes' && (\r\n//                                         <FormControl\r\n//                                             sx={{\r\n//                                                 marginTop: 2,\r\n//                                                 marginLeft: 55,\r\n//                                                 minWidth: 180,\r\n//                                                 marginRight: 33,\r\n//                                             }}>\r\n//                                             <InputLabel id=\"teacher-select-label\">Teacher</InputLabel>\r\n//                                             <Select\r\n//                                                 labelId=\"teacher-select-label\"\r\n//                                                 id=\"teacher-select\"\r\n//                                                 name=\"T_id\"\r\n//                                                 value={TData.T_id}\r\n//                                                 label=\"Teacher\"\r\n//                                                 onChange={handleSelectChange}\r\n//                                             >\r\n//                                                 {teachers.map((teacher) => (\r\n//                                                     <MenuItem key={teacher.T_id} value={teacher.T_id}>\r\n//                                                         {teacher.T_name}\r\n//                                                     </MenuItem>\r\n//                                                 ))}\r\n//                                             </Select>\r\n//                                         </FormControl>\r\n//                                     )}\r\n//                                 </div>\r\n//                                 <div>\r\n//                                     <Typography\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 5,\r\n//                                             marginLeft: 50,\r\n//                                         }}\r\n//                                     >\r\n//                                         โครงงานนี้จัดอยู่ในประเภท\r\n//                                     </Typography>\r\n//                                     <FormGroup\r\n//                                         id=\"object-select\"\r\n//                                         fontSize=\"18px\"\r\n//                                         sx={{\r\n//                                             marginTop: 0,\r\n//                                             marginLeft: 55,\r\n//                                         }}\r\n//                                     >\r\n//                                         {['networks', 'graphics', 'database', 'ai', 'games'].map((category) => (\r\n//                                             <FormControlLabel\r\n//                                                 key={category}\r\n//                                                 control={\r\n//                                                     <Checkbox\r\n//                                                         checked={selectedValues[category]}\r\n//                                                         onChange={handleChangeSelectObject}\r\n//                                                         name={category}\r\n//                                                     />\r\n//                                                 }\r\n//                                                 label={category} \r\n//                                             />\r\n//                                         ))}\r\n//                                         {errors.atLeastOneCategory && (\r\n//                                             <Typography color=\"error\" sx={{ marginLeft: 55, marginTop: 1 }}>\r\n//                                                 ต้องเลือกประเภทของโครงงานอย่างน้อยหนึ่งรายการ\r\n//                                             </Typography>\r\n//                                         )}\r\n//                                     </FormGroup>\r\n//                                 </div>\r\n//                                 <div>\r\n//                                     <Typography\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 5,\r\n//                                             marginLeft: 50,\r\n//                                         }}\r\n//                                     >\r\n//                                         รายละเอียดของโครงงานที่จะพัฒนา\r\n//                                     </Typography>\r\n//                                     <Box\r\n//                                         sx={{\r\n//                                             '& .MuiTextField-root': { width: '85ch' },\r\n//                                         }}\r\n//                                     >\r\n//                                         <TextField\r\n//                                             fontSize='18px'\r\n//                                             sx={{\r\n//                                                 marginTop: 0,\r\n//                                                 marginLeft: 55,\r\n//                                             }}\r\n//                                             id=\"details\"\r\n//                                             label=\"\"\r\n//                                             multiline\r\n//                                             maxRows={8}\r\n//                                             error={errors.projectDetails}\r\n//                                             helperText={errors.projectDetails ? 'รายละเอียดของโครงงานต้องกรอก' : ''}\r\n//                                             onChange={(e) => setPData({ ...PData, P_details: e.target.value })}\r\n//                                         />\r\n\r\n//                                     </Box>\r\n//                                 </div>\r\n//                                 <div>\r\n//                                     <Typography\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 5,\r\n//                                             marginLeft: 50,\r\n//                                         }}\r\n//                                     >\r\n//                                         เครื่องมือและอุปกรณ์ที่ใช้ในการทำโครงงานนี้\r\n//                                     </Typography>\r\n//                                     <Box\r\n//                                         sx={{\r\n//                                             '& .MuiTextField-root': { width: '85ch' },\r\n//                                         }}\r\n//                                     >\r\n//                                         <TextField\r\n//                                             fontSize='18px'\r\n//                                             sx={{\r\n//                                                 marginTop: 0,\r\n//                                                 marginLeft: 55,\r\n//                                             }}\r\n//                                             id=\"P_tool\"\r\n//                                             label=\"\"\r\n//                                             multiline\r\n//                                             maxRows={8}\r\n//                                             value={PData.P_tool}\r\n//                                             onChange={(e) => setPData({ ...PData, P_tool: e.target.value })}\r\n//                                         />\r\n//                                     </Box>\r\n//                                 </div>\r\n//                                 <div>\r\n//                                     <Stack\r\n//                                         alignItems=\"center\"\r\n//                                         justifyContent=\"center\"\r\n//                                         fontSize='18px'\r\n//                                         sx={{\r\n//                                             marginTop: 5,\r\n//                                             marginLeft: 45\r\n//                                         }}\r\n//                                     >\r\n//                                         <Button variant=\"contained\" onClick={handleSubmit}>\r\n//                                             ยืนยัน\r\n//                                         </Button>\r\n//                                     </Stack>\r\n//                                 </div>\r\n//                                 <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n//                                     <DialogTitle>ทำการบันทึกสำเร็จ !!</DialogTitle>\r\n//                                     <DialogContent>\r\n//                                         <p>รอการตรวจสอบจากเจ้าหน้าที่</p>\r\n//                                     </DialogContent>\r\n//                                     <DialogActions>\r\n//                                         <Button onClick={handleCloseDialog}>Close</Button>\r\n//                                     </DialogActions>\r\n//                                 </Dialog>\r\n//                             </Box>\r\n//                         </Grid>\r\n//                     </Grid>\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </MainCard>\r\n//     );\r\n// }\r\n\r\n// export default CSB01;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Stack } from '@mui/system';\r\nimport { Typography } from '@mui/material';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport Button from '@mui/material/Button';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport { Grid } from '@mui/material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport axios from 'axios';\r\n\r\nconst CSB01 = () => {\r\n    const [SData, setSData] = useState({ S_id1: '', S_id2: '' });\r\n    const [PData, setPData] = useState({ P_name: '', P_details: '', P_tool: '' });\r\n    const [TData, setTData] = useState({ T_id: '' });\r\n    const [selectedValue, setSelectedValue] = useState('No');\r\n    const [selectedValues, setSelectedValues] = useState({});\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const getFilteredOptions = (selectedStudentIds) => {\r\n        // สมมติว่า projectStudents เป็น array ที่เก็บรหัสนักเรียนที่มีอยู่ในโครงการ\r\n        const projectStudents = []; // ดึงข้อมูลจาก API หรือสถานะที่เก็บไว้\r\n    \r\n        return studentData.filter(student => \r\n            !selectedStudentIds.includes(student.S_id) && \r\n            !projectStudents.includes(student.S_id)\r\n        );\r\n    };\r\n    \r\n\r\n\r\n\r\n    const handleCloseDialog = () => setOpenDialog(false);\r\n\r\n\r\n\r\n    const handleProjectNameChange = (e) => {\r\n        const regex = /^[A-Za-z\\s]*$/;\r\n        if (regex.test(e.target.value)) {\r\n            setPData({ ...PData, P_name: e.target.value });\r\n        }\r\n    };\r\n\r\n    const handleSelectChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name === 'S_id1' || name === 'S_id2') {\r\n            setSData(prevState => ({\r\n                ...prevState,\r\n                [name]: value\r\n            }));\r\n        } else if (name === 'T_id') {\r\n            setTData({ T_id: value });\r\n        }\r\n    };\r\n\r\n    const [studentData, setStudentData] = useState([]);\r\n    const [studentNames, setStudentNames] = useState([]);\r\n    const [teachers, setTeachers] = useState([]);\r\n\r\n    const validateForm = () => {\r\n        const errors = {\r\n            projectName: !PData.P_name,\r\n            projectDetails: !PData.P_details,\r\n            student1: !SData.S_id1,\r\n            student2: !SData.S_id2\r\n        };\r\n\r\n        setErrors(errors);\r\n        return !Object.values(errors).includes(true);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!validateForm()) {\r\n            alert('กรุณากรอกข้อมูลที่จำเป็นให้ครบถ้วน');\r\n            return;\r\n        }\r\n\r\n        const student1Name = studentData.find(student => student.S_id === SData.S_id1)?.S_name || '';\r\n        const student2Name = studentData.find(student => student.S_id === SData.S_id2)?.S_name || '';\r\n        const teacherName = teachers.find(teacher => teacher.T_id === TData.T_id)?.T_name || '';\r\n\r\n        const projectData = {\r\n            ...PData,\r\n            P_S1: student1Name,\r\n            P_S2: student2Name,\r\n            P_T: teacherName\r\n        };\r\n\r\n        try {\r\n            console.log('Submitting data:', projectData);\r\n            const response = await axios.post('http://localhost:9999/Project', projectData);\r\n            console.log('Project added:', response.data);\r\n            alert(\"บันทึกโครงงานสำเร็จ!\");\r\n\r\n            setPData({\r\n                P_name: '',\r\n                P_details: '',\r\n                P_status: '',\r\n                P_CSB01: '',\r\n                P_CSB02: '',\r\n                P_CSB03: '',\r\n                P_S1: '',\r\n                P_S2: '',\r\n                P_T: '',\r\n                P_type: '',\r\n                P_tool: ''\r\n            });\r\n            setSData({\r\n                S_id1: '',\r\n                S_id2: ''\r\n            });\r\n            setTData({\r\n                T_id: ''\r\n            });\r\n        } catch (error) {\r\n            console.error('Error adding project:', error);\r\n            alert(\"ไม่สามารถบันทึกโครงงานได้ กรุณาลองอีกครั้ง\");\r\n        }\r\n\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    const handleRadioChange = (event) => {\r\n        const selectedValue = event.target.value;\r\n\r\n        if (selectedValue === \"No\") {\r\n            setPData(prevData => ({\r\n                ...prevData,\r\n                P_status: \"ไม่มีที่ปรึกษา\",\r\n                P_T: ''\r\n            }));\r\n\r\n            fetch('http://localhost:9999/Project', {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    P_status: \"ไม่มีที่ปรึกษา\",\r\n                    P_T: null\r\n                }),\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log('Success:', data);\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Error:', error);\r\n                });\r\n        } else if (selectedValue === \"Yes\") {\r\n            setPData(prevData => ({\r\n                ...prevData,\r\n                P_status: ''\r\n            }));\r\n        }\r\n\r\n        setSelectedValue(selectedValue);\r\n    };\r\n\r\n\r\n    const selectedIds = [SData.S_id1, SData.S_id2].filter(id => id);\r\n\r\n    useEffect(() => {\r\n        const fetchStudent = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:9999/students');\r\n                if (response.data && Array.isArray(response.data)) {\r\n                    const uniqueStudents = Array.from(new Map(response.data.map(item => [item.S_id, item])).values());\r\n                    setStudentData(uniqueStudents);\r\n                    setStudentNames(uniqueStudents.map(item => ({ S_id: item.S_id, S_name: item.S_name })));\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching Student names:', error);\r\n            }\r\n        };\r\n        fetchStudent();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchTeachers = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:9999/Teacher');\r\n                if (response.data && Array.isArray(response.data)) {\r\n                    setTeachers(response.data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching Teacher names:', error);\r\n            }\r\n        };\r\n        fetchTeachers();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                // Fetch Exam status data\r\n                const examResponse = await axios.get('http://localhost:9999/Exam');\r\n                const examData = examResponse.data;\r\n    \r\n                // Check the status of Exam_o_CSB01\r\n                const examCSB01 = examData.find(exam => exam.Exam_o_CSB01 !== undefined);\r\n                if (examCSB01 && examCSB01.Exam_o_CSB01 === 'เปิด') {\r\n                    setIsExamOpen(true);\r\n                } else {\r\n                    setIsExamOpen(false);\r\n                    alert('ไม่ได้อยู่ในช่วงยื่นสอบหัวข้อ');\r\n                    return; // Exit if the exam is not open\r\n                }\r\n\r\n                // Fetch Project data\r\n                const projectResponse = await axios.get('http://localhost:9999/Project');\r\n                const projectData = projectResponse.data;\r\n    \r\n                // Fetch Exam results data\r\n                const examResultsResponse = await axios.get('http://localhost:9999/Exam_results');\r\n                const examResultsData = examResultsResponse.data;\r\n    \r\n                if (Array.isArray(projectData) && projectData.length > 0) {\r\n                    const project = projectData[0]; // Adjust based on actual API response\r\n    \r\n                    // Find the corresponding exam result by P_id\r\n                    const examResult = examResultsData.find(\r\n                        (result) => result.P_id === project._id\r\n                    );\r\n    \r\n                    setPData({\r\n                        P_id: project._id || '',\r\n                        P_name: project.P_name || '',\r\n                        P_S1: project.P_S1 || '',\r\n                        P_S2: project.P_S2 || '',\r\n                        P_T: project.P_T || '',\r\n                        ExamStatus: examResult ? examResult.Exam_CSB01_status : ''\r\n                    });\r\n                } else {\r\n                    console.error('Unexpected API response:', projectData);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n    \r\n        fetchData();\r\n    }, []);\r\n    \r\n    // Additional code (related to form handling and submission) remains unchanged\r\n    const handleChangeSelectObject = (event) => {\r\n        const { name, checked } = event.target;\r\n        setSelectedValues((prevValues) => ({\r\n            ...prevValues,\r\n            [name]: checked,\r\n        }));\r\n        console.log(`${name} is now ${checked ? 'selected' : 'deselected'}`);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <MainCard>\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Box\r\n                            component=\"form\"\r\n                            sx={{\r\n                                marginTop: 8,\r\n                                display: 'block',\r\n                                flexDirection: 'column',\r\n                            }}\r\n                            noValidate\r\n                            autoComplete=\"off\"\r\n                        >\r\n                            <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n                                <Grid item>\r\n                                    <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                        <Typography fontSize='18px'>\r\n                                            <b>แบบฟอร์มเสนอหัวข้อโครงงานพิเศษ</b><br />\r\n                                        </Typography>\r\n                                        <Typography fontSize='18px'>\r\n                                            <b>โครงการพิเศษ (สองภาษา) ภาควิชาวิทยาการคอมพิวเตอร์และสารสนเทศ</b><br />\r\n                                        </Typography>\r\n                                        <Typography fontSize='18px'>\r\n                                            <b>คณะวิทยาศาสตร์ประยุกต์มหาวิทยาลัยเทคโนโลยีพระจอมเกล้าพระนครเหนือ</b>\r\n                                        </Typography>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            {/* Student 1 */}\r\n                            <Typography fontSize='18px'>รหัสนักศึกษา คนที่ 1</Typography>\r\n                            <Box sx={{ display: \"flex\", alignItems: \"center\", marginTop: 1 }}>\r\n                                <FormControl sx={{ minWidth: 180, marginRight: 2 }}>\r\n                                    <InputLabel id=\"StudentID-select-label-1\">รหัสนักศึกษา</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"StudentID-select-label-1\"\r\n                                        id=\"StudentID-select1\"\r\n                                        name=\"S_id1\"\r\n                                        value={SData.S_id1}\r\n                                        label=\"รหัสนักศึกษา\"\r\n                                        onChange={handleSelectChange}\r\n                                    >\r\n                                        {getFilteredOptions([SData.S_id2]).map((student, index) => (\r\n                                            <MenuItem key={index} value={student.S_id}>\r\n                                                {student.S_id}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <TextField\r\n                                    disabled\r\n                                    label=\"ชื่อ - สกุล\"\r\n                                    value={studentData.find(student => student.S_id === SData.S_id1)?.S_name || ''}\r\n                                />\r\n                            </Box>\r\n\r\n                            {/* Student 2 */}\r\n                            <Typography fontSize='18px' sx={{ marginTop: 5 }}>รหัสนักศึกษา คนที่ 2</Typography>\r\n                            <Box sx={{ display: \"flex\", alignItems: \"center\", marginTop: 1 }}>\r\n                                <FormControl sx={{ minWidth: 180, marginRight: 2 }}>\r\n                                    <InputLabel id=\"StudentID-select-label-2\">รหัสนักศึกษา</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"StudentID-select-label-2\"\r\n                                        id=\"StudentID-select2\"\r\n                                        name=\"S_id2\"\r\n                                        value={SData.S_id2}\r\n                                        label=\"รหัสนักศึกษา\"\r\n                                        onChange={handleSelectChange}\r\n                                    >\r\n                                        {getFilteredOptions([SData.S_id1]).map((student, index) => (\r\n                                            <MenuItem key={index} value={student.S_id}>\r\n                                                {student.S_id}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <TextField\r\n                                    disabled\r\n                                    label=\"ชื่อ - สกุล\"\r\n                                    value={studentData.find(student => student.S_id === SData.S_id2)?.S_name || ''}\r\n                                />\r\n                            </Box>\r\n\r\n                            {/* Project Name */}\r\n                            <Typography fontSize='18px' sx={{ marginTop: 5 }}>ชื่อโครงงานภาษาอังกฤษ</Typography>\r\n                            <TextField\r\n                                required\r\n                                label=\"ชื่อโครงงานภาษาอังกฤษ\"\r\n                                id=\"P_name\"\r\n                                value={PData.P_name}\r\n                                onChange={handleProjectNameChange}\r\n                                error={errors.projectName}\r\n                                helperText={errors.projectName ? 'ชื่อโครงงานภาษาอังกฤษจำเป็นต้องกรอก' : ''}\r\n                                inputProps={{ pattern: \"[A-Za-z ]*\" }}\r\n                                sx={{ marginTop: 1, width: '75%' }}\r\n                            />\r\n\r\n                            {/* Advisor */}\r\n                            <Typography fontSize='18px' sx={{ marginTop: 5 }}>มีอาจารย์ที่ปรึกษาหรือไม่?</Typography>\r\n                            <FormControl sx={{ marginTop: 0 }}>\r\n                                <RadioGroup\r\n                                    row\r\n                                    value={selectedValue}\r\n                                    onChange={handleRadioChange}\r\n                                >\r\n                                    <FormControlLabel value=\"Yes\" control={<Radio />} label=\"มี\" />\r\n                                    <FormControlLabel value=\"No\" control={<Radio />} label=\"ไม่มี\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                            {selectedValue === 'Yes' && (\r\n                                <FormControl sx={{ minWidth: 180, marginTop: 2 }}>\r\n                                    <InputLabel id=\"teacher-select-label\">Teacher</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"teacher-select-label\"\r\n                                        id=\"teacher-select\"\r\n                                        name=\"T_id\"\r\n                                        value={TData.T_id}\r\n                                        label=\"Teacher\"\r\n                                        onChange={handleSelectChange}\r\n                                    >\r\n                                        {teachers.map((teacher) => (\r\n                                            <MenuItem key={teacher.T_id} value={teacher.T_id}>\r\n                                                {teacher.T_name}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            )}\r\n\r\n                            {/* Project Category */}\r\n                            <Typography fontSize='18px' sx={{ marginTop: 5 }}>โครงงานนี้จัดอยู่ในประเภท</Typography>\r\n                            <FormGroup>\r\n                                {['networks', 'graphics', 'database', 'ai', 'games'].map((category) => (\r\n                                    <FormControlLabel\r\n                                        key={category}\r\n                                        control={\r\n                                            <Checkbox\r\n                                                checked={selectedValues[category]}\r\n                                                onChange={handleChangeSelectObject}\r\n                                                name={category}\r\n                                            />\r\n                                        }\r\n                                        label={category}\r\n                                    />\r\n                                ))}\r\n                            </FormGroup>\r\n\r\n                            {/* Project Details */}\r\n                            <Typography fontSize='18px' sx={{ marginTop: 5 }}>รายละเอียดของโครงงานที่จะพัฒนา</Typography>\r\n                            <TextField\r\n                                id=\"details\"\r\n                                multiline\r\n                                maxRows={8}\r\n                                sx={{ width: '85%', marginTop: 1 }}\r\n                                onChange={(e) => setPData({ ...PData, P_details: e.target.value })}\r\n                            />\r\n\r\n                            {/* Project Tools */}\r\n                            <Typography fontSize='18px' sx={{ marginTop: 5 }}>เครื่องมือและอุปกรณ์ที่ใช้ในการทำโครงงานนี้</Typography>\r\n                            <TextField\r\n                                id=\"P_tool\"\r\n                                multiline\r\n                                maxRows={8}\r\n                                value={PData.P_tool}\r\n                                onChange={(e) => setPData({ ...PData, P_tool: e.target.value })}\r\n                                sx={{ width: '85%', marginTop: 1 }}\r\n                            />\r\n\r\n                            {/* Submit Button */}\r\n                            <Stack alignItems=\"center\" justifyContent=\"center\" sx={{ marginTop: 3 }}>\r\n                                <Button variant=\"contained\" onClick={handleSubmit}>\r\n                                    บันทึก\r\n                                </Button>\r\n                            </Stack>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n\r\n        {/* Dialog for Success Message */}\r\n        <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n            <DialogTitle>บันทึกสำเร็จ</DialogTitle>\r\n            <DialogContent>\r\n                <Typography>ข้อมูลได้ถูกบันทึกเรียบร้อยแล้ว</Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleCloseDialog}>ปิด</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </MainCard>\r\n);\r\n};\r\n\r\nexport default CSB01;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,UAAU,QAAQ,eAAe;AAC1C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,S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"},"metadata":{},"sourceType":"module","externalDependencies":[]}