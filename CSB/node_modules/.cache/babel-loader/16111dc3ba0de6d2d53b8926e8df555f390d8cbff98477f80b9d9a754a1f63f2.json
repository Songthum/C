{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Table, Grid, Paper, TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\n// import axios from 'axios';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// const InputScoreCSB01 = () => {\n//   const [projects, setProjects] = useState([]); // State for storing project data from API\n//   const [openPopup, setOpenPopup] = useState(false); // State for managing the popup\n//   const [selectedProject, setSelectedProject] = useState(null); // State for the selected project\n//   const [data, setData] = useState([\n//     { id: 1, name: 'การวิเคราะห์ปัญหา(Problem Analysis)', description: [\n//         '1. มีการระบุที่มาของปัญหา',\n//         '2. มีการนำเสนอข้อมูลทางสถิติหรือหลักฐานเพื่อสนับสนุนความสำคัญของปัญหา',\n//         '3. มีอ้างอิงแหล่งข้อมูลที่น่าเชื่อถือ'], score: ''\n//     },\n//     { id: 2, name: 'แนวคิด/ แนวทางของระบบ(Solution)', description: [\n//         '1. มีความสามารถแก้ปัญหาได้แท้จริง ตรงเป้า',\n//         '2. มีวิธีการที่นำเสนอที่มีประสิทธิภาพ'], score: ''\n//     },\n//     { id: 3, name: 'ขอบเขตและปริมาณงาน(Scope)', description: [\n//         '1. มีลักษณะและปริมาณงานเหมาะสมสำหรับปริญญานิพนธ์',\n//         '2. มีความเหมาะสมตามกรอบเวลา'], score: ''\n//     },\n//     { id: 4, name: 'ต้นแบบระบบ(System Prototype)', description: [\n//         'มีการนำเสนอต้นแบบระบบด้วยเครื่องมือที่มีความเหมาะสม เช่น Mockup, wireframe, story board และ system architecture'], score: ''\n//     },\n//     { id: 5, name: 'ลักษณะของกลุ่มผู้ใช้งาน(Target market)', description: [\n//         '1. มีการกำหนดเป้าหมายสำหรับการใช้งานระบบอย่างชัดเจน',\n//         '2. มีการศึกษาลักษณะกลุ่มเป้าหมาย',\n//         '3. มีการศึกษาผลกระทบที่คาดว่าจะเกิดต่อกลุ่มเป้าหมาย'], score: ''\n//     },\n//     { id: 6, name: 'การวิเคราะห์การตลาด (Market analysis)', description: [\n//         '1. มีการนำเสนอระบบที่ใกล้เคียง/ที่เกี่ยวข้องอย่างน้อย 2 ระบบ',\n//         '2. มีการระบุข้อจำกัดของระบบที่ใกล้เคียงหรือเกี่ยวข้อง',\n//         '3. มีการระบุความแตกต่างหรือจุดเด่นของระบบที่นำเสนอ'], score: ''\n//     },\n//     { id: 7, name: 'การศึกษาความเป็นไปได้ (Feasibility study)', description: [\n//         '1. มีการนำเสนอการศึกษาเทคนิคที่เกี่ยวข้องเบื้องต้น',\n//         '2. มีการศึกษาข้อจำกัดของอุปกรณ์/ระบบที่เกี่ยวข้อง'], score: ''\n//     },\n//     { id: 8, name: 'ผลการประเมิน', score: '' }\n//   ]);\n\n//   useEffect(() => {\n//     // Fetch project data from API when the component loads\n//     axios\n//       .get('http://localhost:9999/Project')\n//       .then((response) => {\n//         setProjects(response.data); // Set project data in state\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching projects:', error);\n//       });\n//   }, []);\n\n//   const handleCheckboxChange = (id, type) => {\n//     setData(prevData =>\n//       prevData.map(item =>\n//         item.id === id\n//           ? { ...item, score: type === 'yes' ? 'ผ่าน' : 'ไม่ผ่าน' }\n//           : item\n//       )\n//     );\n//   };\n\n//   useEffect(() => {\n//     if (Array.isArray(data)) {\n//       updateFinalScore();\n//     }\n//   }, [data]);\n\n//   const updateFinalScore = () => {\n//     const countPass = data\n//       .filter(item => item.id >= 1 && item.id <= 7)\n//       .filter(item => item.score === 'ผ่าน').length;\n\n//     const countFail = data\n//       .filter(item => item.id >= 1 && item.id <= 7)\n//       .filter(item => item.score === 'ไม่ผ่าน').length;\n\n//     if (countFail >= 4) {\n//       setData(prevData =>\n//         prevData.map(item =>\n//           item.id === 8\n//             ? { ...item, score: 'ไม่ผ่านการประเมินหัวข้อ' }\n//             : item\n//         )\n//       );\n//     } else if (countPass >= 4) {\n//       setData(prevData =>\n//         prevData.map(item =>\n//           item.id === 8\n//             ? { ...item, score: 'ผ่านการประเมินหัวข้อ' }\n//             : item\n//         )\n//       );\n//     }\n//   };\n\n//   const handleOpenPopup = (project) => {\n//     setSelectedProject(project); // Set selected project to evaluate\n//     setOpenPopup(true); // Open the evaluation popup\n//   };\n\n//   const handleClosePopup = () => {\n//     setOpenPopup(false); // Close the popup\n//   };\n\n//   const handleDonNotGoAny = () => {\n//     alert('การดำเนินการไม่เข้าร่วมประเมินทั้งหมด');\n//   };\n\n//   const handleSavePopup = async (e) => {\n//     e.preventDefault();\n//     handleSubmit(e);\n//     setOpenPopup(false);\n//     saveScore();\n//   };\n\n//   const saveScore = async () => {\n//     const lastScore = data.find(item => item.id === 8)?.score || '';\n\n//     try {\n//       const response = await axios.post('http://localhost:9999/Exam_results', {\n//         Er_results: lastScore,\n//       });\n\n//       if (response.status === 200) {\n//         console.log('Score saved successfully!', response.data);\n//       } else {\n//         console.error('Failed to save score. Response:', response);\n//       }\n//     } catch (error) {\n//       console.error('Error saving score:', error.response ? error.response.data : error.message);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:9999/Exam_results', formData);\n//       console.log('Subject added:', response.data);\n//       alert(\"Subject added successfully!\");\n//       // Reset form after successful submission\n//       setFormData({\n//         Er_name: '',\n//         Er_results: '',\n//         Er_com: '',\n//         Er_status: '',\n//         Er_date: '',\n//         Er_time: ''\n//       });\n//     } catch (error) {\n//       console.error('Error adding subject:', error);\n//       alert(\"Failed to add subject. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <MainCard>\n//       <Grid container spacing={gridSpacing}>\n//         <Grid item xs={12}>\n//           <h1>ประเมินการสอบหัวข้อโครงงานพิเศษ</h1>\n//           <Button onClick={handleDonNotGoAny} variant=\"contained\" color=\"error\">\n//             ไม่เข้าร่วมประเมินทั้งหมด\n//           </Button>\n\n//           <TableContainer component={Paper} style={{ marginTop: '20px' }}>\n//             <Table>\n//               <TableHead>\n//                 <TableRow>\n//                   <TableCell>ลำดับที่</TableCell>\n//                   <TableCell>ชื่อโครงงาน</TableCell>\n//                   <TableCell>ประเมินการสอบโครงงานพิเศษ</TableCell>\n//                   <TableCell>ไม่ประสงค์ลงคะแนนสอบ</TableCell>\n//                   <TableCell>ไม่เข้าประเมินการสอบ</TableCell>\n//                 </TableRow>\n//               </TableHead>\n//               <TableBody>\n//                 {projects.map((project, index) => (\n//                   <TableRow key={project.P_id}>\n//                     <TableCell>{index + 1}</TableCell>\n//                     <TableCell>{project.P_name}</TableCell>\n//                     <TableCell>\n//                       <Button\n//                         onClick={() => handleOpenPopup(project)}\n//                         variant=\"outlined\"\n//                       >\n//                         ประเมิน\n//                       </Button>\n//                     </TableCell>\n//                     <TableCell>\n//                       <Button\n//                         onClick={() => alert(`ไม่ประสงค์ลงคะแนนสอบสำหรับโครงงาน: ${project.P_name}`)}\n//                         variant=\"outlined\"\n//                       >\n//                         ไม่ประสงค์ลงคะแนนสอบ\n//                       </Button>\n//                     </TableCell>\n//                     <TableCell>\n//                       <Button\n//                         onClick={() => alert(`ไม่เข้าประเมินการสอบสำหรับโครงงาน: ${project.P_name}`)}\n//                         variant=\"outlined\"\n//                       >\n//                         ไม่เข้าประเมินการสอบ\n//                       </Button>\n//                     </TableCell>\n//                   </TableRow>\n//                 ))}\n//               </TableBody>\n//             </Table>\n//           </TableContainer>\n\n//           {/* Evaluation Popup */}\n//           <Dialog open={openPopup} onClose={handleClosePopup} maxWidth=\"md\" fullWidth>\n//             <DialogTitle>ประเมินโครงงาน: {selectedProject?.P_name}</DialogTitle>\n//             <DialogContent>\n//               {selectedProject && (\n//                 <>\n//                   <h3>นักศึกษาคนที่ 1: {selectedProject.P_S1}</h3>\n//                   <h3>นักศึกษาคนที่ 2: {selectedProject.P_S2}</h3>\n//                   <h3>อาจารย์ที่ปรึกษา: {selectedProject.P_T}</h3>\n//                   <h2>ตารางลงคะแนนสำหรับกรรมการสอบ</h2>\n//                   <TableContainer component={Paper}>\n//                     <Table>\n//                       <TableHead>\n//                         <TableRow>\n//                           <TableCell>ลำดับที่</TableCell>\n//                           <TableCell>เกณฑ์พิจารณา</TableCell>\n//                           <TableCell>คำอธิบาย</TableCell>\n//                           <TableCell>ผลการประเมิน</TableCell>\n//                         </TableRow>\n//                       </TableHead>\n//                       <TableBody>\n//                         {data.map((item, index) => (\n//                           <TableRow key={item.id}>\n//                             <TableCell>{item.id}</TableCell>\n//                             <TableCell>{item.name}</TableCell>\n//                             <TableCell>\n//                               <ul>\n//                                 {(item.description || []).map((desc, idx) => (\n//                                   <li key={idx}>{desc}</li>\n//                                 ))}\n//                               </ul>\n//                             </TableCell>\n//                             <TableCell>\n//                               {item.id === 8 ? (\n//                                 <TextField value={item.score} disabled fullWidth margin=\"none\" />\n//                               ) : (\n//                                 <div>\n//                                   <label htmlFor={`pass-${index}`}>\n//                                     <input\n//                                       type=\"radio\"\n//                                       id={`pass-${index}`}\n//                                       checked={item.score === \"ผ่าน\"}\n//                                       onChange={() => handleCheckboxChange(item.id, \"yes\")}\n//                                     />\n//                                     ผ่าน\n//                                   </label>\n//                                   <label htmlFor={`fail-${index}`}>\n//                                     <input\n//                                       type=\"radio\"\n//                                       id={`fail-${index}`}\n//                                       checked={item.score === \"ไม่ผ่าน\"}\n//                                       onChange={() => handleCheckboxChange(item.id, \"no\")}\n//                                     />\n//                                     ไม่ผ่าน\n//                                   </label>\n//                                 </div>\n//                               )}\n//                             </TableCell>\n//                           </TableRow>\n//                         ))}\n//                       </TableBody>\n//                     </Table>\n//                   </TableContainer>\n//                 </>\n//               )}\n//             </DialogContent>\n//             <DialogActions>\n//               <Button onClick={handleClosePopup} color=\"secondary\">\n//                 ยกเลิก\n//               </Button>\n//               <Button onClick={handleSavePopup} variant=\"contained\" color=\"primary\">\n//                 บันทึกการประเมิน\n//               </Button>\n//             </DialogActions>\n//           </Dialog>\n//         </Grid>\n//       </Grid>\n//     </MainCard>\n//   );\n// };\n\n// export default InputScoreCSB01;","map":{"version":3,"names":[],"sources":["C:/test/create-react-app/src/views/utilities/InputScoreCSB01.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Table, Grid, Paper, TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\r\n// import axios from 'axios';\r\n// import MainCard from 'ui-component/cards/MainCard';\r\n// import { gridSpacing } from 'store/constant';\r\n\r\n// const InputScoreCSB01 = () => {\r\n//   const [projects, setProjects] = useState([]); // State for storing project data from API\r\n//   const [openPopup, setOpenPopup] = useState(false); // State for managing the popup\r\n//   const [selectedProject, setSelectedProject] = useState(null); // State for the selected project\r\n//   const [data, setData] = useState([\r\n//     { id: 1, name: 'การวิเคราะห์ปัญหา(Problem Analysis)', description: [\r\n//         '1. มีการระบุที่มาของปัญหา',\r\n//         '2. มีการนำเสนอข้อมูลทางสถิติหรือหลักฐานเพื่อสนับสนุนความสำคัญของปัญหา',\r\n//         '3. มีอ้างอิงแหล่งข้อมูลที่น่าเชื่อถือ'], score: ''\r\n//     },\r\n//     { id: 2, name: 'แนวคิด/ แนวทางของระบบ(Solution)', description: [\r\n//         '1. มีความสามารถแก้ปัญหาได้แท้จริง ตรงเป้า',\r\n//         '2. มีวิธีการที่นำเสนอที่มีประสิทธิภาพ'], score: ''\r\n//     },\r\n//     { id: 3, name: 'ขอบเขตและปริมาณงาน(Scope)', description: [\r\n//         '1. มีลักษณะและปริมาณงานเหมาะสมสำหรับปริญญานิพนธ์',\r\n//         '2. มีความเหมาะสมตามกรอบเวลา'], score: ''\r\n//     },\r\n//     { id: 4, name: 'ต้นแบบระบบ(System Prototype)', description: [\r\n//         'มีการนำเสนอต้นแบบระบบด้วยเครื่องมือที่มีความเหมาะสม เช่น Mockup, wireframe, story board และ system architecture'], score: ''\r\n//     },\r\n//     { id: 5, name: 'ลักษณะของกลุ่มผู้ใช้งาน(Target market)', description: [\r\n//         '1. มีการกำหนดเป้าหมายสำหรับการใช้งานระบบอย่างชัดเจน',\r\n//         '2. มีการศึกษาลักษณะกลุ่มเป้าหมาย',\r\n//         '3. มีการศึกษาผลกระทบที่คาดว่าจะเกิดต่อกลุ่มเป้าหมาย'], score: ''\r\n//     },\r\n//     { id: 6, name: 'การวิเคราะห์การตลาด (Market analysis)', description: [\r\n//         '1. มีการนำเสนอระบบที่ใกล้เคียง/ที่เกี่ยวข้องอย่างน้อย 2 ระบบ',\r\n//         '2. มีการระบุข้อจำกัดของระบบที่ใกล้เคียงหรือเกี่ยวข้อง',\r\n//         '3. มีการระบุความแตกต่างหรือจุดเด่นของระบบที่นำเสนอ'], score: ''\r\n//     },\r\n//     { id: 7, name: 'การศึกษาความเป็นไปได้ (Feasibility study)', description: [\r\n//         '1. มีการนำเสนอการศึกษาเทคนิคที่เกี่ยวข้องเบื้องต้น',\r\n//         '2. มีการศึกษาข้อจำกัดของอุปกรณ์/ระบบที่เกี่ยวข้อง'], score: ''\r\n//     },\r\n//     { id: 8, name: 'ผลการประเมิน', score: '' }\r\n//   ]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch project data from API when the component loads\r\n//     axios\r\n//       .get('http://localhost:9999/Project')\r\n//       .then((response) => {\r\n//         setProjects(response.data); // Set project data in state\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('Error fetching projects:', error);\r\n//       });\r\n//   }, []);\r\n\r\n//   const handleCheckboxChange = (id, type) => {\r\n//     setData(prevData =>\r\n//       prevData.map(item =>\r\n//         item.id === id\r\n//           ? { ...item, score: type === 'yes' ? 'ผ่าน' : 'ไม่ผ่าน' }\r\n//           : item\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (Array.isArray(data)) {\r\n//       updateFinalScore();\r\n//     }\r\n//   }, [data]);\r\n\r\n//   const updateFinalScore = () => {\r\n//     const countPass = data\r\n//       .filter(item => item.id >= 1 && item.id <= 7)\r\n//       .filter(item => item.score === 'ผ่าน').length;\r\n\r\n//     const countFail = data\r\n//       .filter(item => item.id >= 1 && item.id <= 7)\r\n//       .filter(item => item.score === 'ไม่ผ่าน').length;\r\n\r\n//     if (countFail >= 4) {\r\n//       setData(prevData =>\r\n//         prevData.map(item =>\r\n//           item.id === 8\r\n//             ? { ...item, score: 'ไม่ผ่านการประเมินหัวข้อ' }\r\n//             : item\r\n//         )\r\n//       );\r\n//     } else if (countPass >= 4) {\r\n//       setData(prevData =>\r\n//         prevData.map(item =>\r\n//           item.id === 8\r\n//             ? { ...item, score: 'ผ่านการประเมินหัวข้อ' }\r\n//             : item\r\n//         )\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const handleOpenPopup = (project) => {\r\n//     setSelectedProject(project); // Set selected project to evaluate\r\n//     setOpenPopup(true); // Open the evaluation popup\r\n//   };\r\n\r\n//   const handleClosePopup = () => {\r\n//     setOpenPopup(false); // Close the popup\r\n//   };\r\n\r\n//   const handleDonNotGoAny = () => {\r\n//     alert('การดำเนินการไม่เข้าร่วมประเมินทั้งหมด');\r\n//   };\r\n\r\n//   const handleSavePopup = async (e) => {\r\n//     e.preventDefault();\r\n//     handleSubmit(e);\r\n//     setOpenPopup(false);\r\n//     saveScore();\r\n//   };\r\n\r\n//   const saveScore = async () => {\r\n//     const lastScore = data.find(item => item.id === 8)?.score || '';\r\n  \r\n//     try {\r\n//       const response = await axios.post('http://localhost:9999/Exam_results', {\r\n//         Er_results: lastScore,\r\n//       });\r\n  \r\n//       if (response.status === 200) {\r\n//         console.log('Score saved successfully!', response.data);\r\n//       } else {\r\n//         console.error('Failed to save score. Response:', response);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error saving score:', error.response ? error.response.data : error.message);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post('http://localhost:9999/Exam_results', formData);\r\n//       console.log('Subject added:', response.data);\r\n//       alert(\"Subject added successfully!\");\r\n//       // Reset form after successful submission\r\n//       setFormData({\r\n//         Er_name: '',\r\n//         Er_results: '',\r\n//         Er_com: '',\r\n//         Er_status: '',\r\n//         Er_date: '',\r\n//         Er_time: ''\r\n//       });\r\n//     } catch (error) {\r\n//       console.error('Error adding subject:', error);\r\n//       alert(\"Failed to add subject. Please try again later.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <MainCard>\r\n//       <Grid container spacing={gridSpacing}>\r\n//         <Grid item xs={12}>\r\n//           <h1>ประเมินการสอบหัวข้อโครงงานพิเศษ</h1>\r\n//           <Button onClick={handleDonNotGoAny} variant=\"contained\" color=\"error\">\r\n//             ไม่เข้าร่วมประเมินทั้งหมด\r\n//           </Button>\r\n\r\n//           <TableContainer component={Paper} style={{ marginTop: '20px' }}>\r\n//             <Table>\r\n//               <TableHead>\r\n//                 <TableRow>\r\n//                   <TableCell>ลำดับที่</TableCell>\r\n//                   <TableCell>ชื่อโครงงาน</TableCell>\r\n//                   <TableCell>ประเมินการสอบโครงงานพิเศษ</TableCell>\r\n//                   <TableCell>ไม่ประสงค์ลงคะแนนสอบ</TableCell>\r\n//                   <TableCell>ไม่เข้าประเมินการสอบ</TableCell>\r\n//                 </TableRow>\r\n//               </TableHead>\r\n//               <TableBody>\r\n//                 {projects.map((project, index) => (\r\n//                   <TableRow key={project.P_id}>\r\n//                     <TableCell>{index + 1}</TableCell>\r\n//                     <TableCell>{project.P_name}</TableCell>\r\n//                     <TableCell>\r\n//                       <Button\r\n//                         onClick={() => handleOpenPopup(project)}\r\n//                         variant=\"outlined\"\r\n//                       >\r\n//                         ประเมิน\r\n//                       </Button>\r\n//                     </TableCell>\r\n//                     <TableCell>\r\n//                       <Button\r\n//                         onClick={() => alert(`ไม่ประสงค์ลงคะแนนสอบสำหรับโครงงาน: ${project.P_name}`)}\r\n//                         variant=\"outlined\"\r\n//                       >\r\n//                         ไม่ประสงค์ลงคะแนนสอบ\r\n//                       </Button>\r\n//                     </TableCell>\r\n//                     <TableCell>\r\n//                       <Button\r\n//                         onClick={() => alert(`ไม่เข้าประเมินการสอบสำหรับโครงงาน: ${project.P_name}`)}\r\n//                         variant=\"outlined\"\r\n//                       >\r\n//                         ไม่เข้าประเมินการสอบ\r\n//                       </Button>\r\n//                     </TableCell>\r\n//                   </TableRow>\r\n//                 ))}\r\n//               </TableBody>\r\n//             </Table>\r\n//           </TableContainer>\r\n\r\n//           {/* Evaluation Popup */}\r\n//           <Dialog open={openPopup} onClose={handleClosePopup} maxWidth=\"md\" fullWidth>\r\n//             <DialogTitle>ประเมินโครงงาน: {selectedProject?.P_name}</DialogTitle>\r\n//             <DialogContent>\r\n//               {selectedProject && (\r\n//                 <>\r\n//                   <h3>นักศึกษาคนที่ 1: {selectedProject.P_S1}</h3>\r\n//                   <h3>นักศึกษาคนที่ 2: {selectedProject.P_S2}</h3>\r\n//                   <h3>อาจารย์ที่ปรึกษา: {selectedProject.P_T}</h3>\r\n//                   <h2>ตารางลงคะแนนสำหรับกรรมการสอบ</h2>\r\n//                   <TableContainer component={Paper}>\r\n//                     <Table>\r\n//                       <TableHead>\r\n//                         <TableRow>\r\n//                           <TableCell>ลำดับที่</TableCell>\r\n//                           <TableCell>เกณฑ์พิจารณา</TableCell>\r\n//                           <TableCell>คำอธิบาย</TableCell>\r\n//                           <TableCell>ผลการประเมิน</TableCell>\r\n//                         </TableRow>\r\n//                       </TableHead>\r\n//                       <TableBody>\r\n//                         {data.map((item, index) => (\r\n//                           <TableRow key={item.id}>\r\n//                             <TableCell>{item.id}</TableCell>\r\n//                             <TableCell>{item.name}</TableCell>\r\n//                             <TableCell>\r\n//                               <ul>\r\n//                                 {(item.description || []).map((desc, idx) => (\r\n//                                   <li key={idx}>{desc}</li>\r\n//                                 ))}\r\n//                               </ul>\r\n//                             </TableCell>\r\n//                             <TableCell>\r\n//                               {item.id === 8 ? (\r\n//                                 <TextField value={item.score} disabled fullWidth margin=\"none\" />\r\n//                               ) : (\r\n//                                 <div>\r\n//                                   <label htmlFor={`pass-${index}`}>\r\n//                                     <input\r\n//                                       type=\"radio\"\r\n//                                       id={`pass-${index}`}\r\n//                                       checked={item.score === \"ผ่าน\"}\r\n//                                       onChange={() => handleCheckboxChange(item.id, \"yes\")}\r\n//                                     />\r\n//                                     ผ่าน\r\n//                                   </label>\r\n//                                   <label htmlFor={`fail-${index}`}>\r\n//                                     <input\r\n//                                       type=\"radio\"\r\n//                                       id={`fail-${index}`}\r\n//                                       checked={item.score === \"ไม่ผ่าน\"}\r\n//                                       onChange={() => handleCheckboxChange(item.id, \"no\")}\r\n//                                     />\r\n//                                     ไม่ผ่าน\r\n//                                   </label>\r\n//                                 </div>\r\n//                               )}\r\n//                             </TableCell>\r\n//                           </TableRow>\r\n//                         ))}\r\n//                       </TableBody>\r\n//                     </Table>\r\n//                   </TableContainer>\r\n//                 </>\r\n//               )}\r\n//             </DialogContent>\r\n//             <DialogActions>\r\n//               <Button onClick={handleClosePopup} color=\"secondary\">\r\n//                 ยกเลิก\r\n//               </Button>\r\n//               <Button onClick={handleSavePopup} variant=\"contained\" color=\"primary\">\r\n//                 บันทึกการประเมิน\r\n//               </Button>\r\n//             </DialogActions>\r\n//           </Dialog>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </MainCard>\r\n//   );\r\n// };\r\n\r\n// export default InputScoreCSB01;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}