{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\create-react-app\\\\src\\\\views\\\\dashboard\\\\Default\\\\CSB\\\\ManageExamRoom.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { TextField, Select, MenuItem, FormControl, InputLabel, Button, Grid, Typography } from '@mui/material';\n// import { DemoContainer } from '@mui/x-date-pickers/internals/demo';\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\n// import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\n// import { DatePicker } from '@mui/x-date-pickers/DatePicker';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// const ManageExamRoom = () => {\n//     const [option, setOption] = useState('');\n//     const [room, setRoom] = useState('');\n//     const [numberOfFields, setNumberOfFields] = useState(0);\n//     const [numberOfFields2, setNumberOfFields2] = useState(0);\n//     const [dayOn1, setDayOn1] = useState(null);\n//     const [timeOn1, setTimeOn1] = useState([]);\n//     const [invalidTimes, setInvalidTimes] = useState([]);\n\n//     const handleInputChange = (event) => {\n//         setNumberOfFields(parseInt(event.target.value) || 0);\n//     };\n\n//     const handleInputChange2 = (event) => {\n//         setNumberOfFields2(parseInt(event.target.value) || 0);\n//     };\n\n//     const [teacherValues, setTeacherValues] = useState(Array(numberOfFields).fill(''));\n//     const [positionValues, setPositionValues] = useState(Array(numberOfFields).fill(''));\n//     const [ProjectValues, setProjectValues] = useState(Array(numberOfFields2).fill(''));\n\n//     const handleSelectTeacher = (index) => (event) => {\n//         const newTeacherValues = [...teacherValues];\n//         newTeacherValues[index] = event.target.value;\n//         setTeacherValues(newTeacherValues);\n//     };\n\n//     const handleSelectPosition = (index) => (event) => {\n//         const newPositionValues = [...positionValues];\n//         newPositionValues[index] = event.target.value;\n//         setPositionValues(newPositionValues);\n//     };\n\n//     const handleSelectProject = (index) => (event) => {\n//         const newProjectValues = [...ProjectValues];\n//         newProjectValues[index] = event.target.value;\n//         setProjectValues(newProjectValues);\n//     };\n\n//     const handleSelectTime = (index) => (event) => {\n//         const newTime = event.target.value;\n//         const newTimeOn1 = [...timeOn1];\n//         newTimeOn1[index] = newTime;\n\n//         // Check for duplicates\n//         const timeCounts = newTimeOn1.reduce((acc, time) => {\n//             acc[time] = (acc[time] || 0) + 1;\n//             return acc;\n//         }, {});\n//         const newInvalidTimes = newTimeOn1.map((time, i) => timeCounts[time] > 1 && i !== newTimeOn1.indexOf(time));\n\n//         setTimeOn1(newTimeOn1);\n//         setInvalidTimes(newInvalidTimes);\n//     };\n\n//     const getFilteredTeachers = (index) => {\n//         const selectedTeachers = teacherValues.filter((_, i) => i !== index);\n//         return Teacher.filter((teacher) => !selectedTeachers.includes(teacher.ID));\n//     };\n\n//     const getFilteredPositions = (index) => {\n//         const selectedPositions = positionValues.filter((_, i) => i !== index);\n//         return positionData.filter((position) => !selectedPositions.includes(position.ID) || position.ID !== 'No1');\n//     };\n\n//     const getFilteredProject = (index) => {\n//         const selectedProject = ProjectValues.filter((_, i) => i !== index);\n//         return ProjectData.filter((ProjectData) => !selectedProject.includes(ProjectData.ID));\n//     };\n\n//     const testData = [\n//         { ID: 'CSB01', Name: 'สอบหัวข้อ' },\n//         { ID: 'CSB02', Name: 'สอบก้าวหน้า' },\n//         { ID: 'CSB03', Name: 'สอบป้องกัน' }\n//     ];\n\n//     const roomData = [\n//         { ID: '78-618' },\n//         { ID: '78-618/2' },\n//         { ID: '78-619' },\n//         { ID: '78-621' },\n//         { ID: '78-617' }\n//     ];\n\n//     const Teacher = [\n//         { ID: 'NLP', Name: 'ลือพล ไม่น่ารักเลย' },\n//         { ID: 'SWK', Name: 'สุวัชชัย ตัวตึง' },\n//         { ID: 'KAB', Name: 'คัณฑารัตน์ สุดละเอียด' },\n//         { ID: 'CRL', Name: 'เฉียบวุฒิ สุดจ้าบ' },\n//         { ID: 'ARN', Name: 'เอิญ ไม่ใจดี' },\n//         { ID: 'TNA', Name: 'ธณาภัทร ใจร้าย' },\n//         { ID: 'BLP', Name: 'เบญจพร ร้ายกาจ' },\n//         { ID: 'NAT', Name: 'ณัฐวุฒิ ช่วยด้วย' },\n//         { ID: 'KOB', Name: 'กอบเกียรติ อิหยังวะ' },\n//         { ID: 'ANW', Name: 'อนุสรณ์ หนีไป' }\n//     ];\n\n//     const positionData = [\n//         { ID: 'No1', Name: 'ประธาน' },\n//         { ID: 'No2', Name: 'กรรมการ' }\n//     ];\n\n//     const ProjectData = [\n//         { ID: 'SP1-01', Name: 'การตรวจสอบจบ' },\n//         { ID: 'SP1-02', Name: 'การยื่นสอบปริญญานิพนจ์' },\n//         { ID: 'SP1-03', Name: 'โมเดลจำลองอะตอม' },\n//         { ID: 'SP1-04', Name: 'AIจับมนุษย์' },\n//         { ID: 'SP1-05', Name: 'โปรแกรมปลูกต้นไม้' },\n//         { ID: 'SP1-06', Name: 'โปรแกรมออกแบบการนำเสนอ' },\n//         { ID: 'SP1-07', Name: 'โปรแกรมคำนวณพื้นที่' },\n//         { ID: 'SP1-08', Name: 'การจัดการการสอบสำหรับ CSB' },\n//         { ID: 'SP1-09', Name: 'โปรแกรมจองตั๋วรถไฟ' },\n//         { ID: 'SP1-10', Name: 'เกมเอาตัวรอดในCS' }\n//     ];\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\n//                             <Grid container spacing={2}>\n//                                 {/* Line 1: Select fields for option, room, and day */}\n//                                 <Grid item xs={12}>\n//                                     <Typography sx={{ marginLeft: 110 }}>\n//                                         <h1>จัดห้องสอบ</h1>\n//                                     </Typography>\n//                                     <Typography sx={{ marginLeft: 25, marginTop: 5 }} fontSize={'20px'}>\n//                                         รหัสการสอบ\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;\n//                                         ห้องสอบ\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                         วันที่สอบ\n//                                     </Typography>\n//                                     <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\n//                                         <InputLabel id=\"option-label\">เลือกการสอบ</InputLabel>\n//                                         <Select\n//                                             label=\"รหัสการสอบ\"\n//                                             id=\"option\"\n//                                             value={option}\n//                                             onChange={(e) => setOption(e.target.value)}\n//                                             sx={{ minWidth: 300 }}\n//                                         >\n//                                             {testData.map((testData) => (\n//                                                 <MenuItem key={testData.ID} value={testData.ID}>\n//                                                     {testData.ID + ' : ' + testData.Name}\n//                                                 </MenuItem>\n//                                             ))}\n//                                         </Select>\n//                                     </FormControl>\n//                                     <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\n//                                         <InputLabel id=\"room-label\">ห้องสอบ</InputLabel>\n//                                         <Select\n//                                             label=\"ห้องสอบ\"\n//                                             id=\"room\"\n//                                             value={room}\n//                                             onChange={(e) => setRoom(e.target.value)}\n//                                             sx={{ minWidth: 300 }}\n//                                         >\n//                                             {roomData.map((roomData) => (\n//                                                 <MenuItem key={roomData.ID} value={roomData.ID}>\n//                                                     {roomData.ID}\n//                                                 </MenuItem>\n//                                             ))}\n//                                         </Select>\n//                                     </FormControl>\n//                                     <FormControl sx={{ ml: 25, minWidth: 120 }}>\n//                                         <LocalizationProvider dateAdapter={AdapterDayjs}>\n//                                             <DemoContainer components={['DatePicker']}>\n//                                                 <DatePicker\n//                                                     label=\"วันที่สอบ\"\n//                                                     value={dayOn1}\n//                                                     onChange={(newValue) => setDayOn1(newValue)}\n//                                                 />\n//                                             </DemoContainer>\n//                                         </LocalizationProvider>\n//                                     </FormControl>\n//                                 </Grid>\n//                                 {/* Line 2: Text field for number of fields */}\n//                                 <Grid item xs={12}>\n//                                     <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\n//                                         จำนวนกรรมการสอบ\n//                                     </Typography>\n//                                     <TextField\n//                                         label=\"จำนวนกรรมการสอบ\"\n//                                         type=\"number\"\n//                                         value={numberOfFields}\n//                                         onChange={handleInputChange}\n//                                         sx={{ minWidth: 300, ml: 25, mt: 1 }}\n//                                     />\n//                                 </Grid>\n//                                 {/* Line 3: Show select fields based on the input number */}\n//                                 {Array.from({ length: numberOfFields }).map((_, index) => (\n//                                     <Grid item xs={12} key={index}>\n//                                         <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\n//                                             รายชื่อกรรมการสอบ\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;\n//                                             ตำแหน่ง\n//                                         </Typography>\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\n//                                             <InputLabel id={`id-label-${index}`}>รายชื่อกรรมการสอบ</InputLabel>\n//                                             <Select\n//                                                 label=\"รายชื่อกรรมการสอบ\"\n//                                                 id={`id-${index}`}\n//                                                 sx={{ minWidth: 300 }}\n//                                                 value={teacherValues[index]}\n//                                                 onChange={handleSelectTeacher(index)}\n//                                             >\n//                                                 {getFilteredTeachers(index).map((teacher) => (\n//                                                     <MenuItem key={teacher.ID} value={teacher.ID}>\n//                                                         {teacher.ID + ' ' + teacher.Name}\n//                                                     </MenuItem>\n//                                                 ))}\n//                                             </Select>\n//                                         </FormControl>\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\n//                                             <InputLabel id={`name-label-${index}`}>ตำแหน่ง</InputLabel>\n//                                             <Select\n//                                                 label=\"ตำแหน่ง\"\n//                                                 id={`name-${index}`}\n//                                                 sx={{ minWidth: 300 }}\n//                                                 value={positionValues[index]}\n//                                                 onChange={handleSelectPosition(index)}\n//                                             >\n//                                                 {getFilteredPositions(index).map((positionData) => (\n//                                                     <MenuItem key={positionData.ID} value={positionData.ID}>\n//                                                         {positionData.Name}\n//                                                     </MenuItem>\n//                                                 ))}\n//                                             </Select>\n//                                         </FormControl>\n//                                     </Grid>\n//                                 ))}\n\n//                                 <Grid item xs={12}>\n//                                     <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\n//                                         จำนวนโครงงานที่จะสอบ\n//                                     </Typography>\n//                                     <TextField\n//                                         label=\"จำนวนโครงงานที่จะสอบ\"\n//                                         type=\"number\"\n//                                         value={numberOfFields2}\n//                                         onChange={handleInputChange2}\n//                                         sx={{ minWidth: 300, ml: 25, mt: 1 }}\n//                                     />\n//                                 </Grid>\n//                                 {/* Line 3: Show select fields based on the input number */}\n//                                 {Array.from({ length: numberOfFields2 }).map((_, index) => (\n//                                     <Grid item xs={12} key={index}>\n//                                         <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\n//                                             รายชื่อโครงงาน\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n//                                             เวลาสอบ\n//                                         </Typography>\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\n//                                             <InputLabel id={`id-label-${index}`}>รายชื่อโครงงาน</InputLabel>\n//                                             <Select\n//                                                 label=\"รายชื่อโครงงาน\"\n//                                                 id={`id-${index}`}\n//                                                 sx={{ minWidth: 300 }}\n//                                                 value={ProjectValues[index]}\n//                                                 onChange={handleSelectProject(index)}\n//                                             >\n//                                                 {getFilteredProject(index).map((ProjectData) => (\n//                                                     <MenuItem key={ProjectData.ID} value={ProjectData.ID}>\n//                                                         {ProjectData.ID + ' ' + ProjectData.Name}\n//                                                     </MenuItem>\n//                                                 ))}\n//                                             </Select>\n//                                         </FormControl>\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\n//                                             <TextField\n//                                                 label=\"เวลาสอบ\"\n//                                                 id={`time-${index}`}\n//                                                 type=\"time\"\n//                                                 value={timeOn1[index] || ''}\n//                                                 onChange={handleSelectTime(index)}\n//                                                 InputLabelProps={{\n//                                                     shrink: true\n//                                                 }}\n//                                                 sx={{\n//                                                     minWidth: 300,\n//                                                     border: invalidTimes[index] ? '3px solid red' : '1px solid #ccc'\n//                                                 }}\n//                                             />\n//                                         </FormControl>\n//                                     </Grid>\n//                                 ))}\n//                                 <Grid item xs={12} sx={{ textAlign: 'center' }}>\n//                                     <Button variant=\"contained\" onClick={'#'}>\n//                                         Save\n//                                     </Button>\n//                                 </Grid>\n//                             </Grid>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard>\n//     );\n// };\n\n// export default ManageExamRoom;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TextField, Select, MenuItem, FormControl, InputLabel, Button, Grid, Typography } from '@mui/material';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageExamRoom = () => {\n  _s();\n  const [option, setOption] = useState('');\n  const [room, setRoom] = useState('');\n  const [numberOfFields, setNumberOfFields] = useState(0);\n  const [numberOfFields2, setNumberOfFields2] = useState(0);\n  const [dayOn1, setDayOn1] = useState(null);\n  const [timeOn1, setTimeOn1] = useState([]);\n  const [invalidTimes, setInvalidTimes] = useState([]);\n  const [teacherValues, setTeacherValues] = useState(Array(numberOfFields).fill(''));\n  const [positionValues, setPositionValues] = useState(Array(numberOfFields).fill(''));\n  const [ProjectValues, setProjectValues] = useState(Array(numberOfFields2).fill(''));\n  const [Teacher, setTeacher] = useState([]);\n  useEffect(() => {\n    const fetchTeachers = async () => {\n      try {\n        const response = await axios.get('http://localhost:9999/Teacher');\n        setTeacher(response.data);\n      } catch (error) {\n        console.error('Error fetching teachers:', error);\n      }\n    };\n    fetchTeachers();\n  }, []);\n  const handleInputChange = event => {\n    setNumberOfFields(parseInt(event.target.value) || 0);\n  };\n  const handleInputChange2 = event => {\n    setNumberOfFields2(parseInt(event.target.value) || 0);\n  };\n  const handleSelectTeacher = index => event => {\n    const newTeacherValues = [...teacherValues];\n    newTeacherValues[index] = event.target.value;\n    setTeacherValues(newTeacherValues);\n  };\n  const handleSelectPosition = index => event => {\n    const newPositionValues = [...positionValues];\n    newPositionValues[index] = event.target.value;\n    setPositionValues(newPositionValues);\n  };\n  const handleSelectProject = index => event => {\n    const newProjectValues = [...ProjectValues];\n    newProjectValues[index] = event.target.value;\n    setProjectValues(newProjectValues);\n  };\n  const handleSelectTime = index => event => {\n    const newTime = event.target.value;\n    const newTimeOn1 = [...timeOn1];\n    newTimeOn1[index] = newTime;\n\n    // Check for duplicates\n    const timeCounts = newTimeOn1.reduce((acc, time) => {\n      acc[time] = (acc[time] || 0) + 1;\n      return acc;\n    }, {});\n    const newInvalidTimes = newTimeOn1.map((time, i) => timeCounts[time] > 1 && i !== newTimeOn1.indexOf(time));\n    setTimeOn1(newTimeOn1);\n    setInvalidTimes(newInvalidTimes);\n  };\n  const getFilteredTeachers = index => {\n    const selectedTeachers = teacherValues.filter((_, i) => i !== index);\n    return Teacher.filter(teacher => !selectedTeachers.includes(teacher.ID));\n  };\n  const getFilteredPositions = index => {\n    const selectedPositions = positionValues.filter((_, i) => i !== index);\n    return positionData.filter(position => !selectedPositions.includes(position.ID) || position.ID !== 'No1');\n  };\n  const getFilteredProject = index => {\n    const selectedProject = ProjectValues.filter((_, i) => i !== index);\n    return ProjectData.filter(ProjectData => !selectedProject.includes(ProjectData.ID));\n  };\n  const testData = [{\n    ID: 'CSB01',\n    Name: 'สอบหัวข้อ'\n  }, {\n    ID: 'CSB02',\n    Name: 'สอบก้าวหน้า'\n  }, {\n    ID: 'CSB03',\n    Name: 'สอบป้องกัน'\n  }];\n  const roomData = [{\n    ID: '78-618'\n  }, {\n    ID: '78-618/2'\n  }, {\n    ID: '78-619'\n  }, {\n    ID: '78-621'\n  }, {\n    ID: '78-617'\n  }];\n  const positionData = [{\n    ID: 'No1',\n    Name: 'ประธาน'\n  }, {\n    ID: 'No2',\n    Name: 'กรรมการ'\n  }];\n  const ProjectData = [{\n    ID: 'SP1-01',\n    Name: 'การตรวจสอบจบ'\n  }, {\n    ID: 'SP1-02',\n    Name: 'การยื่นสอบปริญญานิพนจ์'\n  }, {\n    ID: 'SP1-03',\n    Name: 'โมเดลจำลองอะตอม'\n  }, {\n    ID: 'SP1-04',\n    Name: 'AIจับมนุษย์'\n  }, {\n    ID: 'SP1-05',\n    Name: 'โปรแกรมปลูกต้นไม้'\n  }, {\n    ID: 'SP1-06',\n    Name: 'โปรแกรมออกแบบการนำเสนอ'\n  }, {\n    ID: 'SP1-07',\n    Name: 'โปรแกรมคำนวณพื้นที่'\n  }, {\n    ID: 'SP1-08',\n    Name: 'การจัดการการสอบสำหรับ CSB'\n  }, {\n    ID: 'SP1-09',\n    Name: 'โปรแกรมจองตั๋วรถไฟ'\n  }, {\n    ID: 'SP1-10',\n    Name: 'เกมเอาตัวรอดในCS'\n  }];\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              spacing: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    marginLeft: 110\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"\\u0E08\\u0E31\\u0E14\\u0E2B\\u0E49\\u0E2D\\u0E07\\u0E2A\\u0E2D\\u0E1A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    marginLeft: 25,\n                    marginTop: 5\n                  },\n                  fontSize: '20px',\n                  children: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E01\\u0E32\\u0E23\\u0E2A\\u0E2D\\u0E1A \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\u0E2B\\u0E49\\u0E2D\\u0E07\\u0E2A\\u0E2D\\u0E1A \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\u0E27\\u0E31\\u0E19\\u0E17\\u0E35\\u0E48\\u0E2A\\u0E2D\\u0E1A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  sx: {\n                    mt: 1,\n                    ml: 25,\n                    minWidth: 120\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"option-label\",\n                    children: \"\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E01\\u0E32\\u0E23\\u0E2A\\u0E2D\\u0E1A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    label: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E01\\u0E32\\u0E23\\u0E2A\\u0E2D\\u0E1A\",\n                    id: \"option\",\n                    value: option,\n                    onChange: e => setOption(e.target.value),\n                    sx: {\n                      minWidth: 300\n                    },\n                    children: testData.map(testData => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: testData.ID,\n                      children: testData.Name\n                    }, testData.ID, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 510,\n                      columnNumber: 49\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  sx: {\n                    mt: 1,\n                    ml: 2,\n                    minWidth: 120\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"room-label\",\n                    children: \"\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E2B\\u0E49\\u0E2D\\u0E07\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    label: \"\\u0E2B\\u0E49\\u0E2D\\u0E07\\u0E2A\\u0E2D\\u0E1A\",\n                    id: \"room\",\n                    value: room,\n                    onChange: e => setRoom(e.target.value),\n                    sx: {\n                      minWidth: 300\n                    },\n                    children: roomData.map(roomData => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: roomData.ID,\n                      children: roomData.ID\n                    }, roomData.ID, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 49\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  sx: {\n                    mt: 1,\n                    ml: 2,\n                    minWidth: 120\n                  },\n                  children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                    dateAdapter: AdapterDayjs,\n                    children: /*#__PURE__*/_jsxDEV(DemoContainer, {\n                      components: ['DatePicker'],\n                      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                        value: dayOn1,\n                        onChange: newValue => setDayOn1(newValue)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 535,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    marginLeft: 25,\n                    marginTop: 5\n                  },\n                  fontSize: '20px',\n                  children: \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\u0E40\\u0E27\\u0E25\\u0E32 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 \\u0E42\\u0E1B\\u0E23\\u0E40\\u0E08\\u0E04\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 37\n                }, this), Array.from({\n                  length: numberOfFields\n                }).map((_, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      sx: {\n                        minWidth: 200\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        id: `teacher-label-${index}`,\n                        children: \"\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E2D\\u0E32\\u0E08\\u0E32\\u0E23\\u0E22\\u0E4C\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 571,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        label: \"\\u0E2D\\u0E32\\u0E08\\u0E32\\u0E23\\u0E22\\u0E4C\",\n                        id: `teacher-${index}`,\n                        value: teacherValues[index] || '',\n                        onChange: handleSelectTeacher(index),\n                        children: getFilteredTeachers(index).map(teacher => /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: teacher.ID,\n                          children: teacher.Name\n                        }, teacher.ID, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 579,\n                          columnNumber: 61\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 572,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 570,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      sx: {\n                        minWidth: 200\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        id: `position-label-${index}`,\n                        children: \"\\u0E15\\u0E33\\u0E41\\u0E2B\\u0E19\\u0E48\\u0E07\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 588,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        label: \"\\u0E15\\u0E33\\u0E41\\u0E2B\\u0E19\\u0E48\\u0E07\",\n                        id: `position-${index}`,\n                        value: positionValues[index] || '',\n                        onChange: handleSelectPosition(index),\n                        children: getFilteredPositions(index).map(position => /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: position.ID,\n                          children: position.Name\n                        }, position.ID, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 596,\n                          columnNumber: 61\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 589,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 587,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      id: `time-${index}`,\n                      label: \"\\u0E40\\u0E27\\u0E25\\u0E32\",\n                      type: \"time\",\n                      InputLabelProps: {\n                        shrink: true\n                      },\n                      value: timeOn1[index] || '',\n                      onChange: handleSelectTime(index),\n                      error: invalidTimes[index],\n                      helperText: invalidTimes[index] ? 'เวลาไม่สามารถซ้ำกันได้' : '',\n                      sx: {\n                        minWidth: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 604,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 45\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 41\n                }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 1,\n                  alignItems: \"center\",\n                  children: Array.from({\n                    length: numberOfFields2\n                  }).map((_, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 1,\n                    alignItems: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(FormControl, {\n                        sx: {\n                          minWidth: 200\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                          id: `project-label-${index}`,\n                          children: \"\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E42\\u0E1B\\u0E23\\u0E40\\u0E08\\u0E04\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 624,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Select, {\n                          label: \"\\u0E42\\u0E1B\\u0E23\\u0E40\\u0E08\\u0E04\",\n                          id: `project-${index}`,\n                          value: ProjectValues[index] || '',\n                          onChange: handleSelectProject(index),\n                          children: getFilteredProject(index).map(project => /*#__PURE__*/_jsxDEV(MenuItem, {\n                            value: project.ID,\n                            children: project.Name\n                          }, project.ID, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 632,\n                            columnNumber: 65\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 625,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 623,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 622,\n                      columnNumber: 49\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 621,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 467,\n    columnNumber: 9\n  }, this);\n};\n_s(ManageExamRoom, \"cYPegQr4CqHEDU9wKBGyFsvHzxw=\");\n_c = ManageExamRoom;\nexport default ManageExamRoom;\nvar _c;\n$RefreshReg$(_c, \"ManageExamRoom\");","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","Select","MenuItem","FormControl","InputLabel","Button","Grid","Typography","DemoContainer","AdapterDayjs","LocalizationProvider","DatePicker","MainCard","gridSpacing","jsxDEV","_jsxDEV","ManageExamRoom","_s","option","setOption","room","setRoom","numberOfFields","setNumberOfFields","numberOfFields2","setNumberOfFields2","dayOn1","setDayOn1","timeOn1","setTimeOn1","invalidTimes","setInvalidTimes","teacherValues","setTeacherValues","Array","fill","positionValues","setPositionValues","ProjectValues","setProjectValues","Teacher","setTeacher","fetchTeachers","response","get","data","error","console","handleInputChange","event","parseInt","target","value","handleInputChange2","handleSelectTeacher","index","newTeacherValues","handleSelectPosition","newPositionValues","handleSelectProject","newProjectValues","handleSelectTime","newTime","newTimeOn1","timeCounts","reduce","acc","time","newInvalidTimes","map","i","indexOf","getFilteredTeachers","selectedTeachers","filter","_","teacher","includes","ID","getFilteredPositions","selectedPositions","positionData","position","getFilteredProject","selectedProject","ProjectData","testData","Name","roomData","children","container","spacing","item","xs","alignItems","justifyContent","direction","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginLeft","marginTop","fontSize","mt","ml","minWidth","id","label","onChange","e","dateAdapter","components","newValue","from","length","type","InputLabelProps","shrink","helperText","project","_c","$RefreshReg$"],"sources":["C:/test/create-react-app/src/views/dashboard/Default/CSB/ManageExamRoom.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { TextField, Select, MenuItem, FormControl, InputLabel, Button, Grid, Typography } from '@mui/material';\r\n// import { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\n// import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n// import { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n// import MainCard from 'ui-component/cards/MainCard';\r\n// import { gridSpacing } from 'store/constant';\r\n\r\n// const ManageExamRoom = () => {\r\n//     const [option, setOption] = useState('');\r\n//     const [room, setRoom] = useState('');\r\n//     const [numberOfFields, setNumberOfFields] = useState(0);\r\n//     const [numberOfFields2, setNumberOfFields2] = useState(0);\r\n//     const [dayOn1, setDayOn1] = useState(null);\r\n//     const [timeOn1, setTimeOn1] = useState([]);\r\n//     const [invalidTimes, setInvalidTimes] = useState([]);\r\n\r\n//     const handleInputChange = (event) => {\r\n//         setNumberOfFields(parseInt(event.target.value) || 0);\r\n//     };\r\n\r\n//     const handleInputChange2 = (event) => {\r\n//         setNumberOfFields2(parseInt(event.target.value) || 0);\r\n//     };\r\n\r\n//     const [teacherValues, setTeacherValues] = useState(Array(numberOfFields).fill(''));\r\n//     const [positionValues, setPositionValues] = useState(Array(numberOfFields).fill(''));\r\n//     const [ProjectValues, setProjectValues] = useState(Array(numberOfFields2).fill(''));\r\n\r\n//     const handleSelectTeacher = (index) => (event) => {\r\n//         const newTeacherValues = [...teacherValues];\r\n//         newTeacherValues[index] = event.target.value;\r\n//         setTeacherValues(newTeacherValues);\r\n//     };\r\n\r\n//     const handleSelectPosition = (index) => (event) => {\r\n//         const newPositionValues = [...positionValues];\r\n//         newPositionValues[index] = event.target.value;\r\n//         setPositionValues(newPositionValues);\r\n//     };\r\n\r\n//     const handleSelectProject = (index) => (event) => {\r\n//         const newProjectValues = [...ProjectValues];\r\n//         newProjectValues[index] = event.target.value;\r\n//         setProjectValues(newProjectValues);\r\n//     };\r\n\r\n//     const handleSelectTime = (index) => (event) => {\r\n//         const newTime = event.target.value;\r\n//         const newTimeOn1 = [...timeOn1];\r\n//         newTimeOn1[index] = newTime;\r\n\r\n//         // Check for duplicates\r\n//         const timeCounts = newTimeOn1.reduce((acc, time) => {\r\n//             acc[time] = (acc[time] || 0) + 1;\r\n//             return acc;\r\n//         }, {});\r\n//         const newInvalidTimes = newTimeOn1.map((time, i) => timeCounts[time] > 1 && i !== newTimeOn1.indexOf(time));\r\n\r\n//         setTimeOn1(newTimeOn1);\r\n//         setInvalidTimes(newInvalidTimes);\r\n//     };\r\n\r\n//     const getFilteredTeachers = (index) => {\r\n//         const selectedTeachers = teacherValues.filter((_, i) => i !== index);\r\n//         return Teacher.filter((teacher) => !selectedTeachers.includes(teacher.ID));\r\n//     };\r\n\r\n//     const getFilteredPositions = (index) => {\r\n//         const selectedPositions = positionValues.filter((_, i) => i !== index);\r\n//         return positionData.filter((position) => !selectedPositions.includes(position.ID) || position.ID !== 'No1');\r\n//     };\r\n\r\n//     const getFilteredProject = (index) => {\r\n//         const selectedProject = ProjectValues.filter((_, i) => i !== index);\r\n//         return ProjectData.filter((ProjectData) => !selectedProject.includes(ProjectData.ID));\r\n//     };\r\n\r\n//     const testData = [\r\n//         { ID: 'CSB01', Name: 'สอบหัวข้อ' },\r\n//         { ID: 'CSB02', Name: 'สอบก้าวหน้า' },\r\n//         { ID: 'CSB03', Name: 'สอบป้องกัน' }\r\n//     ];\r\n\r\n//     const roomData = [\r\n//         { ID: '78-618' },\r\n//         { ID: '78-618/2' },\r\n//         { ID: '78-619' },\r\n//         { ID: '78-621' },\r\n//         { ID: '78-617' }\r\n//     ];\r\n\r\n//     const Teacher = [\r\n//         { ID: 'NLP', Name: 'ลือพล ไม่น่ารักเลย' },\r\n//         { ID: 'SWK', Name: 'สุวัชชัย ตัวตึง' },\r\n//         { ID: 'KAB', Name: 'คัณฑารัตน์ สุดละเอียด' },\r\n//         { ID: 'CRL', Name: 'เฉียบวุฒิ สุดจ้าบ' },\r\n//         { ID: 'ARN', Name: 'เอิญ ไม่ใจดี' },\r\n//         { ID: 'TNA', Name: 'ธณาภัทร ใจร้าย' },\r\n//         { ID: 'BLP', Name: 'เบญจพร ร้ายกาจ' },\r\n//         { ID: 'NAT', Name: 'ณัฐวุฒิ ช่วยด้วย' },\r\n//         { ID: 'KOB', Name: 'กอบเกียรติ อิหยังวะ' },\r\n//         { ID: 'ANW', Name: 'อนุสรณ์ หนีไป' }\r\n//     ];\r\n\r\n//     const positionData = [\r\n//         { ID: 'No1', Name: 'ประธาน' },\r\n//         { ID: 'No2', Name: 'กรรมการ' }\r\n//     ];\r\n\r\n//     const ProjectData = [\r\n//         { ID: 'SP1-01', Name: 'การตรวจสอบจบ' },\r\n//         { ID: 'SP1-02', Name: 'การยื่นสอบปริญญานิพนจ์' },\r\n//         { ID: 'SP1-03', Name: 'โมเดลจำลองอะตอม' },\r\n//         { ID: 'SP1-04', Name: 'AIจับมนุษย์' },\r\n//         { ID: 'SP1-05', Name: 'โปรแกรมปลูกต้นไม้' },\r\n//         { ID: 'SP1-06', Name: 'โปรแกรมออกแบบการนำเสนอ' },\r\n//         { ID: 'SP1-07', Name: 'โปรแกรมคำนวณพื้นที่' },\r\n//         { ID: 'SP1-08', Name: 'การจัดการการสอบสำหรับ CSB' },\r\n//         { ID: 'SP1-09', Name: 'โปรแกรมจองตั๋วรถไฟ' },\r\n//         { ID: 'SP1-10', Name: 'เกมเอาตัวรอดในCS' }\r\n//     ];\r\n\r\n//     return (\r\n//         <MainCard>\r\n//             <Grid container spacing={gridSpacing}>\r\n//                 <Grid item xs={12}>\r\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n//                         <Grid item>\r\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\r\n//                             <Grid container spacing={2}>\r\n//                                 {/* Line 1: Select fields for option, room, and day */}\r\n//                                 <Grid item xs={12}>\r\n//                                     <Typography sx={{ marginLeft: 110 }}>\r\n//                                         <h1>จัดห้องสอบ</h1>\r\n//                                     </Typography>\r\n//                                     <Typography sx={{ marginLeft: 25, marginTop: 5 }} fontSize={'20px'}>\r\n//                                         รหัสการสอบ\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;\r\n//                                         ห้องสอบ\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                         วันที่สอบ\r\n//                                     </Typography>\r\n//                                     <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\r\n//                                         <InputLabel id=\"option-label\">เลือกการสอบ</InputLabel>\r\n//                                         <Select\r\n//                                             label=\"รหัสการสอบ\"\r\n//                                             id=\"option\"\r\n//                                             value={option}\r\n//                                             onChange={(e) => setOption(e.target.value)}\r\n//                                             sx={{ minWidth: 300 }}\r\n//                                         >\r\n//                                             {testData.map((testData) => (\r\n//                                                 <MenuItem key={testData.ID} value={testData.ID}>\r\n//                                                     {testData.ID + ' : ' + testData.Name}\r\n//                                                 </MenuItem>\r\n//                                             ))}\r\n//                                         </Select>\r\n//                                     </FormControl>\r\n//                                     <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\r\n//                                         <InputLabel id=\"room-label\">ห้องสอบ</InputLabel>\r\n//                                         <Select\r\n//                                             label=\"ห้องสอบ\"\r\n//                                             id=\"room\"\r\n//                                             value={room}\r\n//                                             onChange={(e) => setRoom(e.target.value)}\r\n//                                             sx={{ minWidth: 300 }}\r\n//                                         >\r\n//                                             {roomData.map((roomData) => (\r\n//                                                 <MenuItem key={roomData.ID} value={roomData.ID}>\r\n//                                                     {roomData.ID}\r\n//                                                 </MenuItem>\r\n//                                             ))}\r\n//                                         </Select>\r\n//                                     </FormControl>\r\n//                                     <FormControl sx={{ ml: 25, minWidth: 120 }}>\r\n//                                         <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n//                                             <DemoContainer components={['DatePicker']}>\r\n//                                                 <DatePicker\r\n//                                                     label=\"วันที่สอบ\"\r\n//                                                     value={dayOn1}\r\n//                                                     onChange={(newValue) => setDayOn1(newValue)}\r\n//                                                 />\r\n//                                             </DemoContainer>\r\n//                                         </LocalizationProvider>\r\n//                                     </FormControl>\r\n//                                 </Grid>\r\n//                                 {/* Line 2: Text field for number of fields */}\r\n//                                 <Grid item xs={12}>\r\n//                                     <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\r\n//                                         จำนวนกรรมการสอบ\r\n//                                     </Typography>\r\n//                                     <TextField\r\n//                                         label=\"จำนวนกรรมการสอบ\"\r\n//                                         type=\"number\"\r\n//                                         value={numberOfFields}\r\n//                                         onChange={handleInputChange}\r\n//                                         sx={{ minWidth: 300, ml: 25, mt: 1 }}\r\n//                                     />\r\n//                                 </Grid>\r\n//                                 {/* Line 3: Show select fields based on the input number */}\r\n//                                 {Array.from({ length: numberOfFields }).map((_, index) => (\r\n//                                     <Grid item xs={12} key={index}>\r\n//                                         <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\r\n//                                             รายชื่อกรรมการสอบ\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;\r\n//                                             ตำแหน่ง\r\n//                                         </Typography>\r\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\r\n//                                             <InputLabel id={`id-label-${index}`}>รายชื่อกรรมการสอบ</InputLabel>\r\n//                                             <Select\r\n//                                                 label=\"รายชื่อกรรมการสอบ\"\r\n//                                                 id={`id-${index}`}\r\n//                                                 sx={{ minWidth: 300 }}\r\n//                                                 value={teacherValues[index]}\r\n//                                                 onChange={handleSelectTeacher(index)}\r\n//                                             >\r\n//                                                 {getFilteredTeachers(index).map((teacher) => (\r\n//                                                     <MenuItem key={teacher.ID} value={teacher.ID}>\r\n//                                                         {teacher.ID + ' ' + teacher.Name}\r\n//                                                     </MenuItem>\r\n//                                                 ))}\r\n//                                             </Select>\r\n//                                         </FormControl>\r\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\r\n//                                             <InputLabel id={`name-label-${index}`}>ตำแหน่ง</InputLabel>\r\n//                                             <Select\r\n//                                                 label=\"ตำแหน่ง\"\r\n//                                                 id={`name-${index}`}\r\n//                                                 sx={{ minWidth: 300 }}\r\n//                                                 value={positionValues[index]}\r\n//                                                 onChange={handleSelectPosition(index)}\r\n//                                             >\r\n//                                                 {getFilteredPositions(index).map((positionData) => (\r\n//                                                     <MenuItem key={positionData.ID} value={positionData.ID}>\r\n//                                                         {positionData.Name}\r\n//                                                     </MenuItem>\r\n//                                                 ))}\r\n//                                             </Select>\r\n//                                         </FormControl>\r\n//                                     </Grid>\r\n//                                 ))}\r\n\r\n//                                 <Grid item xs={12}>\r\n//                                     <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\r\n//                                         จำนวนโครงงานที่จะสอบ\r\n//                                     </Typography>\r\n//                                     <TextField\r\n//                                         label=\"จำนวนโครงงานที่จะสอบ\"\r\n//                                         type=\"number\"\r\n//                                         value={numberOfFields2}\r\n//                                         onChange={handleInputChange2}\r\n//                                         sx={{ minWidth: 300, ml: 25, mt: 1 }}\r\n//                                     />\r\n//                                 </Grid>\r\n//                                 {/* Line 3: Show select fields based on the input number */}\r\n//                                 {Array.from({ length: numberOfFields2 }).map((_, index) => (\r\n//                                     <Grid item xs={12} key={index}>\r\n//                                         <Typography sx={{ marginLeft: 25, marginTop: 3 }} fontSize={'20px'}>\r\n//                                             รายชื่อโครงงาน\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n//                                             เวลาสอบ\r\n//                                         </Typography>\r\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\r\n//                                             <InputLabel id={`id-label-${index}`}>รายชื่อโครงงาน</InputLabel>\r\n//                                             <Select\r\n//                                                 label=\"รายชื่อโครงงาน\"\r\n//                                                 id={`id-${index}`}\r\n//                                                 sx={{ minWidth: 300 }}\r\n//                                                 value={ProjectValues[index]}\r\n//                                                 onChange={handleSelectProject(index)}\r\n//                                             >\r\n//                                                 {getFilteredProject(index).map((ProjectData) => (\r\n//                                                     <MenuItem key={ProjectData.ID} value={ProjectData.ID}>\r\n//                                                         {ProjectData.ID + ' ' + ProjectData.Name}\r\n//                                                     </MenuItem>\r\n//                                                 ))}\r\n//                                             </Select>\r\n//                                         </FormControl>\r\n//                                         <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\r\n//                                             <TextField\r\n//                                                 label=\"เวลาสอบ\"\r\n//                                                 id={`time-${index}`}\r\n//                                                 type=\"time\"\r\n//                                                 value={timeOn1[index] || ''}\r\n//                                                 onChange={handleSelectTime(index)}\r\n//                                                 InputLabelProps={{\r\n//                                                     shrink: true\r\n//                                                 }}\r\n//                                                 sx={{\r\n//                                                     minWidth: 300,\r\n//                                                     border: invalidTimes[index] ? '3px solid red' : '1px solid #ccc'\r\n//                                                 }}\r\n//                                             />\r\n//                                         </FormControl>\r\n//                                     </Grid>\r\n//                                 ))}\r\n//                                 <Grid item xs={12} sx={{ textAlign: 'center' }}>\r\n//                                     <Button variant=\"contained\" onClick={'#'}>\r\n//                                         Save\r\n//                                     </Button>\r\n//                                 </Grid>\r\n//                             </Grid>\r\n//                         </Grid>\r\n//                     </Grid>\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </MainCard>\r\n//     );\r\n// };\r\n\r\n// export default ManageExamRoom;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Select, MenuItem, FormControl, InputLabel, Button, Grid, Typography } from '@mui/material';\r\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nconst ManageExamRoom = () => {\r\n    const [option, setOption] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [numberOfFields, setNumberOfFields] = useState(0);\r\n    const [numberOfFields2, setNumberOfFields2] = useState(0);\r\n    const [dayOn1, setDayOn1] = useState(null);\r\n    const [timeOn1, setTimeOn1] = useState([]);\r\n    const [invalidTimes, setInvalidTimes] = useState([]);\r\n    const [teacherValues, setTeacherValues] = useState(Array(numberOfFields).fill(''));\r\n    const [positionValues, setPositionValues] = useState(Array(numberOfFields).fill(''));\r\n    const [ProjectValues, setProjectValues] = useState(Array(numberOfFields2).fill(''));\r\n    const [Teacher, setTeacher] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchTeachers = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:9999/Teacher');\r\n                setTeacher(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching teachers:', error);\r\n            }\r\n        };\r\n\r\n        fetchTeachers();\r\n    }, []);\r\n\r\n    const handleInputChange = (event) => {\r\n        setNumberOfFields(parseInt(event.target.value) || 0);\r\n    };\r\n\r\n    const handleInputChange2 = (event) => {\r\n        setNumberOfFields2(parseInt(event.target.value) || 0);\r\n    };\r\n\r\n    const handleSelectTeacher = (index) => (event) => {\r\n        const newTeacherValues = [...teacherValues];\r\n        newTeacherValues[index] = event.target.value;\r\n        setTeacherValues(newTeacherValues);\r\n    };\r\n\r\n    const handleSelectPosition = (index) => (event) => {\r\n        const newPositionValues = [...positionValues];\r\n        newPositionValues[index] = event.target.value;\r\n        setPositionValues(newPositionValues);\r\n    };\r\n\r\n    const handleSelectProject = (index) => (event) => {\r\n        const newProjectValues = [...ProjectValues];\r\n        newProjectValues[index] = event.target.value;\r\n        setProjectValues(newProjectValues);\r\n    };\r\n\r\n    const handleSelectTime = (index) => (event) => {\r\n        const newTime = event.target.value;\r\n        const newTimeOn1 = [...timeOn1];\r\n        newTimeOn1[index] = newTime;\r\n\r\n        // Check for duplicates\r\n        const timeCounts = newTimeOn1.reduce((acc, time) => {\r\n            acc[time] = (acc[time] || 0) + 1;\r\n            return acc;\r\n        }, {});\r\n        const newInvalidTimes = newTimeOn1.map((time, i) => timeCounts[time] > 1 && i !== newTimeOn1.indexOf(time));\r\n\r\n        setTimeOn1(newTimeOn1);\r\n        setInvalidTimes(newInvalidTimes);\r\n    };\r\n\r\n    const getFilteredTeachers = (index) => {\r\n        const selectedTeachers = teacherValues.filter((_, i) => i !== index);\r\n        return Teacher.filter((teacher) => !selectedTeachers.includes(teacher.ID));\r\n    };\r\n\r\n    const getFilteredPositions = (index) => {\r\n        const selectedPositions = positionValues.filter((_, i) => i !== index);\r\n        return positionData.filter((position) => !selectedPositions.includes(position.ID) || position.ID !== 'No1');\r\n    };\r\n\r\n    const getFilteredProject = (index) => {\r\n        const selectedProject = ProjectValues.filter((_, i) => i !== index);\r\n        return ProjectData.filter((ProjectData) => !selectedProject.includes(ProjectData.ID));\r\n    };\r\n\r\n    const testData = [\r\n        { ID: 'CSB01', Name: 'สอบหัวข้อ' },\r\n        { ID: 'CSB02', Name: 'สอบก้าวหน้า' },\r\n        { ID: 'CSB03', Name: 'สอบป้องกัน' }\r\n    ];\r\n\r\n    const roomData = [\r\n        { ID: '78-618' },\r\n        { ID: '78-618/2' },\r\n        { ID: '78-619' },\r\n        { ID: '78-621' },\r\n        { ID: '78-617' }\r\n    ];\r\n\r\n    const positionData = [\r\n        { ID: 'No1', Name: 'ประธาน' },\r\n        { ID: 'No2', Name: 'กรรมการ' }\r\n    ];\r\n\r\n    const ProjectData = [\r\n        { ID: 'SP1-01', Name: 'การตรวจสอบจบ' },\r\n        { ID: 'SP1-02', Name: 'การยื่นสอบปริญญานิพนจ์' },\r\n        { ID: 'SP1-03', Name: 'โมเดลจำลองอะตอม' },\r\n        { ID: 'SP1-04', Name: 'AIจับมนุษย์' },\r\n        { ID: 'SP1-05', Name: 'โปรแกรมปลูกต้นไม้' },\r\n        { ID: 'SP1-06', Name: 'โปรแกรมออกแบบการนำเสนอ' },\r\n        { ID: 'SP1-07', Name: 'โปรแกรมคำนวณพื้นที่' },\r\n        { ID: 'SP1-08', Name: 'การจัดการการสอบสำหรับ CSB' },\r\n        { ID: 'SP1-09', Name: 'โปรแกรมจองตั๋วรถไฟ' },\r\n        { ID: 'SP1-10', Name: 'เกมเอาตัวรอดในCS' }\r\n    ];\r\n\r\n    return (\r\n        <MainCard>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Grid container direction=\"column\" spacing={1}></Grid>\r\n                            <Grid container spacing={2}>\r\n                                {/* Line 1: Select fields for option, room, and day */}\r\n                                <Grid item xs={12}>\r\n                                    <Typography sx={{ marginLeft: 110 }}>\r\n                                        <h1>จัดห้องสอบ</h1>\r\n                                    </Typography>\r\n                                    <Typography sx={{ marginLeft: 25, marginTop: 5 }} fontSize={'20px'}>\r\n                                        รหัสการสอบ\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;\r\n                                        ห้องสอบ\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        วันที่สอบ\r\n                                    </Typography>\r\n                                    <FormControl sx={{ mt: 1, ml: 25, minWidth: 120 }}>\r\n                                        <InputLabel id=\"option-label\">เลือกการสอบ</InputLabel>\r\n                                        <Select\r\n                                            label=\"รหัสการสอบ\"\r\n                                            id=\"option\"\r\n                                            value={option}\r\n                                            onChange={(e) => setOption(e.target.value)}\r\n                                            sx={{ minWidth: 300 }}\r\n                                        >\r\n                                            {testData.map((testData) => (\r\n                                                <MenuItem key={testData.ID} value={testData.ID}>\r\n                                                    {testData.Name}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl sx={{ mt: 1, ml: 2, minWidth: 120 }}>\r\n                                        <InputLabel id=\"room-label\">เลือกห้อง</InputLabel>\r\n                                        <Select\r\n                                            label=\"ห้องสอบ\"\r\n                                            id=\"room\"\r\n                                            value={room}\r\n                                            onChange={(e) => setRoom(e.target.value)}\r\n                                            sx={{ minWidth: 300 }}\r\n                                        >\r\n                                            {roomData.map((roomData) => (\r\n                                                <MenuItem key={roomData.ID} value={roomData.ID}>\r\n                                                    {roomData.ID}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl sx={{ mt: 1, ml: 2, minWidth: 120 }}>\r\n                                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                            <DemoContainer components={['DatePicker']}>\r\n                                                <DatePicker\r\n                                                    value={dayOn1}\r\n                                                    onChange={(newValue) => setDayOn1(newValue)}\r\n                                                />\r\n                                            </DemoContainer>\r\n                                        </LocalizationProvider>\r\n                                    </FormControl>\r\n                                </Grid>\r\n\r\n                                {/* Line 2: Select fields for time and projects */}\r\n                                <Grid item xs={12}>\r\n                                    <Typography sx={{ marginLeft: 25, marginTop: 5 }} fontSize={'20px'}>\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        เวลา\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        โปรเจค\r\n                                    </Typography>\r\n\r\n                                    {Array.from({ length: numberOfFields }).map((_, index) => (\r\n                                        <Grid container spacing={1} key={index} alignItems=\"center\">\r\n                                            <Grid item>\r\n                                                <FormControl sx={{ minWidth: 200 }}>\r\n                                                    <InputLabel id={`teacher-label-${index}`}>เลือกอาจารย์</InputLabel>\r\n                                                    <Select\r\n                                                        label=\"อาจารย์\"\r\n                                                        id={`teacher-${index}`}\r\n                                                        value={teacherValues[index] || ''}\r\n                                                        onChange={handleSelectTeacher(index)}\r\n                                                    >\r\n                                                        {getFilteredTeachers(index).map((teacher) => (\r\n                                                            <MenuItem key={teacher.ID} value={teacher.ID}>\r\n                                                                {teacher.Name}\r\n                                                            </MenuItem>\r\n                                                        ))}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <FormControl sx={{ minWidth: 200 }}>\r\n                                                    <InputLabel id={`position-label-${index}`}>ตำแหน่ง</InputLabel>\r\n                                                    <Select\r\n                                                        label=\"ตำแหน่ง\"\r\n                                                        id={`position-${index}`}\r\n                                                        value={positionValues[index] || ''}\r\n                                                        onChange={handleSelectPosition(index)}\r\n                                                    >\r\n                                                        {getFilteredPositions(index).map((position) => (\r\n                                                            <MenuItem key={position.ID} value={position.ID}>\r\n                                                                {position.Name}\r\n                                                            </MenuItem>\r\n                                                        ))}\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <TextField\r\n                                                    id={`time-${index}`}\r\n                                                    label=\"เวลา\"\r\n                                                    type=\"time\"\r\n                                                    InputLabelProps={{ shrink: true }}\r\n                                                    value={timeOn1[index] || ''}\r\n                                                    onChange={handleSelectTime(index)}\r\n                                                    error={invalidTimes[index]}\r\n                                                    helperText={invalidTimes[index] ? 'เวลาไม่สามารถซ้ำกันได้' : ''}\r\n                                                    sx={{ minWidth: 150 }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    ))}\r\n\r\n                                    <Grid container spacing={1} alignItems=\"center\">\r\n                                        {Array.from({ length: numberOfFields2 }).map((_, index) => (\r\n                                            <Grid container spacing={1} key={index} alignItems=\"center\">\r\n                                                <Grid item>\r\n                                                    <FormControl sx={{ minWidth: 200 }}>\r\n                                                        <InputLabel id={`project-label-${index}`}>เลือกโปรเจค</InputLabel>\r\n                                                        <Select\r\n                                                            label=\"โปรเจค\"\r\n                                                            id={`project-${index}`}\r\n                                                            value={ProjectValues[index] || ''}\r\n                                                            onChange={handleSelectProject(index)}\r\n                                                        >\r\n                                                            {getFilteredProject(index).map((project) => (\r\n                                                                <MenuItem key={project.ID} value={project.ID}>\r\n                                                                    {project.Name}\r\n                                                                </MenuItem>\r\n                                                            ))}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        ))}\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ManageExamRoom;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}