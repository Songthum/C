{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\create-react-app\\\\src\\\\views\\\\dashboard\\\\Default\\\\CSB\\\\ManageExamRoom.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { TextField, Select, MenuItem, FormControl, InputLabel, Button, Grid, Typography } from '@mui/material';\n// import { DemoContainer } from '@mui/x-date-pickers/internals/demo';\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\n// import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\n// import { DatePicker } from '@mui/x-date-pickers/DatePicker';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// const ManageExamRoom = () => {\n//     const [option, setOption] = useState('');\n//     const [room, setRoom] = useState('');\n//     const [numberOfFields, setNumberOfFields] = useState(0);\n//     const [numberOfFields2, setNumberOfFields2] = useState(0);\n//     const [dayOn1, setDayOn1] = useState(null);\n//     const [timeOn1, setTimeOn1] = useState([]);\n//     const [invalidTimes, setInvalidTimes] = useState([]);\n\n//     const handleInputChange = (event) => {\n//         setNumberOfFields(parseInt(event.target.value) || 0);\n//     };\n\n//     const handleInputChange2 = (event) => {\n//         setNumberOfFields2(parseInt(event.target.value) || 0);\n//     };\n\n//     const [teacherValues, setTeacherValues] = useState(Array(numberOfFields).fill(''));\n//     const [positionValues, setPositionValues] = useState(Array(numberOfFields).fill(''));\n//     const [ProjectValues, setProjectValues] = useState(Array(numberOfFields2).fill(''));\n\n//     const handleSelectTeacher = (index) => (event) => {\n//         const newTeacherValues = [...teacherValues];\n//         newTeacherValues[index] = event.target.value;\n//         setTeacherValues(newTeacherValues);\n//     };\n\n//     const handleSelectPosition = (index) => (event) => {\n//         const newPositionValues = [...positionValues];\n//         newPositionValues[index] = event.target.value;\n//         setPositionValues(newPositionValues);\n//     };\n\n//     const handleSelectProject = (index) => (event) => {\n//         const newProjectValues = [...ProjectValues];\n//         newProjectValues[index] = event.target.value;\n//         setProjectValues(newProjectValues);\n//     };\n\n//     const handleSelectTime = (index) => (event) => {\n//         const newTime = event.target.value;\n//         const newTimeOn1 = [...timeOn1];\n//         newTimeOn1[index] = newTime;\n\n//         // Check for duplicates\n//         const timeCounts = newTimeOn1.reduce((acc, time) => {\n//             acc[time] = (acc[time] || 0) + 1;\n//             return acc;\n//         }, {});\n//         const newInvalidTimes = newTimeOn1.map((time, i) => timeCounts[time] > 1 && i !== newTimeOn1.indexOf(time));\n\n//         setTimeOn1(newTimeOn1);\n//         setInvalidTimes(newInvalidTimes);\n//     };\n\n//     const getFilteredTeachers = (index) => {\n//         const selectedTeachers = teacherValues.filter((_, i) => i !== index);\n//         return Teacher.filter((teacher) => !selectedTeachers.includes(teacher.ID));\n//     };\n\n//     const getFilteredPositions = (index) => {\n//         const selectedPositions = positionValues.filter((_, i) => i !== index);\n//         return positionData.filter((position) => !selectedPositions.includes(position.ID) || position.ID !== 'No1');\n//     };\n\n//     const getFilteredProject = (index) => {\n//         const selectedProject = ProjectValues.filter((_, i) => i !== index);\n//         return ProjectData.filter((ProjectData) => !selectedProject.includes(ProjectData.ID));\n//     };\n\n//     const testData = [\n//         { ID: 'CSB01', Name: 'สอบหัวข้อ' },\n//         { ID: 'CSB02', Name: 'สอบก้าวหน้า' },\n//         { ID: 'CSB03', Name: 'สอบป้องกัน' }\n//     ];\n\n//     const roomData = [\n//         { ID: '78-618' },\n//         { ID: '78-618/2' },\n//         { ID: '78-619' },\n//         { ID: '78-621' },\n//         { ID: '78-617' }\n//     ];\n\n//     const Teacher = [\n//         { ID: 'NLP', Name: 'ลือพล ไม่น่ารักเลย' },\n//         { ID: 'SWK', Name: 'สุวัชชัย ตัวตึง' },\n//         { ID: 'KAB', Name: 'คัณฑารัตน์ สุดละเอียด' },\n//         { ID: 'CRL', Name: 'เฉียบวุฒิ สุดจ้าบ' },\n//         { ID: 'ARN', Name: 'เอิญ ไม่ใจดี' },\n//         { ID: 'TNA', Name: 'ธณาภัทร ใจร้าย' },\n//         { ID: 'BLP', Name: 'เบญจพร ร้ายกาจ' },\n//         { ID: 'NAT', Name: 'ณัฐวุฒิ ช่วยด้วย' },\n//         { ID: 'KOB', Name: 'กอบเกียรติ อิหยังวะ' },\n//         { ID: 'ANW', Name: 'อนุสรณ์ หนีไป' }\n//     ];\n\n//     const positionData = [\n//         { ID: 'No1', Name: 'ประธาน' },\n//         { ID: 'No2', Name: 'กรรมการ' }\n//     ];\n\n//     const ProjectData = [\n//         { ID: 'SP1-01', Name: 'การตรวจสอบจบ' },\n//         { ID: 'SP1-02', Name: 'การยื่นสอบปริญญานิพนจ์' },\n//         { ID: 'SP1-03', Name: 'โมเดลจำลองอะตอม' },\n//         { ID: 'SP1-04', Name: 'AIจับมนุษย์' },\n//         { ID: 'SP1-05', Name: 'โปรแกรมปลูกต้นไม้' },\n//         { ID: 'SP1-06', Name: 'โปรแกรมออกแบบการนำเสนอ' },\n//         { ID: 'SP1-07', Name: 'โปรแกรมคำนวณพื้นที่' },\n//         { ID: 'SP1-08', Name: 'การจัดการการสอบสำหรับ CSB' },\n//         { ID: 'SP1-09', Name: 'โปรแกรมจองตั๋วรถไฟ' },\n//         { ID: 'SP1-10', Name: 'เกมเอาตัวรอดในCS' }\n//     ];\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//                         จัดห้องสอบ\n//                     </Typography>\n//                     <Grid container spacing={2} alignItems=\"center\">\n//                         <Grid item xs={10} md={4}>\n//                             <FormControl fullWidth>\n//                                 <InputLabel id=\"option-label\">เลือกการสอบ</InputLabel>\n//                                 <Select\n//                                     label=\"รหัสการสอบ\"\n//                                     id=\"option\"\n//                                     value={option}\n//                                     onChange={(e) => setOption(e.target.value)}\n//                                 >\n//                                     {testData.map((test) => (\n//                                         <MenuItem key={test.ID} value={test.ID}>\n//                                             {test.ID + ' : ' + test.Name}\n//                                         </MenuItem>\n//                                     ))}\n//                                 </Select>\n//                             </FormControl>\n//                         </Grid>\n//                         <Grid item xs={12} md={4}>\n//                             <FormControl fullWidth>\n//                                 <InputLabel id=\"room-label\">ห้องสอบ</InputLabel>\n//                                 <Select\n//                                     label=\"ห้องสอบ\"\n//                                     id=\"room\"\n//                                     value={room}\n//                                     onChange={(e) => setRoom(e.target.value)}\n//                                 >\n//                                     {roomData.map((room) => (\n//                                         <MenuItem key={room.ID} value={room.ID}>\n//                                             {room.ID}\n//                                         </MenuItem>\n//                                     ))}\n//                                 </Select>\n//                             </FormControl>\n//                         </Grid>\n//                         <Grid item xs={12} md={4}>\n//                             <FormControl fullWidth>\n//                             <LocalizationProvider dateAdapter={AdapterDayjs}>\n//                                 <DemoContainer components={['DatePicker']}>\n//                                     <DatePicker\n//                                         label=\"วันที่สอบ\"\n//                                         value={dayOn1}\n//                                         onChange={(newValue) => setDayOn1(newValue)}\n//                                         renderInput={(params) => <TextField {...params} fullWidth />}\n//                                     />\n//                                 </DemoContainer>\n//                             </LocalizationProvider>\n//                             </FormControl>\n//                         </Grid>\n//                     </Grid>\n//                     <Grid container spacing={3} mt={3}>\n//                         <Grid item xs={12}>\n//                             <Typography variant=\"h6\" gutterBottom>\n//                                 จำนวนกรรมการสอบ\n//                             </Typography>\n//                             <TextField\n//                                 label=\"จำนวนกรรมการสอบ\"\n//                                 type=\"number\"\n//                                 value={numberOfFields}\n//                                 onChange={handleInputChange}\n//                                 fullWidth\n//                             />\n//                         </Grid>\n//                         {Array.from({ length: numberOfFields }).map((_, index) => (\n//                             <Grid item xs={12} md={6} key={index}>\n//                                 <Typography variant=\"h6\" gutterBottom>\n//                                     รายชื่อกรรมการที่ {index + 1}\n//                                 </Typography>\n//                                 <FormControl fullWidth>\n//                                     <InputLabel id={`teacher-label-${index}`}>เลือกกรรมการ</InputLabel>\n//                                     <Select\n//                                         label=\"เลือกกรรมการ\"\n//                                         id={`teacher-${index}`}\n//                                         value={teacherValues[index]}\n//                                         onChange={handleSelectTeacher(index)}\n//                                     >\n//                                         {getFilteredTeachers(index).map((teacher) => (\n//                                             <MenuItem key={teacher.ID} value={teacher.ID}>\n//                                                 {teacher.Name}\n//                                             </MenuItem>\n//                                         ))}\n//                                     </Select>\n//                                 </FormControl>\n//                                 <FormControl fullWidth>\n//                                     <InputLabel id={`position-label-${index}`}>เลือกตำแหน่ง</InputLabel>\n//                                     <Select\n//                                         label=\"ตำแหน่ง\"\n//                                         id={`position-${index}`}\n//                                         value={positionValues[index]}\n//                                         onChange={handleSelectPosition(index)}\n//                                     >\n//                                         {getFilteredPositions(index).map((position) => (\n//                                             <MenuItem key={position.ID} value={position.ID}>\n//                                                 {position.Name}\n//                                             </MenuItem>\n//                                         ))}\n//                                     </Select>\n//                                 </FormControl>\n//                             </Grid>\n//                         ))}\n//                         <Grid item xs={12}>\n//                             <Typography variant=\"h6\" gutterBottom>\n//                                 จำนวนโปรเจคที่สอบ\n//                             </Typography>\n//                             <TextField\n//                                 label=\"จำนวนโปรเจค\"\n//                                 type=\"number\"\n//                                 value={numberOfFields2}\n//                                 onChange={handleInputChange2}\n//                                 fullWidth\n//                             />\n//                         </Grid>\n//                         {Array.from({ length: numberOfFields2 }).map((_, index) => (\n//                             <Grid item xs={12} md={6} key={index}>\n//                                 <Typography variant=\"h6\" gutterBottom>\n//                                     รายชื่อโปรเจคที่ {index + 1}\n//                                 </Typography>\n//                                 <FormControl fullWidth>\n//                                     <InputLabel id={`project-label-${index}`}>เลือกโปรเจค</InputLabel>\n//                                     <Select\n//                                         label=\"เลือกโปรเจค\"\n//                                         id={`project-${index}`}\n//                                         value={ProjectValues[index]}\n//                                         onChange={handleSelectProject(index)}\n//                                     >\n//                                         {getFilteredProject(index).map((project) => (\n//                                             <MenuItem key={project.ID} value={project.ID}>\n//                                                 {project.Name}\n//                                             </MenuItem>\n//                                         ))}\n//                                     </Select>\n//                                 </FormControl>\n//                             </Grid>\n//                         ))}\n//                         <Grid item xs={12}>\n//                             <Typography variant=\"h6\" gutterBottom>\n//                                 เวลาที่สอบ\n//                             </Typography>\n//                             {Array.from({ length: numberOfFields }).map((_, index) => (\n//                                 <FormControl fullWidth margin=\"normal\" key={index}>\n//                                     <InputLabel id={`time-label-${index}`}>เวลา {index + 1}</InputLabel>\n//                                     <Select\n//                                         label=\"เวลา\"\n//                                         id={`time-${index}`}\n//                                         value={timeOn1[index] || ''}\n//                                         onChange={handleSelectTime(index)}\n//                                     >\n//                                         {[...Array(24)].map((_, i) => (\n//                                             <MenuItem key={i} value={`${i}:00`}>\n//                                                 {i}:00\n//                                             </MenuItem>\n//                                         ))}\n//                                     </Select>\n//                                     {invalidTimes[index] && (\n//                                         <Typography color=\"error\" variant=\"body2\">\n//                                             Duplicate time selected!\n//                                         </Typography>\n//                                     )}\n//                                 </FormControl>\n//                             ))}\n//                         </Grid>\n//                         <Grid item xs={12}>\n//                             <Button variant=\"contained\" color=\"primary\">\n//                                 บันทึก\n//                             </Button>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard>\n//     );\n// };\n\n// export default ManageExamRoom;\n\nimport React, { useState } from 'react';\nimport { TextField, FormControl, InputLabel, Grid, TypographyมMenuItem } from '@mui/material';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageExamRoom = () => {\n  _s();\n  const [option, setOption] = useState('');\n  const [room, setRoom] = useState('');\n  const [date, setDate] = useState(null);\n\n  // Mock data for select options\n  const testData = [{\n    ID: 'CSB01',\n    Name: 'สอบหัวข้อ'\n  }, {\n    ID: 'CSB02',\n    Name: 'สอบก้าวหน้า'\n  }, {\n    ID: 'CSB03',\n    Name: 'สอบป้องกัน'\n  }];\n  const roomData = [{\n    ID: '78-618'\n  }, {\n    ID: '78-618/2'\n  }, {\n    ID: '78-619'\n  }, {\n    ID: '78-621'\n  }, {\n    ID: '78-617'\n  }];\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"\\u0E08\\u0E31\\u0E14\\u0E2B\\u0E49\\u0E2D\\u0E07\\u0E2A\\u0E2D\\u0E1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"option-label\",\n                children: \"\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E01\\u0E32\\u0E23\\u0E2A\\u0E2D\\u0E1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"option-label\",\n                value: option,\n                onChange: e => setOption(e.target.value),\n                children: testData.map(test => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: test.ID,\n                  children: test.ID + ' : ' + test.Name\n                }, test.ID, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"room-label\",\n                children: \"\\u0E2B\\u0E49\\u0E2D\\u0E07\\u0E2A\\u0E2D\\u0E1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"room-label\",\n                value: room,\n                onChange: e => setRoom(e.target.value),\n                children: roomData.map(room => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: room.ID,\n                  children: room.ID\n                }, room.ID, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: AdapterDayjs,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  label: \"\\u0E27\\u0E31\\u0E19\\u0E17\\u0E35\\u0E48\\u0E2A\\u0E2D\\u0E1A\",\n                  value: date,\n                  onChange: newValue => setDate(newValue),\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                    ...params,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 66\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 9\n  }, this);\n};\n_s(ManageExamRoom, \"wo0MAzyb8XOLcGDi/eesFTtBoSc=\");\n_c = ManageExamRoom;\nexport default ManageExamRoom;\nvar _c;\n$RefreshReg$(_c, \"ManageExamRoom\");","map":{"version":3,"names":["React","useState","TextField","FormControl","InputLabel","Grid","TypographyมMenuItem","LocalizationProvider","DatePicker","AdapterDayjs","MainCard","gridSpacing","jsxDEV","_jsxDEV","ManageExamRoom","_s","option","setOption","room","setRoom","date","setDate","testData","ID","Name","roomData","children","container","spacing","item","xs","Typography","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","md","fullWidth","id","Select","labelId","value","onChange","e","target","map","test","MenuItem","dateAdapter","label","newValue","renderInput","params","_c","$RefreshReg$"],"sources":["C:/test/create-react-app/src/views/dashboard/Default/CSB/ManageExamRoom.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { TextField, Select, MenuItem, FormControl, InputLabel, Button, Grid, Typography } from '@mui/material';\r\n// import { DemoContainer } from '@mui/x-date-pickers/internals/demo';\r\n// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\n// import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\n// import { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n// import MainCard from 'ui-component/cards/MainCard';\r\n// import { gridSpacing } from 'store/constant';\r\n\r\n// const ManageExamRoom = () => {\r\n//     const [option, setOption] = useState('');\r\n//     const [room, setRoom] = useState('');\r\n//     const [numberOfFields, setNumberOfFields] = useState(0);\r\n//     const [numberOfFields2, setNumberOfFields2] = useState(0);\r\n//     const [dayOn1, setDayOn1] = useState(null);\r\n//     const [timeOn1, setTimeOn1] = useState([]);\r\n//     const [invalidTimes, setInvalidTimes] = useState([]);\r\n\r\n//     const handleInputChange = (event) => {\r\n//         setNumberOfFields(parseInt(event.target.value) || 0);\r\n//     };\r\n\r\n//     const handleInputChange2 = (event) => {\r\n//         setNumberOfFields2(parseInt(event.target.value) || 0);\r\n//     };\r\n\r\n//     const [teacherValues, setTeacherValues] = useState(Array(numberOfFields).fill(''));\r\n//     const [positionValues, setPositionValues] = useState(Array(numberOfFields).fill(''));\r\n//     const [ProjectValues, setProjectValues] = useState(Array(numberOfFields2).fill(''));\r\n\r\n//     const handleSelectTeacher = (index) => (event) => {\r\n//         const newTeacherValues = [...teacherValues];\r\n//         newTeacherValues[index] = event.target.value;\r\n//         setTeacherValues(newTeacherValues);\r\n//     };\r\n\r\n//     const handleSelectPosition = (index) => (event) => {\r\n//         const newPositionValues = [...positionValues];\r\n//         newPositionValues[index] = event.target.value;\r\n//         setPositionValues(newPositionValues);\r\n//     };\r\n\r\n//     const handleSelectProject = (index) => (event) => {\r\n//         const newProjectValues = [...ProjectValues];\r\n//         newProjectValues[index] = event.target.value;\r\n//         setProjectValues(newProjectValues);\r\n//     };\r\n\r\n//     const handleSelectTime = (index) => (event) => {\r\n//         const newTime = event.target.value;\r\n//         const newTimeOn1 = [...timeOn1];\r\n//         newTimeOn1[index] = newTime;\r\n\r\n//         // Check for duplicates\r\n//         const timeCounts = newTimeOn1.reduce((acc, time) => {\r\n//             acc[time] = (acc[time] || 0) + 1;\r\n//             return acc;\r\n//         }, {});\r\n//         const newInvalidTimes = newTimeOn1.map((time, i) => timeCounts[time] > 1 && i !== newTimeOn1.indexOf(time));\r\n\r\n//         setTimeOn1(newTimeOn1);\r\n//         setInvalidTimes(newInvalidTimes);\r\n//     };\r\n\r\n//     const getFilteredTeachers = (index) => {\r\n//         const selectedTeachers = teacherValues.filter((_, i) => i !== index);\r\n//         return Teacher.filter((teacher) => !selectedTeachers.includes(teacher.ID));\r\n//     };\r\n\r\n//     const getFilteredPositions = (index) => {\r\n//         const selectedPositions = positionValues.filter((_, i) => i !== index);\r\n//         return positionData.filter((position) => !selectedPositions.includes(position.ID) || position.ID !== 'No1');\r\n//     };\r\n\r\n//     const getFilteredProject = (index) => {\r\n//         const selectedProject = ProjectValues.filter((_, i) => i !== index);\r\n//         return ProjectData.filter((ProjectData) => !selectedProject.includes(ProjectData.ID));\r\n//     };\r\n\r\n//     const testData = [\r\n//         { ID: 'CSB01', Name: 'สอบหัวข้อ' },\r\n//         { ID: 'CSB02', Name: 'สอบก้าวหน้า' },\r\n//         { ID: 'CSB03', Name: 'สอบป้องกัน' }\r\n//     ];\r\n\r\n//     const roomData = [\r\n//         { ID: '78-618' },\r\n//         { ID: '78-618/2' },\r\n//         { ID: '78-619' },\r\n//         { ID: '78-621' },\r\n//         { ID: '78-617' }\r\n//     ];\r\n\r\n//     const Teacher = [\r\n//         { ID: 'NLP', Name: 'ลือพล ไม่น่ารักเลย' },\r\n//         { ID: 'SWK', Name: 'สุวัชชัย ตัวตึง' },\r\n//         { ID: 'KAB', Name: 'คัณฑารัตน์ สุดละเอียด' },\r\n//         { ID: 'CRL', Name: 'เฉียบวุฒิ สุดจ้าบ' },\r\n//         { ID: 'ARN', Name: 'เอิญ ไม่ใจดี' },\r\n//         { ID: 'TNA', Name: 'ธณาภัทร ใจร้าย' },\r\n//         { ID: 'BLP', Name: 'เบญจพร ร้ายกาจ' },\r\n//         { ID: 'NAT', Name: 'ณัฐวุฒิ ช่วยด้วย' },\r\n//         { ID: 'KOB', Name: 'กอบเกียรติ อิหยังวะ' },\r\n//         { ID: 'ANW', Name: 'อนุสรณ์ หนีไป' }\r\n//     ];\r\n\r\n//     const positionData = [\r\n//         { ID: 'No1', Name: 'ประธาน' },\r\n//         { ID: 'No2', Name: 'กรรมการ' }\r\n//     ];\r\n\r\n//     const ProjectData = [\r\n//         { ID: 'SP1-01', Name: 'การตรวจสอบจบ' },\r\n//         { ID: 'SP1-02', Name: 'การยื่นสอบปริญญานิพนจ์' },\r\n//         { ID: 'SP1-03', Name: 'โมเดลจำลองอะตอม' },\r\n//         { ID: 'SP1-04', Name: 'AIจับมนุษย์' },\r\n//         { ID: 'SP1-05', Name: 'โปรแกรมปลูกต้นไม้' },\r\n//         { ID: 'SP1-06', Name: 'โปรแกรมออกแบบการนำเสนอ' },\r\n//         { ID: 'SP1-07', Name: 'โปรแกรมคำนวณพื้นที่' },\r\n//         { ID: 'SP1-08', Name: 'การจัดการการสอบสำหรับ CSB' },\r\n//         { ID: 'SP1-09', Name: 'โปรแกรมจองตั๋วรถไฟ' },\r\n//         { ID: 'SP1-10', Name: 'เกมเอาตัวรอดในCS' }\r\n//     ];\r\n\r\n//     return (\r\n//         <MainCard>\r\n//             <Grid container spacing={gridSpacing}>\r\n//                 <Grid item xs={12}>\r\n//                     <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n//                         จัดห้องสอบ\r\n//                     </Typography>\r\n//                     <Grid container spacing={2} alignItems=\"center\">\r\n//                         <Grid item xs={10} md={4}>\r\n//                             <FormControl fullWidth>\r\n//                                 <InputLabel id=\"option-label\">เลือกการสอบ</InputLabel>\r\n//                                 <Select\r\n//                                     label=\"รหัสการสอบ\"\r\n//                                     id=\"option\"\r\n//                                     value={option}\r\n//                                     onChange={(e) => setOption(e.target.value)}\r\n//                                 >\r\n//                                     {testData.map((test) => (\r\n//                                         <MenuItem key={test.ID} value={test.ID}>\r\n//                                             {test.ID + ' : ' + test.Name}\r\n//                                         </MenuItem>\r\n//                                     ))}\r\n//                                 </Select>\r\n//                             </FormControl>\r\n//                         </Grid>\r\n//                         <Grid item xs={12} md={4}>\r\n//                             <FormControl fullWidth>\r\n//                                 <InputLabel id=\"room-label\">ห้องสอบ</InputLabel>\r\n//                                 <Select\r\n//                                     label=\"ห้องสอบ\"\r\n//                                     id=\"room\"\r\n//                                     value={room}\r\n//                                     onChange={(e) => setRoom(e.target.value)}\r\n//                                 >\r\n//                                     {roomData.map((room) => (\r\n//                                         <MenuItem key={room.ID} value={room.ID}>\r\n//                                             {room.ID}\r\n//                                         </MenuItem>\r\n//                                     ))}\r\n//                                 </Select>\r\n//                             </FormControl>\r\n//                         </Grid>\r\n//                         <Grid item xs={12} md={4}>\r\n//                             <FormControl fullWidth>\r\n//                             <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n//                                 <DemoContainer components={['DatePicker']}>\r\n//                                     <DatePicker\r\n//                                         label=\"วันที่สอบ\"\r\n//                                         value={dayOn1}\r\n//                                         onChange={(newValue) => setDayOn1(newValue)}\r\n//                                         renderInput={(params) => <TextField {...params} fullWidth />}\r\n//                                     />\r\n//                                 </DemoContainer>\r\n//                             </LocalizationProvider>\r\n//                             </FormControl>\r\n//                         </Grid>\r\n//                     </Grid>\r\n//                     <Grid container spacing={3} mt={3}>\r\n//                         <Grid item xs={12}>\r\n//                             <Typography variant=\"h6\" gutterBottom>\r\n//                                 จำนวนกรรมการสอบ\r\n//                             </Typography>\r\n//                             <TextField\r\n//                                 label=\"จำนวนกรรมการสอบ\"\r\n//                                 type=\"number\"\r\n//                                 value={numberOfFields}\r\n//                                 onChange={handleInputChange}\r\n//                                 fullWidth\r\n//                             />\r\n//                         </Grid>\r\n//                         {Array.from({ length: numberOfFields }).map((_, index) => (\r\n//                             <Grid item xs={12} md={6} key={index}>\r\n//                                 <Typography variant=\"h6\" gutterBottom>\r\n//                                     รายชื่อกรรมการที่ {index + 1}\r\n//                                 </Typography>\r\n//                                 <FormControl fullWidth>\r\n//                                     <InputLabel id={`teacher-label-${index}`}>เลือกกรรมการ</InputLabel>\r\n//                                     <Select\r\n//                                         label=\"เลือกกรรมการ\"\r\n//                                         id={`teacher-${index}`}\r\n//                                         value={teacherValues[index]}\r\n//                                         onChange={handleSelectTeacher(index)}\r\n//                                     >\r\n//                                         {getFilteredTeachers(index).map((teacher) => (\r\n//                                             <MenuItem key={teacher.ID} value={teacher.ID}>\r\n//                                                 {teacher.Name}\r\n//                                             </MenuItem>\r\n//                                         ))}\r\n//                                     </Select>\r\n//                                 </FormControl>\r\n//                                 <FormControl fullWidth>\r\n//                                     <InputLabel id={`position-label-${index}`}>เลือกตำแหน่ง</InputLabel>\r\n//                                     <Select\r\n//                                         label=\"ตำแหน่ง\"\r\n//                                         id={`position-${index}`}\r\n//                                         value={positionValues[index]}\r\n//                                         onChange={handleSelectPosition(index)}\r\n//                                     >\r\n//                                         {getFilteredPositions(index).map((position) => (\r\n//                                             <MenuItem key={position.ID} value={position.ID}>\r\n//                                                 {position.Name}\r\n//                                             </MenuItem>\r\n//                                         ))}\r\n//                                     </Select>\r\n//                                 </FormControl>\r\n//                             </Grid>\r\n//                         ))}\r\n//                         <Grid item xs={12}>\r\n//                             <Typography variant=\"h6\" gutterBottom>\r\n//                                 จำนวนโปรเจคที่สอบ\r\n//                             </Typography>\r\n//                             <TextField\r\n//                                 label=\"จำนวนโปรเจค\"\r\n//                                 type=\"number\"\r\n//                                 value={numberOfFields2}\r\n//                                 onChange={handleInputChange2}\r\n//                                 fullWidth\r\n//                             />\r\n//                         </Grid>\r\n//                         {Array.from({ length: numberOfFields2 }).map((_, index) => (\r\n//                             <Grid item xs={12} md={6} key={index}>\r\n//                                 <Typography variant=\"h6\" gutterBottom>\r\n//                                     รายชื่อโปรเจคที่ {index + 1}\r\n//                                 </Typography>\r\n//                                 <FormControl fullWidth>\r\n//                                     <InputLabel id={`project-label-${index}`}>เลือกโปรเจค</InputLabel>\r\n//                                     <Select\r\n//                                         label=\"เลือกโปรเจค\"\r\n//                                         id={`project-${index}`}\r\n//                                         value={ProjectValues[index]}\r\n//                                         onChange={handleSelectProject(index)}\r\n//                                     >\r\n//                                         {getFilteredProject(index).map((project) => (\r\n//                                             <MenuItem key={project.ID} value={project.ID}>\r\n//                                                 {project.Name}\r\n//                                             </MenuItem>\r\n//                                         ))}\r\n//                                     </Select>\r\n//                                 </FormControl>\r\n//                             </Grid>\r\n//                         ))}\r\n//                         <Grid item xs={12}>\r\n//                             <Typography variant=\"h6\" gutterBottom>\r\n//                                 เวลาที่สอบ\r\n//                             </Typography>\r\n//                             {Array.from({ length: numberOfFields }).map((_, index) => (\r\n//                                 <FormControl fullWidth margin=\"normal\" key={index}>\r\n//                                     <InputLabel id={`time-label-${index}`}>เวลา {index + 1}</InputLabel>\r\n//                                     <Select\r\n//                                         label=\"เวลา\"\r\n//                                         id={`time-${index}`}\r\n//                                         value={timeOn1[index] || ''}\r\n//                                         onChange={handleSelectTime(index)}\r\n//                                     >\r\n//                                         {[...Array(24)].map((_, i) => (\r\n//                                             <MenuItem key={i} value={`${i}:00`}>\r\n//                                                 {i}:00\r\n//                                             </MenuItem>\r\n//                                         ))}\r\n//                                     </Select>\r\n//                                     {invalidTimes[index] && (\r\n//                                         <Typography color=\"error\" variant=\"body2\">\r\n//                                             Duplicate time selected!\r\n//                                         </Typography>\r\n//                                     )}\r\n//                                 </FormControl>\r\n//                             ))}\r\n//                         </Grid>\r\n//                         <Grid item xs={12}>\r\n//                             <Button variant=\"contained\" color=\"primary\">\r\n//                                 บันทึก\r\n//                             </Button>\r\n//                         </Grid>\r\n//                     </Grid>\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </MainCard>\r\n//     );\r\n// };\r\n\r\n// export default ManageExamRoom;\r\n\r\nimport React, { useState } from 'react';\r\nimport { TextField, FormControl, InputLabel, Grid, TypographyมMenuItem } from '@mui/material';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nconst ManageExamRoom = () => {\r\n    const [option, setOption] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [date, setDate] = useState(null);\r\n\r\n    // Mock data for select options\r\n    const testData = [\r\n        { ID: 'CSB01', Name: 'สอบหัวข้อ' },\r\n        { ID: 'CSB02', Name: 'สอบก้าวหน้า' },\r\n        { ID: 'CSB03', Name: 'สอบป้องกัน' }\r\n    ];\r\n\r\n    const roomData = [\r\n        { ID: '78-618' },\r\n        { ID: '78-618/2' },\r\n        { ID: '78-619' },\r\n        { ID: '78-621' },\r\n        { ID: '78-617' }\r\n    ];\r\n\r\n    return (\r\n        <MainCard>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h2\" align=\"center\" gutterBottom>จัดห้องสอบ</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2}>\r\n                        {/* Select for test type */}\r\n                        <Grid item xs={12} md={4}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"option-label\">เลือกการสอบ</InputLabel>\r\n                                <Select\r\n                                    labelId=\"option-label\"\r\n                                    value={option}\r\n                                    onChange={(e) => setOption(e.target.value)}\r\n                                >\r\n                                    {testData.map((test) => (\r\n                                        <MenuItem key={test.ID} value={test.ID}>\r\n                                            {test.ID + ' : ' + test.Name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/* Select for exam room */}\r\n                        <Grid item xs={12} md={4}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel id=\"room-label\">ห้องสอบ</InputLabel>\r\n                                <Select\r\n                                    labelId=\"room-label\"\r\n                                    value={room}\r\n                                    onChange={(e) => setRoom(e.target.value)}\r\n                                >\r\n                                    {roomData.map((room) => (\r\n                                        <MenuItem key={room.ID} value={room.ID}>\r\n                                            {room.ID}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        {/* Date picker */}\r\n                        <Grid item xs={12} md={4}>\r\n                            <FormControl fullWidth>\r\n                                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                    <DatePicker\r\n                                        label=\"วันที่สอบ\"\r\n                                        value={date}\r\n                                        onChange={(newValue) => setDate(newValue)}\r\n                                        renderInput={(params) => <TextField {...params} fullWidth />}\r\n                                    />\r\n                                </LocalizationProvider>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ManageExamRoom;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}