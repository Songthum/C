{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\create-react-app\\\\src\\\\views\\\\utilities\\\\RequestAdvisor.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Button, TableCell, TableContainer, Table, TableHead, TableBody, TableRow, Select, MenuItem, TextField, Dialog, DialogContent, DialogActions } from '@mui/material';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// function RequestAdvisor() {\n//     const ProjectCSB = [\n//         {\n//             \"ID\": \"CSB1-01\",\n//             \"Name\": \"ระบบจัดการการยื่นจบสำหรับโครงการพิเศษสองภาษา\",\n//             \"Option\": \"อำนวยความสะดวกในการยื่นจบ\"\n//         },\n//         {\n//             \"ID\": \"CSB1-02\",\n//             \"Name\": \"ระบบจัดการการสอบโครงงานพิเศษสำหรับโครงการพิเศษสองภาษา\",\n//             \"Option\": \"อำนวยความสะดวกในการยื่นสอบจบ\"\n//         },\n//     ]\n\n//     const [tableData, setTableData] = useState('');\n//     const [openPopup, setOpenPopup] = useState(false);\n//     //const [selectedRowId, setSelectedRowId] = useState(null);\n\n//     const handlePopupClick = () => {\n//         setOpenPopup(true);\n//         //setSelectedRowId(id);\n//     };\n\n//     const handlePopupClose = () => {\n//         setOpenPopup(false);\n//     };\n\n//     const handleSaveClick = (id) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Save logic goes here\n//                 console.log(`Save button clicked for row ${id}`);\n//                 return { ...row, isEditable: false };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//         setOpenPopup(false);\n//     };\n\n//     const handleOptionChange = (id, event) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Update option logic goes here\n//                 console.log(`Option changed for row ${id}: ${event.target.value}`);\n//                 return { ...row, col4: event.target.value };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//     };\n\n//     const handleTextChange = (id, event) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Update text logic goes here\n//                 console.log(`Text changed for row ${id}: ${event.target.value}`);\n//                 return { ...row, col5: event.target.value };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//     };\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\n//                             <div>\n//                                 <h1>สถานะคำร้องขอเป็นอาจารย์ที่ปรึกษา</h1>\n//                                 <TableContainer>\n//                                     <Table>\n//                                         <TableHead>\n//                                             <TableRow>\n//                                                 <TableCell>ลำดับที่</TableCell>\n//                                                 <TableCell>ชื่อโครงงาน</TableCell>\n//                                                 <TableCell>รายละเอียดโดยย่อ</TableCell>\n//                                                 <TableCell>สถานะอนุมัติเป็นที่ปรึกษา</TableCell>\n//                                                 <TableCell>หมายเหตุ</TableCell>\n//                                                 <TableCell>บันทึก</TableCell>\n//                                             </TableRow>\n//                                         </TableHead>\n//                                         <TableBody>\n//                                             {tableData.length > 0 ? (\n//                                                 tableData.map(row => (\n//                                                     <TableRow key={row.id}>\n//                                                         <TableCell>{row.col1}</TableCell>\n//                                                         <TableCell>{row.col2}</TableCell>\n//                                                         <TableCell>\n//                                                             {row.col3}\n//                                                             {/* <Button disabled={!row.isEditable} onClick={() => handlePopupClick(row.id)}>Popup</Button> /}\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <Select value={row.col4} onChange={(e) => handleOptionChange(row.id, e)} disabled={!row.isEditable}>\n//                                                                 <MenuItem value=\"Option 1\">ยินยอม</MenuItem>\n//                                                                 <MenuItem value=\"Option 2\">ไม่ยินยอม</MenuItem>\n//                                                                 {/ Add more options as needed */}\n//                                                                 {/* </Select> */}\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <TextField value={row.col5} onChange={(e) => handleTextChange(row.id, e)} disabled={!row.isEditable} />\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <Button disabled={!row.isEditable} onClick={() => handleSaveClick(row.id)}>Save</Button>\n//                                                         </TableCell>\n//                                                     </TableRow>\n//                                                 ))\n//                                             ) : (\n//                                                 <TableRow>\n//                                                     <TableCell colSpan={6} align=\"center\">\n//                                                         No data available\n//                                                     </TableCell>\n//                                                 </TableRow>\n//                                             )}\n//                                         </TableBody>\n//                                     </Table>\n//                                 </TableContainer>\n//                                 <Dialog open={openPopup} onClose={handlePopupClose}>\n//                                     <DialogContent>\n//                                         รายละเอียดโดยย่อของโครงงานที่จะแสดงในนี้จะต้องดึงข้อมุลมาจากรายละเอียดของโครงงานที่จะพัฒนาจากการกรอกข้อมูลยื่นสอบหัวข้อ\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handlePopupClose}>Close</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                             </div>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard >\n//     );\n// }\n\n// export default RequestAdvisor;\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, TableCell, TableContainer, Table, TableHead, TableBody, TableRow, Dialog, DialogContent, DialogActions } from '@mui/material';\nimport { Grid } from '@mui/material';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RequestAdvisor() {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  useEffect(() => {\n    // ดึงข้อมูลจาก API\n    fetch('http://localhost:9999/Project').then(response => response.json()).then(data => {\n      setTableData(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  const handlePopupClick = project => {\n    setSelectedProject(project);\n    setOpenPopup(true);\n  };\n  const handlePopupClose = () => {\n    setOpenPopup(false);\n    setSelectedProject(null);\n  };\n  const handleAcceptAdvisor = id => {\n    console.log(`Accept advisor for project ID: ${id}`);\n    // เพิ่ม logic สำหรับการยอมรับการเป็นที่ปรึกษา\n  };\n  const handleRejectAdvisor = id => {\n    console.log(`Reject advisor for project ID: ${id}`);\n    // เพิ่ม logic สำหรับการปฏิเสธการเป็นที่ปรึกษา\n  };\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              spacing: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"\\u0E2A\\u0E16\\u0E32\\u0E19\\u0E30\\u0E04\\u0E33\\u0E23\\u0E49\\u0E2D\\u0E07\\u0E02\\u0E2D\\u0E40\\u0E1B\\u0E47\\u0E19\\u0E2D\\u0E32\\u0E08\\u0E32\\u0E23\\u0E22\\u0E4C\\u0E17\\u0E35\\u0E48\\u0E1B\\u0E23\\u0E36\\u0E01\\u0E29\\u0E32\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E25\\u0E33\\u0E14\\u0E31\\u0E1A\\u0E17\\u0E35\\u0E48\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\\u0E04\\u0E19\\u0E17\\u0E35\\u0E48 1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\\u0E04\\u0E19\\u0E17\\u0E35\\u0E48 2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E01\\u0E32\\u0E23\\u0E15\\u0E2D\\u0E1A\\u0E2A\\u0E19\\u0E2D\\u0E07\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: tableData.length > 0 ? tableData.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: row.P_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: row.P_S1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: row.P_S2\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => handlePopupClick(row),\n                          children: \"\\u0E14\\u0E39\\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 219,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => handleAcceptAdvisor(row.ID),\n                          children: \"\\u0E23\\u0E31\\u0E1A\\u0E40\\u0E1B\\u0E47\\u0E19\\u0E17\\u0E35\\u0E48\\u0E1B\\u0E23\\u0E36\\u0E01\\u0E29\\u0E32\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 222,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => handleRejectAdvisor(row.ID),\n                          children: \"\\u0E44\\u0E21\\u0E48\\u0E23\\u0E31\\u0E1A\\u0E40\\u0E1B\\u0E47\\u0E19\\u0E17\\u0E35\\u0E48\\u0E1B\\u0E23\\u0E36\\u0E01\\u0E29\\u0E32\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 223,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 57\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 53\n                    }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: /*#__PURE__*/_jsxDEV(TableCell, {\n                        colSpan: 6,\n                        align: \"center\",\n                        children: \"No data available\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n                open: openPopup,\n                onClose: handlePopupClose,\n                children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n                  children: selectedProject ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: selectedProject.P_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: selectedProject.P_details\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: selectedProject.P_type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 45\n                  }, this) : 'No project details available'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: handlePopupClose,\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n}\n_s(RequestAdvisor, \"lpbGKBe9qA+AFOcGkzy4kqmb0pw=\");\n_c = RequestAdvisor;\nexport default RequestAdvisor;\nvar _c;\n$RefreshReg$(_c, \"RequestAdvisor\");","map":{"version":3,"names":["React","useState","useEffect","Button","TableCell","TableContainer","Table","TableHead","TableBody","TableRow","Dialog","DialogContent","DialogActions","Grid","MainCard","gridSpacing","jsxDEV","_jsxDEV","RequestAdvisor","_s","tableData","setTableData","openPopup","setOpenPopup","selectedProject","setSelectedProject","fetch","then","response","json","data","catch","error","console","handlePopupClick","project","handlePopupClose","handleAcceptAdvisor","id","log","handleRejectAdvisor","children","container","spacing","item","xs","alignItems","justifyContent","direction","fileName","_jsxFileName","lineNumber","columnNumber","length","map","row","index","P_name","P_S1","P_S2","onClick","ID","colSpan","align","open","onClose","P_details","P_type","_c","$RefreshReg$"],"sources":["C:/test/create-react-app/src/views/utilities/RequestAdvisor.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Button, TableCell, TableContainer, Table, TableHead, TableBody, TableRow, Select, MenuItem, TextField, Dialog, DialogContent, DialogActions } from '@mui/material';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// function RequestAdvisor() {\n//     const ProjectCSB = [\n//         {\n//             \"ID\": \"CSB1-01\",\n//             \"Name\": \"ระบบจัดการการยื่นจบสำหรับโครงการพิเศษสองภาษา\",\n//             \"Option\": \"อำนวยความสะดวกในการยื่นจบ\"\n//         },\n//         {\n//             \"ID\": \"CSB1-02\",\n//             \"Name\": \"ระบบจัดการการสอบโครงงานพิเศษสำหรับโครงการพิเศษสองภาษา\",\n//             \"Option\": \"อำนวยความสะดวกในการยื่นสอบจบ\"\n//         },\n//     ]\n\n//     const [tableData, setTableData] = useState('');\n//     const [openPopup, setOpenPopup] = useState(false);\n//     //const [selectedRowId, setSelectedRowId] = useState(null);\n\n//     const handlePopupClick = () => {\n//         setOpenPopup(true);\n//         //setSelectedRowId(id);\n//     };\n\n//     const handlePopupClose = () => {\n//         setOpenPopup(false);\n//     };\n\n//     const handleSaveClick = (id) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Save logic goes here\n//                 console.log(`Save button clicked for row ${id}`);\n//                 return { ...row, isEditable: false };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//         setOpenPopup(false);\n//     };\n\n//     const handleOptionChange = (id, event) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Update option logic goes here\n//                 console.log(`Option changed for row ${id}: ${event.target.value}`);\n//                 return { ...row, col4: event.target.value };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//     };\n\n//     const handleTextChange = (id, event) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Update text logic goes here\n//                 console.log(`Text changed for row ${id}: ${event.target.value}`);\n//                 return { ...row, col5: event.target.value };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//     };\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\n//                             <div>\n//                                 <h1>สถานะคำร้องขอเป็นอาจารย์ที่ปรึกษา</h1>\n//                                 <TableContainer>\n//                                     <Table>\n//                                         <TableHead>\n//                                             <TableRow>\n//                                                 <TableCell>ลำดับที่</TableCell>\n//                                                 <TableCell>ชื่อโครงงาน</TableCell>\n//                                                 <TableCell>รายละเอียดโดยย่อ</TableCell>\n//                                                 <TableCell>สถานะอนุมัติเป็นที่ปรึกษา</TableCell>\n//                                                 <TableCell>หมายเหตุ</TableCell>\n//                                                 <TableCell>บันทึก</TableCell>\n//                                             </TableRow>\n//                                         </TableHead>\n//                                         <TableBody>\n//                                             {tableData.length > 0 ? (\n//                                                 tableData.map(row => (\n//                                                     <TableRow key={row.id}>\n//                                                         <TableCell>{row.col1}</TableCell>\n//                                                         <TableCell>{row.col2}</TableCell>\n//                                                         <TableCell>\n//                                                             {row.col3}\n//                                                             {/* <Button disabled={!row.isEditable} onClick={() => handlePopupClick(row.id)}>Popup</Button> /}\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <Select value={row.col4} onChange={(e) => handleOptionChange(row.id, e)} disabled={!row.isEditable}>\n//                                                                 <MenuItem value=\"Option 1\">ยินยอม</MenuItem>\n//                                                                 <MenuItem value=\"Option 2\">ไม่ยินยอม</MenuItem>\n//                                                                 {/ Add more options as needed */}\n//                                                                 {/* </Select> */}\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <TextField value={row.col5} onChange={(e) => handleTextChange(row.id, e)} disabled={!row.isEditable} />\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <Button disabled={!row.isEditable} onClick={() => handleSaveClick(row.id)}>Save</Button>\n//                                                         </TableCell>\n//                                                     </TableRow>\n//                                                 ))\n//                                             ) : (\n//                                                 <TableRow>\n//                                                     <TableCell colSpan={6} align=\"center\">\n//                                                         No data available\n//                                                     </TableCell>\n//                                                 </TableRow>\n//                                             )}\n//                                         </TableBody>\n//                                     </Table>\n//                                 </TableContainer>\n//                                 <Dialog open={openPopup} onClose={handlePopupClose}>\n//                                     <DialogContent>\n//                                         รายละเอียดโดยย่อของโครงงานที่จะแสดงในนี้จะต้องดึงข้อมุลมาจากรายละเอียดของโครงงานที่จะพัฒนาจากการกรอกข้อมูลยื่นสอบหัวข้อ\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handlePopupClose}>Close</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                             </div>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard >\n//     );\n// }\n\n// export default RequestAdvisor;\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, TableCell, TableContainer, Table, TableHead, TableBody, TableRow, Dialog, DialogContent, DialogActions } from '@mui/material';\nimport { Grid } from '@mui/material';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\n\nfunction RequestAdvisor() {\n    const [tableData, setTableData] = useState([]);\n    const [openPopup, setOpenPopup] = useState(false);\n    const [selectedProject, setSelectedProject] = useState(null);\n\n    useEffect(() => {\n        // ดึงข้อมูลจาก API\n        fetch('http://localhost:9999/Project')\n            .then(response => response.json())\n            .then(data => {\n                setTableData(data);\n            })\n            .catch(error => {\n                console.error('Error fetching data:', error);\n            });\n    }, []);\n\n    const handlePopupClick = (project) => {\n        setSelectedProject(project);\n        setOpenPopup(true);\n    };\n\n    const handlePopupClose = () => {\n        setOpenPopup(false);\n        setSelectedProject(null);\n    };\n\n    const handleAcceptAdvisor = (id) => {\n        console.log(`Accept advisor for project ID: ${id}`);\n        // เพิ่ม logic สำหรับการยอมรับการเป็นที่ปรึกษา\n    };\n\n    const handleRejectAdvisor = (id) => {\n        console.log(`Reject advisor for project ID: ${id}`);\n        // เพิ่ม logic สำหรับการปฏิเสธการเป็นที่ปรึกษา\n    };\n\n    return (\n        <MainCard>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12}>\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                        <Grid item>\n                            <Grid container direction=\"column\" spacing={1}></Grid>\n                            <div>\n                                <h1>สถานะคำร้องขอเป็นอาจารย์ที่ปรึกษา</h1>\n                                <TableContainer>\n                                    <Table>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>ลำดับที่</TableCell>\n                                                <TableCell>ชื่อโครงงาน</TableCell>\n                                                <TableCell>นักศึกษาคนที่ 1</TableCell>\n                                                <TableCell>นักศึกษาคนที่ 2</TableCell>\n                                                <TableCell>รายละเอียดโครงงาน</TableCell>\n                                                <TableCell>การตอบสนอง</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {tableData.length > 0 ? (\n                                                tableData.map((row, index) => (\n                                                    <TableRow key={index}>\n                                                        <TableCell>{index + 1}</TableCell>\n                                                        <TableCell>{row.P_name}</TableCell>\n                                                        <TableCell>{row.P_S1}</TableCell>\n                                                        <TableCell>{row.P_S2}</TableCell>\n                                                        <TableCell>\n                                                            <Button onClick={() => handlePopupClick(row)}>ดูรายละเอียด</Button>\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <Button onClick={() => handleAcceptAdvisor(row.ID)}>รับเป็นที่ปรึกษา</Button>\n                                                            <Button onClick={() => handleRejectAdvisor(row.ID)}>ไม่รับเป็นที่ปรึกษา</Button>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                ))\n                                            ) : (\n                                                <TableRow>\n                                                    <TableCell colSpan={6} align=\"center\">\n                                                        No data available\n                                                    </TableCell>\n                                                </TableRow>\n                                            )}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                                <Dialog open={openPopup} onClose={handlePopupClose}>\n                                    <DialogContent>\n                                        {selectedProject ? (\n                                            <div>\n                                                <h2>{selectedProject.P_name}</h2>\n                                                <p>{selectedProject.P_details}</p>\n                                                <p>{selectedProject.P_type}</p>\n                                            </div>\n                                        ) : (\n                                            'No project details available'\n                                        )}\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <Button onClick={handlePopupClose}>Close</Button>\n                                    </DialogActions>\n                                </Dialog>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </MainCard>\n    );\n}\n\nexport default RequestAdvisor;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,SAAS,EAAEC,cAAc,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,aAAa,EAAEC,aAAa,QAAQ,eAAe;AAC9I,SAASC,IAAI,QAAQ,eAAe;AACpC,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACZ;IACAwB,KAAK,CAAC,+BAA+B,CAAC,CACjCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVT,YAAY,CAACS,IAAI,CAAC;IACtB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,gBAAgB,GAAIC,OAAO,IAAK;IAClCV,kBAAkB,CAACU,OAAO,CAAC;IAC3BZ,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMa,gBAAgB,GAAGA,CAAA,KAAM;IAC3Bb,YAAY,CAAC,KAAK,CAAC;IACnBE,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMY,mBAAmB,GAAIC,EAAE,IAAK;IAChCL,OAAO,CAACM,GAAG,CAAE,kCAAiCD,EAAG,EAAC,CAAC;IACnD;EACJ,CAAC;EAED,MAAME,mBAAmB,GAAIF,EAAE,IAAK;IAChCL,OAAO,CAACM,GAAG,CAAE,kCAAiCD,EAAG,EAAC,CAAC;IACnD;EACJ,CAAC;EAED,oBACIrB,OAAA,CAACH,QAAQ;IAAA2B,QAAA,eACLxB,OAAA,CAACJ,IAAI;MAAC6B,SAAS;MAACC,OAAO,EAAE5B,WAAY;MAAA0B,QAAA,eACjCxB,OAAA,CAACJ,IAAI;QAAC+B,IAAI;QAACC,EAAE,EAAE,EAAG;QAAAJ,QAAA,eACdxB,OAAA,CAACJ,IAAI;UAAC6B,SAAS;UAACI,UAAU,EAAC,QAAQ;UAACC,cAAc,EAAC,eAAe;UAAAN,QAAA,eAC9DxB,OAAA,CAACJ,IAAI;YAAC+B,IAAI;YAAAH,QAAA,gBACNxB,OAAA,CAACJ,IAAI;cAAC6B,SAAS;cAACM,SAAS,EAAC,QAAQ;cAACL,OAAO,EAAE;YAAE;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACtDnC,OAAA;cAAAwB,QAAA,gBACIxB,OAAA;gBAAAwB,QAAA,EAAI;cAAiC;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1CnC,OAAA,CAACZ,cAAc;gBAAAoC,QAAA,eACXxB,OAAA,CAACX,KAAK;kBAAAmC,QAAA,gBACFxB,OAAA,CAACV,SAAS;oBAAAkC,QAAA,eACNxB,OAAA,CAACR,QAAQ;sBAAAgC,QAAA,gBACLxB,OAAA,CAACb,SAAS;wBAAAqC,QAAA,EAAC;sBAAQ;wBAAAQ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAW,CAAC,eAC/BnC,OAAA,CAACb,SAAS;wBAAAqC,QAAA,EAAC;sBAAW;wBAAAQ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAW,CAAC,eAClCnC,OAAA,CAACb,SAAS;wBAAAqC,QAAA,EAAC;sBAAe;wBAAAQ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAW,CAAC,eACtCnC,OAAA,CAACb,SAAS;wBAAAqC,QAAA,EAAC;sBAAe;wBAAAQ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAW,CAAC,eACtCnC,OAAA,CAACb,SAAS;wBAAAqC,QAAA,EAAC;sBAAiB;wBAAAQ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAW,CAAC,eACxCnC,OAAA,CAACb,SAAS;wBAAAqC,QAAA,EAAC;sBAAU;wBAAAQ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAW,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC3B;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC,eACZnC,OAAA,CAACT,SAAS;oBAAAiC,QAAA,EACLrB,SAAS,CAACiC,MAAM,GAAG,CAAC,GACjBjC,SAAS,CAACkC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBvC,OAAA,CAACR,QAAQ;sBAAAgC,QAAA,gBACLxB,OAAA,CAACb,SAAS;wBAAAqC,QAAA,EAAEe,KAAK,GAAG;sBAAC;wBAAAP,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAY,CAAC,eAClCnC,OAAA,CAACb,SAAS;wBAAAqC,QAAA,EAAEc,GAAG,CAACE;sBAAM;wBAAAR,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAY,CAAC,eACnCnC,OAAA,CAACb,SAAS;wBAAAqC,QAAA,EAAEc,GAAG,CAACG;sBAAI;wBAAAT,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAY,CAAC,eACjCnC,OAAA,CAACb,SAAS;wBAAAqC,QAAA,EAAEc,GAAG,CAACI;sBAAI;wBAAAV,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAY,CAAC,eACjCnC,OAAA,CAACb,SAAS;wBAAAqC,QAAA,eACNxB,OAAA,CAACd,MAAM;0BAACyD,OAAO,EAAEA,CAAA,KAAM1B,gBAAgB,CAACqB,GAAG,CAAE;0BAAAd,QAAA,EAAC;wBAAY;0BAAAQ,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAQ;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC5D,CAAC,eACZnC,OAAA,CAACb,SAAS;wBAAAqC,QAAA,gBACNxB,OAAA,CAACd,MAAM;0BAACyD,OAAO,EAAEA,CAAA,KAAMvB,mBAAmB,CAACkB,GAAG,CAACM,EAAE,CAAE;0BAAApB,QAAA,EAAC;wBAAgB;0BAAAQ,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAQ,CAAC,eAC7EnC,OAAA,CAACd,MAAM;0BAACyD,OAAO,EAAEA,CAAA,KAAMpB,mBAAmB,CAACe,GAAG,CAACM,EAAE,CAAE;0BAAApB,QAAA,EAAC;wBAAmB;0BAAAQ,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAQ,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACzE,CAAC;oBAAA,GAXDI,KAAK;sBAAAP,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAYV,CACb,CAAC,gBAEFnC,OAAA,CAACR,QAAQ;sBAAAgC,QAAA,eACLxB,OAAA,CAACb,SAAS;wBAAC0D,OAAO,EAAE,CAAE;wBAACC,KAAK,EAAC,QAAQ;wBAAAtB,QAAA,EAAC;sBAEtC;wBAAAQ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAW;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACN;kBACb;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC,eACjBnC,OAAA,CAACP,MAAM;gBAACsD,IAAI,EAAE1C,SAAU;gBAAC2C,OAAO,EAAE7B,gBAAiB;gBAAAK,QAAA,gBAC/CxB,OAAA,CAACN,aAAa;kBAAA8B,QAAA,EACTjB,eAAe,gBACZP,OAAA;oBAAAwB,QAAA,gBACIxB,OAAA;sBAAAwB,QAAA,EAAKjB,eAAe,CAACiC;oBAAM;sBAAAR,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACjCnC,OAAA;sBAAAwB,QAAA,EAAIjB,eAAe,CAAC0C;oBAAS;sBAAAjB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAClCnC,OAAA;sBAAAwB,QAAA,EAAIjB,eAAe,CAAC2C;oBAAM;sBAAAlB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC9B,CAAC,GAEN;gBACH;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACU,CAAC,eAChBnC,OAAA,CAACL,aAAa;kBAAA6B,QAAA,eACVxB,OAAA,CAACd,MAAM;oBAACyD,OAAO,EAAExB,gBAAiB;oBAAAK,QAAA,EAAC;kBAAK;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEnB;AAACjC,EAAA,CA5GQD,cAAc;AAAAkD,EAAA,GAAdlD,cAAc;AA8GvB,eAAeA,cAAc;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}