{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\create-react-app\\\\src\\\\views\\\\utilities\\\\RequestAdvisor.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Button, TableCell, TableContainer, Table, TableHead, TableBody, TableRow, Select, MenuItem, TextField, Dialog, DialogContent, DialogActions } from '@mui/material';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// function RequestAdvisor() {\n//     const ProjectCSB = [\n//         {\n//             \"ID\": \"CSB1-01\",\n//             \"Name\": \"ระบบจัดการการยื่นจบสำหรับโครงการพิเศษสองภาษา\",\n//             \"Option\": \"อำนวยความสะดวกในการยื่นจบ\"\n//         },\n//         {\n//             \"ID\": \"CSB1-02\",\n//             \"Name\": \"ระบบจัดการการสอบโครงงานพิเศษสำหรับโครงการพิเศษสองภาษา\",\n//             \"Option\": \"อำนวยความสะดวกในการยื่นสอบจบ\"\n//         },\n//     ]\n\n//     const [tableData, setTableData] = useState('');\n//     const [openPopup, setOpenPopup] = useState(false);\n//     //const [selectedRowId, setSelectedRowId] = useState(null);\n\n//     const handlePopupClick = () => {\n//         setOpenPopup(true);\n//         //setSelectedRowId(id);\n//     };\n\n//     const handlePopupClose = () => {\n//         setOpenPopup(false);\n//     };\n\n//     const handleSaveClick = (id) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Save logic goes here\n//                 console.log(`Save button clicked for row ${id}`);\n//                 return { ...row, isEditable: false };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//         setOpenPopup(false);\n//     };\n\n//     const handleOptionChange = (id, event) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Update option logic goes here\n//                 console.log(`Option changed for row ${id}: ${event.target.value}`);\n//                 return { ...row, col4: event.target.value };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//     };\n\n//     const handleTextChange = (id, event) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Update text logic goes here\n//                 console.log(`Text changed for row ${id}: ${event.target.value}`);\n//                 return { ...row, col5: event.target.value };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//     };\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\n//                             <div>\n//                                 <h1>สถานะคำร้องขอเป็นอาจารย์ที่ปรึกษา</h1>\n//                                 <TableContainer>\n//                                     <Table>\n//                                         <TableHead>\n//                                             <TableRow>\n//                                                 <TableCell>ลำดับที่</TableCell>\n//                                                 <TableCell>ชื่อโครงงาน</TableCell>\n//                                                 <TableCell>รายละเอียดโดยย่อ</TableCell>\n//                                                 <TableCell>สถานะอนุมัติเป็นที่ปรึกษา</TableCell>\n//                                                 <TableCell>หมายเหตุ</TableCell>\n//                                                 <TableCell>บันทึก</TableCell>\n//                                             </TableRow>\n//                                         </TableHead>\n//                                         <TableBody>\n//                                             {tableData.length > 0 ? (\n//                                                 tableData.map(row => (\n//                                                     <TableRow key={row.id}>\n//                                                         <TableCell>{row.col1}</TableCell>\n//                                                         <TableCell>{row.col2}</TableCell>\n//                                                         <TableCell>\n//                                                             {row.col3}\n//                                                             {/* <Button disabled={!row.isEditable} onClick={() => handlePopupClick(row.id)}>Popup</Button> /}\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <Select value={row.col4} onChange={(e) => handleOptionChange(row.id, e)} disabled={!row.isEditable}>\n//                                                                 <MenuItem value=\"Option 1\">ยินยอม</MenuItem>\n//                                                                 <MenuItem value=\"Option 2\">ไม่ยินยอม</MenuItem>\n//                                                                 {/ Add more options as needed */}\n//                                                                 {/* </Select> */}\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <TextField value={row.col5} onChange={(e) => handleTextChange(row.id, e)} disabled={!row.isEditable} />\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <Button disabled={!row.isEditable} onClick={() => handleSaveClick(row.id)}>Save</Button>\n//                                                         </TableCell>\n//                                                     </TableRow>\n//                                                 ))\n//                                             ) : (\n//                                                 <TableRow>\n//                                                     <TableCell colSpan={6} align=\"center\">\n//                                                         No data available\n//                                                     </TableCell>\n//                                                 </TableRow>\n//                                             )}\n//                                         </TableBody>\n//                                     </Table>\n//                                 </TableContainer>\n//                                 <Dialog open={openPopup} onClose={handlePopupClose}>\n//                                     <DialogContent>\n//                                         รายละเอียดโดยย่อของโครงงานที่จะแสดงในนี้จะต้องดึงข้อมุลมาจากรายละเอียดของโครงงานที่จะพัฒนาจากการกรอกข้อมูลยื่นสอบหัวข้อ\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handlePopupClose}>Close</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                             </div>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard >\n//     );\n// }\n\n// export default RequestAdvisor;\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, TableCell, TableContainer, Table, TableHead, TableBody, TableRow, Select, MenuItem, TextField, Dialog, DialogContent, DialogActions } from '@mui/material';\nimport { Grid } from '@mui/material';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RequestAdvisor() {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [openPopup, setOpenPopup] = useState(false);\n  useEffect(() => {\n    // ดึงข้อมูลจาก API\n    fetch('http://localhost:9999/Project').then(response => response.json()).then(data => {\n      setTableData(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  const handlePopupClick = () => {\n    setOpenPopup(true);\n  };\n  const handlePopupClose = () => {\n    setOpenPopup(false);\n  };\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              spacing: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"\\u0E2A\\u0E16\\u0E32\\u0E19\\u0E30\\u0E04\\u0E33\\u0E23\\u0E49\\u0E2D\\u0E07\\u0E02\\u0E2D\\u0E40\\u0E1B\\u0E47\\u0E19\\u0E2D\\u0E32\\u0E08\\u0E32\\u0E23\\u0E22\\u0E4C\\u0E17\\u0E35\\u0E48\\u0E1B\\u0E23\\u0E36\\u0E01\\u0E29\\u0E32\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E25\\u0E33\\u0E14\\u0E31\\u0E1A\\u0E17\\u0E35\\u0E48\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\\u0E04\\u0E19\\u0E17\\u0E35\\u0E48 1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\\u0E04\\u0E19\\u0E17\\u0E35\\u0E48 2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: tableData.length > 0 ? tableData.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: row.Name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: row.Student1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: row.Student2\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 57\n                      }, this)]\n                    }, row.ID, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 53\n                    }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: /*#__PURE__*/_jsxDEV(TableCell, {\n                        colSpan: 4,\n                        align: \"center\",\n                        children: \"No data available\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n                open: openPopup,\n                onClose: handlePopupClose,\n                children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n                  children: \"\\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14\\u0E42\\u0E14\\u0E22\\u0E22\\u0E48\\u0E2D\\u0E02\\u0E2D\\u0E07\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\\u0E17\\u0E35\\u0E48\\u0E08\\u0E30\\u0E41\\u0E2A\\u0E14\\u0E07\\u0E43\\u0E19\\u0E19\\u0E35\\u0E49\\u0E08\\u0E30\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E14\\u0E36\\u0E07\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E38\\u0E25\\u0E21\\u0E32\\u0E08\\u0E32\\u0E01\\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14\\u0E02\\u0E2D\\u0E07\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\\u0E17\\u0E35\\u0E48\\u0E08\\u0E30\\u0E1E\\u0E31\\u0E12\\u0E19\\u0E32\\u0E08\\u0E32\\u0E01\\u0E01\\u0E32\\u0E23\\u0E01\\u0E23\\u0E2D\\u0E01\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E22\\u0E37\\u0E48\\u0E19\\u0E2A\\u0E2D\\u0E1A\\u0E2B\\u0E31\\u0E27\\u0E02\\u0E49\\u0E2D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: handlePopupClose,\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n}\n_s(RequestAdvisor, \"Ja/6zd0U2SrDeg2NHjTYp8uJOQ0=\");\n_c = RequestAdvisor;\nexport default RequestAdvisor;\nvar _c;\n$RefreshReg$(_c, \"RequestAdvisor\");","map":{"version":3,"names":["React","useState","useEffect","Button","TableCell","TableContainer","Table","TableHead","TableBody","TableRow","Select","MenuItem","TextField","Dialog","DialogContent","DialogActions","Grid","MainCard","gridSpacing","jsxDEV","_jsxDEV","RequestAdvisor","_s","tableData","setTableData","openPopup","setOpenPopup","fetch","then","response","json","data","catch","error","console","handlePopupClick","handlePopupClose","children","container","spacing","item","xs","alignItems","justifyContent","direction","fileName","_jsxFileName","lineNumber","columnNumber","length","map","row","index","Name","Student1","Student2","ID","colSpan","align","open","onClose","onClick","_c","$RefreshReg$"],"sources":["C:/test/create-react-app/src/views/utilities/RequestAdvisor.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Button, TableCell, TableContainer, Table, TableHead, TableBody, TableRow, Select, MenuItem, TextField, Dialog, DialogContent, DialogActions } from '@mui/material';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// function RequestAdvisor() {\n//     const ProjectCSB = [\n//         {\n//             \"ID\": \"CSB1-01\",\n//             \"Name\": \"ระบบจัดการการยื่นจบสำหรับโครงการพิเศษสองภาษา\",\n//             \"Option\": \"อำนวยความสะดวกในการยื่นจบ\"\n//         },\n//         {\n//             \"ID\": \"CSB1-02\",\n//             \"Name\": \"ระบบจัดการการสอบโครงงานพิเศษสำหรับโครงการพิเศษสองภาษา\",\n//             \"Option\": \"อำนวยความสะดวกในการยื่นสอบจบ\"\n//         },\n//     ]\n\n//     const [tableData, setTableData] = useState('');\n//     const [openPopup, setOpenPopup] = useState(false);\n//     //const [selectedRowId, setSelectedRowId] = useState(null);\n\n//     const handlePopupClick = () => {\n//         setOpenPopup(true);\n//         //setSelectedRowId(id);\n//     };\n\n//     const handlePopupClose = () => {\n//         setOpenPopup(false);\n//     };\n\n//     const handleSaveClick = (id) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Save logic goes here\n//                 console.log(`Save button clicked for row ${id}`);\n//                 return { ...row, isEditable: false };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//         setOpenPopup(false);\n//     };\n\n//     const handleOptionChange = (id, event) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Update option logic goes here\n//                 console.log(`Option changed for row ${id}: ${event.target.value}`);\n//                 return { ...row, col4: event.target.value };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//     };\n\n//     const handleTextChange = (id, event) => {\n//         const newData = tableData.map(row => {\n//             if (row.id === id) {\n//                 // Update text logic goes here\n//                 console.log(`Text changed for row ${id}: ${event.target.value}`);\n//                 return { ...row, col5: event.target.value };\n//             }\n//             return row;\n//         });\n//         setTableData(newData);\n//     };\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\n//                             <div>\n//                                 <h1>สถานะคำร้องขอเป็นอาจารย์ที่ปรึกษา</h1>\n//                                 <TableContainer>\n//                                     <Table>\n//                                         <TableHead>\n//                                             <TableRow>\n//                                                 <TableCell>ลำดับที่</TableCell>\n//                                                 <TableCell>ชื่อโครงงาน</TableCell>\n//                                                 <TableCell>รายละเอียดโดยย่อ</TableCell>\n//                                                 <TableCell>สถานะอนุมัติเป็นที่ปรึกษา</TableCell>\n//                                                 <TableCell>หมายเหตุ</TableCell>\n//                                                 <TableCell>บันทึก</TableCell>\n//                                             </TableRow>\n//                                         </TableHead>\n//                                         <TableBody>\n//                                             {tableData.length > 0 ? (\n//                                                 tableData.map(row => (\n//                                                     <TableRow key={row.id}>\n//                                                         <TableCell>{row.col1}</TableCell>\n//                                                         <TableCell>{row.col2}</TableCell>\n//                                                         <TableCell>\n//                                                             {row.col3}\n//                                                             {/* <Button disabled={!row.isEditable} onClick={() => handlePopupClick(row.id)}>Popup</Button> /}\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <Select value={row.col4} onChange={(e) => handleOptionChange(row.id, e)} disabled={!row.isEditable}>\n//                                                                 <MenuItem value=\"Option 1\">ยินยอม</MenuItem>\n//                                                                 <MenuItem value=\"Option 2\">ไม่ยินยอม</MenuItem>\n//                                                                 {/ Add more options as needed */}\n//                                                                 {/* </Select> */}\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <TextField value={row.col5} onChange={(e) => handleTextChange(row.id, e)} disabled={!row.isEditable} />\n//                                                         </TableCell>\n//                                                         <TableCell>\n//                                                             <Button disabled={!row.isEditable} onClick={() => handleSaveClick(row.id)}>Save</Button>\n//                                                         </TableCell>\n//                                                     </TableRow>\n//                                                 ))\n//                                             ) : (\n//                                                 <TableRow>\n//                                                     <TableCell colSpan={6} align=\"center\">\n//                                                         No data available\n//                                                     </TableCell>\n//                                                 </TableRow>\n//                                             )}\n//                                         </TableBody>\n//                                     </Table>\n//                                 </TableContainer>\n//                                 <Dialog open={openPopup} onClose={handlePopupClose}>\n//                                     <DialogContent>\n//                                         รายละเอียดโดยย่อของโครงงานที่จะแสดงในนี้จะต้องดึงข้อมุลมาจากรายละเอียดของโครงงานที่จะพัฒนาจากการกรอกข้อมูลยื่นสอบหัวข้อ\n//                                     </DialogContent>\n//                                     <DialogActions>\n//                                         <Button onClick={handlePopupClose}>Close</Button>\n//                                     </DialogActions>\n//                                 </Dialog>\n//                             </div>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard >\n//     );\n// }\n\n// export default RequestAdvisor;\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, TableCell, TableContainer, Table, TableHead, TableBody, TableRow, Select, MenuItem, TextField, Dialog, DialogContent, DialogActions } from '@mui/material';\nimport { Grid } from '@mui/material';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\n\nfunction RequestAdvisor() {\n    const [tableData, setTableData] = useState([]);\n    const [openPopup, setOpenPopup] = useState(false);\n\n    useEffect(() => {\n        // ดึงข้อมูลจาก API\n        fetch('http://localhost:9999/Project')\n            .then(response => response.json())\n            .then(data => {\n                setTableData(data);\n            })\n            .catch(error => {\n                console.error('Error fetching data:', error);\n            });\n    }, []);\n\n    const handlePopupClick = () => {\n        setOpenPopup(true);\n    };\n\n    const handlePopupClose = () => {\n        setOpenPopup(false);\n    };\n\n    return (\n        <MainCard>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12}>\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                        <Grid item>\n                            <Grid container direction=\"column\" spacing={1}></Grid>\n                            <div>\n                                <h1>สถานะคำร้องขอเป็นอาจารย์ที่ปรึกษา</h1>\n                                <TableContainer>\n                                    <Table>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>ลำดับที่</TableCell>\n                                                <TableCell>ชื่อโครงงาน</TableCell>\n                                                <TableCell>นักศึกษาคนที่ 1</TableCell>\n                                                <TableCell>นักศึกษาคนที่ 2</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {tableData.length > 0 ? (\n                                                tableData.map((row, index) => (\n                                                    <TableRow key={row.ID}>\n                                                        <TableCell>{index + 1}</TableCell>\n                                                        <TableCell>{row.Name}</TableCell>\n                                                        <TableCell>{row.Student1}</TableCell>\n                                                        <TableCell>{row.Student2}</TableCell>\n                                                    </TableRow>\n                                                ))\n                                            ) : (\n                                                <TableRow>\n                                                    <TableCell colSpan={4} align=\"center\">\n                                                        No data available\n                                                    </TableCell>\n                                                </TableRow>\n                                            )}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                                <Dialog open={openPopup} onClose={handlePopupClose}>\n                                    <DialogContent>\n                                        รายละเอียดโดยย่อของโครงงานที่จะแสดงในนี้จะต้องดึงข้อมุลมาจากรายละเอียดของโครงงานที่จะพัฒนาจากการกรอกข้อมูลยื่นสอบหัวข้อ\n                                    </DialogContent>\n                                    <DialogActions>\n                                        <Button onClick={handlePopupClose}>Close</Button>\n                                    </DialogActions>\n                                </Dialog>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </MainCard>\n    );\n}\n\nexport default RequestAdvisor;\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}