{"ast":null,"code":"var _jsxFileName = \"C:\\\\CSB-haha\\\\create-react-app\\\\src\\\\layout\\\\StudenLayout\\\\Header\\\\ProfileSection\\\\index.js\",\n  _s = $RefreshSig$();\n// import { useState, useRef, useEffect } from 'react';\n\n// import { useNavigate } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\n// // material-ui\n// import { useTheme } from '@mui/material/styles';\n// import {\n//   Avatar,\n//   Box,\n//   Card,\n//   CardContent,\n//   Chip,\n//   ClickAwayListener,\n//   Divider,\n//   Grid,\n//   InputAdornment,\n//   List,\n//   ListItemButton,\n//   ListItemIcon,\n//   ListItemText,\n//   OutlinedInput,\n//   Paper,\n//   Popper,\n//   Stack,\n//   Switch,\n//   Typography\n// } from '@mui/material';\n\n// // third-party\n// import PerfectScrollbar from 'react-perfect-scrollbar';\n\n// // project imports\n// import MainCard from 'ui-component/cards/MainCard';\n// import Transitions from 'ui-component/extended/Transitions';\n// import UpgradePlanCard from './UpgradePlanCard';\n// import User1 from 'assets/images/users/user-round.svg';\n\n// // assets\n// import { IconLogout, IconSearch, IconSettings, IconUser } from '@tabler/icons-react';\n\n// // ==============================|| PROFILE MENU ||============================== //\n\n// const ProfileSection = () => {\n//   const theme = useTheme();\n//   const customization = useSelector((state) => state.customization);\n//   const navigate = useNavigate();\n\n//   const [sdm, setSdm] = useState(true);\n//   const [value, setValue] = useState('');\n//   const [notification, setNotification] = useState(false);\n//   const [selectedIndex, setSelectedIndex] = useState(-1);\n//   const [open, setOpen] = useState(false);\n//   /**\n//    * anchorRef is used on different componets and specifying one type leads to other components throwing an error\n//    * */\n//   const anchorRef = useRef(null);\n//   const handleLogout = async () => {\n//     window.location.href = '/free';\n//     console.log('Logout');\n//   };\n\n//   const handleClose = (event) => {\n//     if (anchorRef.current && anchorRef.current.contains(event.target)) {\n//       return;\n//     }\n//     setOpen(false);\n//   };\n\n//   const handleListItemClick = (event, index, route = '') => {\n//     setSelectedIndex(index);\n//     handleClose(event);\n\n//     if (route && route !== '') {\n//       navigate(route);\n//     }\n//   };\n//   const handleToggle = () => {\n//     setOpen((prevOpen) => !prevOpen);\n//   };\n\n//   const prevOpen = useRef(open);\n//   useEffect(() => {\n//     if (prevOpen.current === true && open === false) {\n//       anchorRef.current.focus();\n//     }\n\n//     prevOpen.current = open;\n//   }, [open]);\n\n//   return (\n//     <>\n//       <Chip\n//         sx={{\n//           height: '48px',\n//           alignItems: 'center',\n//           borderRadius: '27px',\n//           transition: 'all .2s ease-in-out',\n//           borderColor: theme.palette.primary.light,\n//           backgroundColor: theme.palette.primary.light,\n//           '&[aria-controls=\"menu-list-grow\"], &:hover': {\n//             borderColor: theme.palette.primary.main,\n//             background: `${theme.palette.primary.main}!important`,\n//             color: theme.palette.primary.light,\n//             '& svg': {\n//               stroke: theme.palette.primary.light\n//             }\n//           },\n//           '& .MuiChip-label': {\n//             lineHeight: 0\n//           }\n//         }}\n//         icon={\n//           <Avatar\n//             src={User1}\n//             sx={{\n//               ...theme.typography.mediumAvatar,\n//               margin: '8px 0 8px 8px !important',\n//               cursor: 'pointer'\n//             }}\n//             ref={anchorRef}\n//             aria-controls={open ? 'menu-list-grow' : undefined}\n//             aria-haspopup=\"true\"\n//             color=\"inherit\"\n//           />\n//         }\n//         label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\n//         variant=\"outlined\"\n//         ref={anchorRef}\n//         aria-controls={open ? 'menu-list-grow' : undefined}\n//         aria-haspopup=\"true\"\n//         onClick={handleToggle}\n//         color=\"primary\"\n//       />\n//       <Popper\n//         placement=\"bottom-end\"\n//         open={open}\n//         anchorEl={anchorRef.current}\n//         role={undefined}\n//         transition\n//         disablePortal\n//         popperOptions={{\n//           modifiers: [\n//             {\n//               name: 'offset',\n//               options: {\n//                 offset: [0, 14]\n//               }\n//             }\n//           ]\n//         }}\n//       >\n//         {({ TransitionProps }) => (\n//           <Transitions in={open} {...TransitionProps}>\n//             <Paper>\n//               <ClickAwayListener onClickAway={handleClose}>\n//                 <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\n//                   <Box sx={{ p: 2 }}>\n//                     <Stack>\n//                       <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\n//                         <Typography variant=\"h4\">Good Morning,</Typography>\n//                         <Typography component=\"span\" variant=\"h4\" sx={{ fontWeight: 400 }}>\n//                           Johne Doe\n//                         </Typography>\n//                       </Stack>\n//                       {/* <Typography variant=\"subtitle2\">Project Admin</Typography> */}\n//                     </Stack>\n//                     {/* <OutlinedInput\n//                       sx={{ width: '100%', pr: 1, pl: 2, my: 2 }}\n//                       id=\"input-search-profile\"\n//                       value={value}\n//                       onChange={(e) => setValue(e.target.value)}\n//                       placeholder=\"Search profile options\"\n//                       startAdornment={\n//                         <InputAdornment position=\"start\">\n//                           <IconSearch stroke={1.5} size=\"1rem\" color={theme.palette.grey[500]} />\n//                         </InputAdornment>\n//                       }\n//                       aria-describedby=\"search-helper-text\"\n//                       inputProps={{\n//                         'aria-label': 'weight'\n//                       }}\n//                     /> */}\n//                     {/* <Divider /> */}\n//                   </Box>\n//                   <PerfectScrollbar style={{ height: '100%', maxHeight: 'calc(100vh - 250px)', overflowX: 'hidden' }}>\n//                     <Box sx={{ p: 2 }}>\n//                       {/* <UpgradePlanCard /> */}\n//                       <Divider />\n//                       {/* <Card\n//                         sx={{\n//                           bgcolor: theme.palette.primary.light,\n//                           my: 2\n//                         }}\n//                       >\n//                         <CardContent>\n//                           <Grid container spacing={3} direction=\"column\">\n//                             <Grid item>\n//                               <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\n//                                 <Grid item>\n//                                   <Typography variant=\"subtitle1\">Start DND Mode</Typography>\n//                                 </Grid>\n//                                 <Grid item>\n//                                   <Switch\n//                                     color=\"primary\"\n//                                     checked={sdm}\n//                                     onChange={(e) => setSdm(e.target.checked)}\n//                                     name=\"sdm\"\n//                                     size=\"small\"\n//                                   />\n//                                 </Grid>\n//                               </Grid>\n//                             </Grid>\n//                             <Grid item>\n//                               <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\n//                                 <Grid item>\n//                                   <Typography variant=\"subtitle1\">Allow Notifications</Typography>\n//                                 </Grid>\n//                                 <Grid item>\n//                                   <Switch\n//                                     checked={notification}\n//                                     onChange={(e) => setNotification(e.target.checked)}\n//                                     name=\"sdm\"\n//                                     size=\"small\"\n//                                   />\n//                                 </Grid>\n//                               </Grid>\n//                             </Grid>\n//                           </Grid>\n//                         </CardContent>\n//                       </Card>\n//                       <Divider /> */}\n//                       <List\n//                         component=\"nav\"\n//                         sx={{\n//                           width: '100%',\n//                           maxWidth: 350,\n//                           minWidth: 300,\n//                           backgroundColor: theme.palette.background.paper,\n//                           borderRadius: '10px',\n//                           [theme.breakpoints.down('md')]: {\n//                             minWidth: '100%'\n//                           },\n//                           '& .MuiListItemButton-root': {\n//                             mt: 0.5\n//                           }\n//                         }}\n//                       >\n//                         {/* <ListItemButton\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\n//                           selected={selectedIndex === 0}\n//                           onClick={(event) => handleListItemClick(event, 0, '#')}\n//                         >\n//                           <ListItemIcon>\n//                             <IconSettings stroke={1.5} size=\"1.3rem\" />\n//                           </ListItemIcon>\n//                           <ListItemText primary={<Typography variant=\"body2\">Account Settings</Typography>} />\n//                         </ListItemButton> */}\n//                         {/* <ListItemButton\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\n//                           selected={selectedIndex === 1}\n//                           onClick={(event) => handleListItemClick(event, 1, '#')}\n//                         >\n//                           <ListItemIcon>\n//                             <IconUser stroke={1.5} size=\"1.3rem\" />\n//                           </ListItemIcon>\n//                           <ListItemText\n//                             primary={\n//                               <Grid container spacing={1} justifyContent=\"space-between\">\n//                                 <Grid item>\n//                                   <Typography variant=\"body2\">Social Profile</Typography>\n//                                 </Grid>\n//                                 <Grid item>\n//                                   <Chip\n//                                     label=\"02\"\n//                                     size=\"small\"\n//                                     sx={{\n//                                       bgcolor: theme.palette.warning.dark,\n//                                       color: theme.palette.background.default\n//                                     }}\n//                                   />\n//                                 </Grid>\n//                               </Grid>\n//                             }\n//                           />\n//                         </ListItemButton> */}\n//                         <ListItemButton\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\n//                           selected={selectedIndex === 4}\n//                           onClick={handleLogout}\n//                         >\n//                           <ListItemIcon>\n//                             <IconLogout stroke={1.5} size=\"1.3rem\" />\n//                           </ListItemIcon>\n//                           <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\n//                         </ListItemButton>\n//                       </List>\n//                     </Box>\n//                   </PerfectScrollbar>\n//                 </MainCard>\n//               </ClickAwayListener>\n//             </Paper>\n//           </Transitions>\n//         )}\n//       </Popper>\n//     </>\n//   );\n// };\n\n// export default ProfileSection;\n\nimport { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Avatar, Box, Card, CardContent, Chip, ClickAwayListener, Divider, Grid, InputAdornment, List, ListItemButton, ListItemIcon, ListItemText, OutlinedInput, Paper, Popper, Stack, Switch, Typography } from '@mui/material';\n\n// third-party\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport Transitions from 'ui-component/extended/Transitions';\nimport UpgradePlanCard from './UpgradePlanCard';\nimport User1 from 'assets/images/users/user-round.svg';\n\n// assets\nimport { IconLogout, IconSearch, IconSettings, IconUser } from '@tabler/icons-react';\n\n// ==============================|| PROFILE MENU ||============================== //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfileSection = () => {\n  _s();\n  const theme = useTheme();\n  const customization = useSelector(state => state.customization);\n  const navigate = useNavigate();\n  const [value, setValue] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [open, setOpen] = useState(false);\n  /**\r\n   * anchorRef is used on different componets and specifying one type leads to other components throwing an error\r\n   * */\n  const anchorRef = useRef(null);\n  const handleLogout = async () => {\n    window.location.href = '/free';\n    console.log('Logout');\n  };\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n  const handleListItemClick = (event, index, route = '') => {\n    setSelectedIndex(index);\n    handleClose(event);\n    if (route && route !== '') {\n      navigate(route);\n    }\n  };\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n  const prevOpen = useRef(open);\n  useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chip, {\n      sx: {\n        height: '48px',\n        alignItems: 'center',\n        borderRadius: '27px',\n        transition: 'all .2s ease-in-out',\n        borderColor: theme.palette.primary.light,\n        backgroundColor: theme.palette.primary.light,\n        '&[aria-controls=\"menu-list-grow\"], &:hover': {\n          borderColor: theme.palette.primary.main,\n          background: `${theme.palette.primary.main}!important`,\n          color: theme.palette.primary.light,\n          '& svg': {\n            stroke: theme.palette.primary.light\n          }\n        },\n        '& .MuiChip-label': {\n          lineHeight: 0\n        }\n      },\n      icon: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: User1,\n        sx: {\n          ...theme.typography.mediumAvatar,\n          margin: '8px 0 8px 8px !important',\n          cursor: 'pointer'\n        },\n        ref: anchorRef,\n        \"aria-controls\": open ? 'menu-list-grow' : undefined,\n        \"aria-haspopup\": \"true\",\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(IconSettings, {\n        stroke: 1.5,\n        size: \"1.5rem\",\n        color: theme.palette.primary.main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 16\n      }, this),\n      variant: \"outlined\",\n      ref: anchorRef,\n      \"aria-controls\": open ? 'menu-list-grow' : undefined,\n      \"aria-haspopup\": \"true\",\n      onClick: handleToggle,\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popper, {\n      placement: \"bottom-end\",\n      open: open,\n      anchorEl: anchorRef.current,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      popperOptions: {\n        modifiers: [{\n          name: 'offset',\n          options: {\n            offset: [0, 14]\n          }\n        }]\n      },\n      children: ({\n        TransitionProps\n      }) => /*#__PURE__*/_jsxDEV(Transitions, {\n        in: open,\n        ...TransitionProps,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n            onClickAway: handleClose,\n            children: /*#__PURE__*/_jsxDEV(MainCard, {\n              border: false,\n              elevation: 16,\n              content: false,\n              boxShadow: true,\n              shadow: theme.shadows[16],\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    direction: \"row\",\n                    spacing: 0.5,\n                    alignItems: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h4\",\n                      children: \"Good Morning,\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"h4\",\n                      sx: {\n                        fontWeight: 400\n                      },\n                      children: \"Johne Doe\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 471,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n                style: {\n                  height: '100%',\n                  maxHeight: 'calc(100vh - 250px)',\n                  overflowX: 'hidden'\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    p: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(List, {\n                    component: \"nav\",\n                    sx: {\n                      width: '100%',\n                      maxWidth: 350,\n                      minWidth: 300,\n                      backgroundColor: theme.palette.background.paper,\n                      borderRadius: '10px',\n                      [theme.breakpoints.down('md')]: {\n                        minWidth: '100%'\n                      },\n                      '& .MuiListItemButton-root': {\n                        mt: 0.5\n                      }\n                    },\n                    children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                      sx: {\n                        borderRadius: `${customization.borderRadius}px`\n                      },\n                      selected: selectedIndex === 4,\n                      onClick: handleLogout,\n                      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                        children: /*#__PURE__*/_jsxDEV(IconLogout, {\n                          stroke: 1.5,\n                          size: \"1.3rem\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 501,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 500,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                        primary: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          children: \"Logout\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 503,\n                          columnNumber: 50\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 503,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ProfileSection, \"XmZS5UBWX094Z36tr3OnT9TiB+o=\", false, function () {\n  return [useTheme, useSelector, useNavigate];\n});\n_c = ProfileSection;\nexport default ProfileSection;\nvar _c;\n$RefreshReg$(_c, \"ProfileSection\");","map":{"version":3,"names":["useState","useRef","useEffect","useNavigate","useSelector","useTheme","Avatar","Box","Card","CardContent","Chip","ClickAwayListener","Divider","Grid","InputAdornment","List","ListItemButton","ListItemIcon","ListItemText","OutlinedInput","Paper","Popper","Stack","Switch","Typography","PerfectScrollbar","MainCard","Transitions","UpgradePlanCard","User1","IconLogout","IconSearch","IconSettings","IconUser","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileSection","_s","theme","customization","state","navigate","value","setValue","selectedIndex","setSelectedIndex","open","setOpen","anchorRef","handleLogout","window","location","href","console","log","handleClose","event","current","contains","target","handleListItemClick","index","route","handleToggle","prevOpen","focus","children","sx","height","alignItems","borderRadius","transition","borderColor","palette","primary","light","backgroundColor","main","background","color","stroke","lineHeight","icon","src","typography","mediumAvatar","margin","cursor","ref","undefined","fileName","_jsxFileName","lineNumber","columnNumber","label","size","variant","onClick","placement","anchorEl","role","disablePortal","popperOptions","modifiers","name","options","offset","TransitionProps","in","onClickAway","border","elevation","content","boxShadow","shadow","shadows","p","direction","spacing","component","fontWeight","style","maxHeight","overflowX","width","maxWidth","minWidth","paper","breakpoints","down","mt","selected","_c","$RefreshReg$"],"sources":["C:/CSB-haha/create-react-app/src/layout/StudenLayout/Header/ProfileSection/index.js"],"sourcesContent":["// import { useState, useRef, useEffect } from 'react';\r\n\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { useSelector } from 'react-redux';\r\n\r\n// // material-ui\r\n// import { useTheme } from '@mui/material/styles';\r\n// import {\r\n//   Avatar,\r\n//   Box,\r\n//   Card,\r\n//   CardContent,\r\n//   Chip,\r\n//   ClickAwayListener,\r\n//   Divider,\r\n//   Grid,\r\n//   InputAdornment,\r\n//   List,\r\n//   ListItemButton,\r\n//   ListItemIcon,\r\n//   ListItemText,\r\n//   OutlinedInput,\r\n//   Paper,\r\n//   Popper,\r\n//   Stack,\r\n//   Switch,\r\n//   Typography\r\n// } from '@mui/material';\r\n\r\n// // third-party\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n// // project imports\r\n// import MainCard from 'ui-component/cards/MainCard';\r\n// import Transitions from 'ui-component/extended/Transitions';\r\n// import UpgradePlanCard from './UpgradePlanCard';\r\n// import User1 from 'assets/images/users/user-round.svg';\r\n\r\n// // assets\r\n// import { IconLogout, IconSearch, IconSettings, IconUser } from '@tabler/icons-react';\r\n\r\n// // ==============================|| PROFILE MENU ||============================== //\r\n\r\n// const ProfileSection = () => {\r\n//   const theme = useTheme();\r\n//   const customization = useSelector((state) => state.customization);\r\n//   const navigate = useNavigate();\r\n\r\n//   const [sdm, setSdm] = useState(true);\r\n//   const [value, setValue] = useState('');\r\n//   const [notification, setNotification] = useState(false);\r\n//   const [selectedIndex, setSelectedIndex] = useState(-1);\r\n//   const [open, setOpen] = useState(false);\r\n//   /**\r\n//    * anchorRef is used on different componets and specifying one type leads to other components throwing an error\r\n//    * */\r\n//   const anchorRef = useRef(null);\r\n//   const handleLogout = async () => {\r\n//     window.location.href = '/free';\r\n//     console.log('Logout');\r\n//   };\r\n\r\n//   const handleClose = (event) => {\r\n//     if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n//       return;\r\n//     }\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   const handleListItemClick = (event, index, route = '') => {\r\n//     setSelectedIndex(index);\r\n//     handleClose(event);\r\n\r\n//     if (route && route !== '') {\r\n//       navigate(route);\r\n//     }\r\n//   };\r\n//   const handleToggle = () => {\r\n//     setOpen((prevOpen) => !prevOpen);\r\n//   };\r\n\r\n//   const prevOpen = useRef(open);\r\n//   useEffect(() => {\r\n//     if (prevOpen.current === true && open === false) {\r\n//       anchorRef.current.focus();\r\n//     }\r\n\r\n//     prevOpen.current = open;\r\n//   }, [open]);\r\n\r\n//   return (\r\n//     <>\r\n//       <Chip\r\n//         sx={{\r\n//           height: '48px',\r\n//           alignItems: 'center',\r\n//           borderRadius: '27px',\r\n//           transition: 'all .2s ease-in-out',\r\n//           borderColor: theme.palette.primary.light,\r\n//           backgroundColor: theme.palette.primary.light,\r\n//           '&[aria-controls=\"menu-list-grow\"], &:hover': {\r\n//             borderColor: theme.palette.primary.main,\r\n//             background: `${theme.palette.primary.main}!important`,\r\n//             color: theme.palette.primary.light,\r\n//             '& svg': {\r\n//               stroke: theme.palette.primary.light\r\n//             }\r\n//           },\r\n//           '& .MuiChip-label': {\r\n//             lineHeight: 0\r\n//           }\r\n//         }}\r\n//         icon={\r\n//           <Avatar\r\n//             src={User1}\r\n//             sx={{\r\n//               ...theme.typography.mediumAvatar,\r\n//               margin: '8px 0 8px 8px !important',\r\n//               cursor: 'pointer'\r\n//             }}\r\n//             ref={anchorRef}\r\n//             aria-controls={open ? 'menu-list-grow' : undefined}\r\n//             aria-haspopup=\"true\"\r\n//             color=\"inherit\"\r\n//           />\r\n//         }\r\n//         label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\r\n//         variant=\"outlined\"\r\n//         ref={anchorRef}\r\n//         aria-controls={open ? 'menu-list-grow' : undefined}\r\n//         aria-haspopup=\"true\"\r\n//         onClick={handleToggle}\r\n//         color=\"primary\"\r\n//       />\r\n//       <Popper\r\n//         placement=\"bottom-end\"\r\n//         open={open}\r\n//         anchorEl={anchorRef.current}\r\n//         role={undefined}\r\n//         transition\r\n//         disablePortal\r\n//         popperOptions={{\r\n//           modifiers: [\r\n//             {\r\n//               name: 'offset',\r\n//               options: {\r\n//                 offset: [0, 14]\r\n//               }\r\n//             }\r\n//           ]\r\n//         }}\r\n//       >\r\n//         {({ TransitionProps }) => (\r\n//           <Transitions in={open} {...TransitionProps}>\r\n//             <Paper>\r\n//               <ClickAwayListener onClickAway={handleClose}>\r\n//                 <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\r\n//                   <Box sx={{ p: 2 }}>\r\n//                     <Stack>\r\n//                       <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n//                         <Typography variant=\"h4\">Good Morning,</Typography>\r\n//                         <Typography component=\"span\" variant=\"h4\" sx={{ fontWeight: 400 }}>\r\n//                           Johne Doe\r\n//                         </Typography>\r\n//                       </Stack>\r\n//                       {/* <Typography variant=\"subtitle2\">Project Admin</Typography> */}\r\n//                     </Stack>\r\n//                     {/* <OutlinedInput\r\n//                       sx={{ width: '100%', pr: 1, pl: 2, my: 2 }}\r\n//                       id=\"input-search-profile\"\r\n//                       value={value}\r\n//                       onChange={(e) => setValue(e.target.value)}\r\n//                       placeholder=\"Search profile options\"\r\n//                       startAdornment={\r\n//                         <InputAdornment position=\"start\">\r\n//                           <IconSearch stroke={1.5} size=\"1rem\" color={theme.palette.grey[500]} />\r\n//                         </InputAdornment>\r\n//                       }\r\n//                       aria-describedby=\"search-helper-text\"\r\n//                       inputProps={{\r\n//                         'aria-label': 'weight'\r\n//                       }}\r\n//                     /> */}\r\n//                     {/* <Divider /> */}\r\n//                   </Box>\r\n//                   <PerfectScrollbar style={{ height: '100%', maxHeight: 'calc(100vh - 250px)', overflowX: 'hidden' }}>\r\n//                     <Box sx={{ p: 2 }}>\r\n//                       {/* <UpgradePlanCard /> */}\r\n//                       <Divider />\r\n//                       {/* <Card\r\n//                         sx={{\r\n//                           bgcolor: theme.palette.primary.light,\r\n//                           my: 2\r\n//                         }}\r\n//                       >\r\n//                         <CardContent>\r\n//                           <Grid container spacing={3} direction=\"column\">\r\n//                             <Grid item>\r\n//                               <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\r\n//                                 <Grid item>\r\n//                                   <Typography variant=\"subtitle1\">Start DND Mode</Typography>\r\n//                                 </Grid>\r\n//                                 <Grid item>\r\n//                                   <Switch\r\n//                                     color=\"primary\"\r\n//                                     checked={sdm}\r\n//                                     onChange={(e) => setSdm(e.target.checked)}\r\n//                                     name=\"sdm\"\r\n//                                     size=\"small\"\r\n//                                   />\r\n//                                 </Grid>\r\n//                               </Grid>\r\n//                             </Grid>\r\n//                             <Grid item>\r\n//                               <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\r\n//                                 <Grid item>\r\n//                                   <Typography variant=\"subtitle1\">Allow Notifications</Typography>\r\n//                                 </Grid>\r\n//                                 <Grid item>\r\n//                                   <Switch\r\n//                                     checked={notification}\r\n//                                     onChange={(e) => setNotification(e.target.checked)}\r\n//                                     name=\"sdm\"\r\n//                                     size=\"small\"\r\n//                                   />\r\n//                                 </Grid>\r\n//                               </Grid>\r\n//                             </Grid>\r\n//                           </Grid>\r\n//                         </CardContent>\r\n//                       </Card>\r\n//                       <Divider /> */}\r\n//                       <List\r\n//                         component=\"nav\"\r\n//                         sx={{\r\n//                           width: '100%',\r\n//                           maxWidth: 350,\r\n//                           minWidth: 300,\r\n//                           backgroundColor: theme.palette.background.paper,\r\n//                           borderRadius: '10px',\r\n//                           [theme.breakpoints.down('md')]: {\r\n//                             minWidth: '100%'\r\n//                           },\r\n//                           '& .MuiListItemButton-root': {\r\n//                             mt: 0.5\r\n//                           }\r\n//                         }}\r\n//                       >\r\n//                         {/* <ListItemButton\r\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n//                           selected={selectedIndex === 0}\r\n//                           onClick={(event) => handleListItemClick(event, 0, '#')}\r\n//                         >\r\n//                           <ListItemIcon>\r\n//                             <IconSettings stroke={1.5} size=\"1.3rem\" />\r\n//                           </ListItemIcon>\r\n//                           <ListItemText primary={<Typography variant=\"body2\">Account Settings</Typography>} />\r\n//                         </ListItemButton> */}\r\n//                         {/* <ListItemButton\r\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n//                           selected={selectedIndex === 1}\r\n//                           onClick={(event) => handleListItemClick(event, 1, '#')}\r\n//                         >\r\n//                           <ListItemIcon>\r\n//                             <IconUser stroke={1.5} size=\"1.3rem\" />\r\n//                           </ListItemIcon>\r\n//                           <ListItemText\r\n//                             primary={\r\n//                               <Grid container spacing={1} justifyContent=\"space-between\">\r\n//                                 <Grid item>\r\n//                                   <Typography variant=\"body2\">Social Profile</Typography>\r\n//                                 </Grid>\r\n//                                 <Grid item>\r\n//                                   <Chip\r\n//                                     label=\"02\"\r\n//                                     size=\"small\"\r\n//                                     sx={{\r\n//                                       bgcolor: theme.palette.warning.dark,\r\n//                                       color: theme.palette.background.default\r\n//                                     }}\r\n//                                   />\r\n//                                 </Grid>\r\n//                               </Grid>\r\n//                             }\r\n//                           />\r\n//                         </ListItemButton> */}\r\n//                         <ListItemButton\r\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n//                           selected={selectedIndex === 4}\r\n//                           onClick={handleLogout}\r\n//                         >\r\n//                           <ListItemIcon>\r\n//                             <IconLogout stroke={1.5} size=\"1.3rem\" />\r\n//                           </ListItemIcon>\r\n//                           <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\r\n//                         </ListItemButton>\r\n//                       </List>\r\n//                     </Box>\r\n//                   </PerfectScrollbar>\r\n//                 </MainCard>\r\n//               </ClickAwayListener>\r\n//             </Paper>\r\n//           </Transitions>\r\n//         )}\r\n//       </Popper>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ProfileSection;\r\n\r\n\r\nimport { useState, useRef, useEffect } from 'react';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n  ClickAwayListener,\r\n  Divider,\r\n  Grid,\r\n  InputAdornment,\r\n  List,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  OutlinedInput,\r\n  Paper,\r\n  Popper,\r\n  Stack,\r\n  Switch,\r\n  Typography\r\n} from '@mui/material';\r\n\r\n// third-party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport Transitions from 'ui-component/extended/Transitions';\r\nimport UpgradePlanCard from './UpgradePlanCard';\r\nimport User1 from 'assets/images/users/user-round.svg';\r\n\r\n// assets\r\nimport { IconLogout, IconSearch, IconSettings, IconUser } from '@tabler/icons-react';\r\n\r\n// ==============================|| PROFILE MENU ||============================== //\r\n\r\nconst ProfileSection = () => {\r\n  const theme = useTheme();\r\n  const customization = useSelector((state) => state.customization);\r\n  const navigate = useNavigate();\r\n  const [value, setValue] = useState('');\r\n  const [selectedIndex, setSelectedIndex] = useState(-1);\r\n  const [open, setOpen] = useState(false);\r\n  /**\r\n   * anchorRef is used on different componets and specifying one type leads to other components throwing an error\r\n   * */\r\n  const anchorRef = useRef(null);\r\n  const handleLogout = async () => {\r\n    window.location.href = '/free';\r\n    console.log('Logout');\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleListItemClick = (event, index, route = '') => {\r\n    setSelectedIndex(index);\r\n    handleClose(event);\r\n\r\n    if (route && route !== '') {\r\n      navigate(route);\r\n    }\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const prevOpen = useRef(open);\r\n  useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <>\r\n      <Chip\r\n        sx={{\r\n          height: '48px',\r\n          alignItems: 'center',\r\n          borderRadius: '27px',\r\n          transition: 'all .2s ease-in-out',\r\n          borderColor: theme.palette.primary.light,\r\n          backgroundColor: theme.palette.primary.light,\r\n          '&[aria-controls=\"menu-list-grow\"], &:hover': {\r\n            borderColor: theme.palette.primary.main,\r\n            background: `${theme.palette.primary.main}!important`,\r\n            color: theme.palette.primary.light,\r\n            '& svg': {\r\n              stroke: theme.palette.primary.light\r\n            }\r\n          },\r\n          '& .MuiChip-label': {\r\n            lineHeight: 0\r\n          }\r\n        }}\r\n        icon={\r\n          <Avatar\r\n            src={User1}\r\n            sx={{\r\n              ...theme.typography.mediumAvatar,\r\n              margin: '8px 0 8px 8px !important',\r\n              cursor: 'pointer'\r\n            }}\r\n            ref={anchorRef}\r\n            aria-controls={open ? 'menu-list-grow' : undefined}\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n          />\r\n        }\r\n        label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\r\n        variant=\"outlined\"\r\n        ref={anchorRef}\r\n        aria-controls={open ? 'menu-list-grow' : undefined}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleToggle}\r\n        color=\"primary\"\r\n      />\r\n      <Popper\r\n        placement=\"bottom-end\"\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n        popperOptions={{\r\n          modifiers: [\r\n            {\r\n              name: 'offset',\r\n              options: {\r\n                offset: [0, 14]\r\n              }\r\n            }\r\n          ]\r\n        }}\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Transitions in={open} {...TransitionProps}>\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\r\n                  <Box sx={{ p: 2 }}>\r\n                    <Stack>\r\n                      <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n                        <Typography variant=\"h4\">Good Morning,</Typography>\r\n                        <Typography component=\"span\" variant=\"h4\" sx={{ fontWeight: 400 }}>\r\n                          Johne Doe\r\n                        </Typography>\r\n                      </Stack>\r\n                    </Stack>\r\n                  </Box>\r\n                  <PerfectScrollbar style={{ height: '100%', maxHeight: 'calc(100vh - 250px)', overflowX: 'hidden' }}>\r\n                    <Box sx={{ p: 2 }}>\r\n                      <List\r\n                        component=\"nav\"\r\n                        sx={{\r\n                          width: '100%',\r\n                          maxWidth: 350,\r\n                          minWidth: 300,\r\n                          backgroundColor: theme.palette.background.paper,\r\n                          borderRadius: '10px',\r\n                          [theme.breakpoints.down('md')]: {\r\n                            minWidth: '100%'\r\n                          },\r\n                          '& .MuiListItemButton-root': {\r\n                            mt: 0.5\r\n                          }\r\n                        }}\r\n                      >\r\n                        <ListItemButton\r\n                          sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n                          selected={selectedIndex === 4}\r\n                          onClick={handleLogout}\r\n                        >\r\n                          <ListItemIcon>\r\n                            <IconLogout stroke={1.5} size=\"1.3rem\" />\r\n                          </ListItemIcon>\r\n                          <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\r\n                        </ListItemButton>\r\n                      </List>\r\n                    </Box>\r\n                  </PerfectScrollbar>\r\n                </MainCard>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Transitions>\r\n        )}\r\n      </Popper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileSection;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}