{"ast":null,"code":"var _jsxFileName = \"C:\\\\CSB-haha\\\\create-react-app\\\\src\\\\layout\\\\StudenLayout\\\\Header\\\\ProfileSection\\\\index.js\",\n  _s = $RefreshSig$();\n// // import { useState, useRef, useEffect } from 'react';\n\n// // import { useNavigate } from 'react-router-dom';\n// // import { useSelector } from 'react-redux';\n\n// // // material-ui\n// // import { useTheme } from '@mui/material/styles';\n// // import {\n// //   Avatar,\n// //   Box,\n// //   Card,\n// //   CardContent,\n// //   Chip,\n// //   ClickAwayListener,\n// //   Divider,\n// //   Grid,\n// //   InputAdornment,\n// //   List,\n// //   ListItemButton,\n// //   ListItemIcon,\n// //   ListItemText,\n// //   OutlinedInput,\n// //   Paper,\n// //   Popper,\n// //   Stack,\n// //   Switch,\n// //   Typography\n// // } from '@mui/material';\n\n// // // third-party\n// // import PerfectScrollbar from 'react-perfect-scrollbar';\n\n// // // project imports\n// // import MainCard from 'ui-component/cards/MainCard';\n// // import Transitions from 'ui-component/extended/Transitions';\n// // import UpgradePlanCard from './UpgradePlanCard';\n// // import User1 from 'assets/images/users/user-round.svg';\n\n// // // assets\n// // import { IconLogout, IconSearch, IconSettings, IconUser } from '@tabler/icons-react';\n\n// // // ==============================|| PROFILE MENU ||============================== //\n\n// // const ProfileSection = () => {\n// //   const theme = useTheme();\n// //   const customization = useSelector((state) => state.customization);\n// //   const navigate = useNavigate();\n\n// //   const [sdm, setSdm] = useState(true);\n// //   const [value, setValue] = useState('');\n// //   const [notification, setNotification] = useState(false);\n// //   const [selectedIndex, setSelectedIndex] = useState(-1);\n// //   const [open, setOpen] = useState(false);\n// //   /**\n// //    * anchorRef is used on different componets and specifying one type leads to other components throwing an error\n// //    * */\n// //   const anchorRef = useRef(null);\n// //   const handleLogout = async () => {\n// //     window.location.href = '/free';\n// //     console.log('Logout');\n// //   };\n\n// //   const handleClose = (event) => {\n// //     if (anchorRef.current && anchorRef.current.contains(event.target)) {\n// //       return;\n// //     }\n// //     setOpen(false);\n// //   };\n\n// //   const handleListItemClick = (event, index, route = '') => {\n// //     setSelectedIndex(index);\n// //     handleClose(event);\n\n// //     if (route && route !== '') {\n// //       navigate(route);\n// //     }\n// //   };\n// //   const handleToggle = () => {\n// //     setOpen((prevOpen) => !prevOpen);\n// //   };\n\n// //   const prevOpen = useRef(open);\n// //   useEffect(() => {\n// //     if (prevOpen.current === true && open === false) {\n// //       anchorRef.current.focus();\n// //     }\n\n// //     prevOpen.current = open;\n// //   }, [open]);\n\n// //   return (\n// //     <>\n// //       <Chip\n// //         sx={{\n// //           height: '48px',\n// //           alignItems: 'center',\n// //           borderRadius: '27px',\n// //           transition: 'all .2s ease-in-out',\n// //           borderColor: theme.palette.primary.light,\n// //           backgroundColor: theme.palette.primary.light,\n// //           '&[aria-controls=\"menu-list-grow\"], &:hover': {\n// //             borderColor: theme.palette.primary.main,\n// //             background: `${theme.palette.primary.main}!important`,\n// //             color: theme.palette.primary.light,\n// //             '& svg': {\n// //               stroke: theme.palette.primary.light\n// //             }\n// //           },\n// //           '& .MuiChip-label': {\n// //             lineHeight: 0\n// //           }\n// //         }}\n// //         icon={\n// //           <Avatar\n// //             src={User1}\n// //             sx={{\n// //               ...theme.typography.mediumAvatar,\n// //               margin: '8px 0 8px 8px !important',\n// //               cursor: 'pointer'\n// //             }}\n// //             ref={anchorRef}\n// //             aria-controls={open ? 'menu-list-grow' : undefined}\n// //             aria-haspopup=\"true\"\n// //             color=\"inherit\"\n// //           />\n// //         }\n// //         label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\n// //         variant=\"outlined\"\n// //         ref={anchorRef}\n// //         aria-controls={open ? 'menu-list-grow' : undefined}\n// //         aria-haspopup=\"true\"\n// //         onClick={handleToggle}\n// //         color=\"primary\"\n// //       />\n// //       <Popper\n// //         placement=\"bottom-end\"\n// //         open={open}\n// //         anchorEl={anchorRef.current}\n// //         role={undefined}\n// //         transition\n// //         disablePortal\n// //         popperOptions={{\n// //           modifiers: [\n// //             {\n// //               name: 'offset',\n// //               options: {\n// //                 offset: [0, 14]\n// //               }\n// //             }\n// //           ]\n// //         }}\n// //       >\n// //         {({ TransitionProps }) => (\n// //           <Transitions in={open} {...TransitionProps}>\n// //             <Paper>\n// //               <ClickAwayListener onClickAway={handleClose}>\n// //                 <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\n// //                   <Box sx={{ p: 2 }}>\n// //                     <Stack>\n// //                       <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\n// //                         <Typography variant=\"h4\">Good Morning,</Typography>\n// //                         <Typography component=\"span\" variant=\"h4\" sx={{ fontWeight: 400 }}>\n// //                           Johne Doe\n// //                         </Typography>\n// //                       </Stack>\n// //                       {/* <Typography variant=\"subtitle2\">Project Admin</Typography> */}\n// //                     </Stack>\n// //                     {/* <OutlinedInput\n// //                       sx={{ width: '100%', pr: 1, pl: 2, my: 2 }}\n// //                       id=\"input-search-profile\"\n// //                       value={value}\n// //                       onChange={(e) => setValue(e.target.value)}\n// //                       placeholder=\"Search profile options\"\n// //                       startAdornment={\n// //                         <InputAdornment position=\"start\">\n// //                           <IconSearch stroke={1.5} size=\"1rem\" color={theme.palette.grey[500]} />\n// //                         </InputAdornment>\n// //                       }\n// //                       aria-describedby=\"search-helper-text\"\n// //                       inputProps={{\n// //                         'aria-label': 'weight'\n// //                       }}\n// //                     /> */}\n// //                     {/* <Divider /> */}\n// //                   </Box>\n// //                   <PerfectScrollbar style={{ height: '100%', maxHeight: 'calc(100vh - 250px)', overflowX: 'hidden' }}>\n// //                     <Box sx={{ p: 2 }}>\n// //                       {/* <UpgradePlanCard /> */}\n// //                       <Divider />\n// //                       {/* <Card\n// //                         sx={{\n// //                           bgcolor: theme.palette.primary.light,\n// //                           my: 2\n// //                         }}\n// //                       >\n// //                         <CardContent>\n// //                           <Grid container spacing={3} direction=\"column\">\n// //                             <Grid item>\n// //                               <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\n// //                                 <Grid item>\n// //                                   <Typography variant=\"subtitle1\">Start DND Mode</Typography>\n// //                                 </Grid>\n// //                                 <Grid item>\n// //                                   <Switch\n// //                                     color=\"primary\"\n// //                                     checked={sdm}\n// //                                     onChange={(e) => setSdm(e.target.checked)}\n// //                                     name=\"sdm\"\n// //                                     size=\"small\"\n// //                                   />\n// //                                 </Grid>\n// //                               </Grid>\n// //                             </Grid>\n// //                             <Grid item>\n// //                               <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\n// //                                 <Grid item>\n// //                                   <Typography variant=\"subtitle1\">Allow Notifications</Typography>\n// //                                 </Grid>\n// //                                 <Grid item>\n// //                                   <Switch\n// //                                     checked={notification}\n// //                                     onChange={(e) => setNotification(e.target.checked)}\n// //                                     name=\"sdm\"\n// //                                     size=\"small\"\n// //                                   />\n// //                                 </Grid>\n// //                               </Grid>\n// //                             </Grid>\n// //                           </Grid>\n// //                         </CardContent>\n// //                       </Card>\n// //                       <Divider /> */}\n// //                       <List\n// //                         component=\"nav\"\n// //                         sx={{\n// //                           width: '100%',\n// //                           maxWidth: 350,\n// //                           minWidth: 300,\n// //                           backgroundColor: theme.palette.background.paper,\n// //                           borderRadius: '10px',\n// //                           [theme.breakpoints.down('md')]: {\n// //                             minWidth: '100%'\n// //                           },\n// //                           '& .MuiListItemButton-root': {\n// //                             mt: 0.5\n// //                           }\n// //                         }}\n// //                       >\n// //                         {/* <ListItemButton\n// //                           sx={{ borderRadius: `${customization.borderRadius}px` }}\n// //                           selected={selectedIndex === 0}\n// //                           onClick={(event) => handleListItemClick(event, 0, '#')}\n// //                         >\n// //                           <ListItemIcon>\n// //                             <IconSettings stroke={1.5} size=\"1.3rem\" />\n// //                           </ListItemIcon>\n// //                           <ListItemText primary={<Typography variant=\"body2\">Account Settings</Typography>} />\n// //                         </ListItemButton> */}\n// //                         {/* <ListItemButton\n// //                           sx={{ borderRadius: `${customization.borderRadius}px` }}\n// //                           selected={selectedIndex === 1}\n// //                           onClick={(event) => handleListItemClick(event, 1, '#')}\n// //                         >\n// //                           <ListItemIcon>\n// //                             <IconUser stroke={1.5} size=\"1.3rem\" />\n// //                           </ListItemIcon>\n// //                           <ListItemText\n// //                             primary={\n// //                               <Grid container spacing={1} justifyContent=\"space-between\">\n// //                                 <Grid item>\n// //                                   <Typography variant=\"body2\">Social Profile</Typography>\n// //                                 </Grid>\n// //                                 <Grid item>\n// //                                   <Chip\n// //                                     label=\"02\"\n// //                                     size=\"small\"\n// //                                     sx={{\n// //                                       bgcolor: theme.palette.warning.dark,\n// //                                       color: theme.palette.background.default\n// //                                     }}\n// //                                   />\n// //                                 </Grid>\n// //                               </Grid>\n// //                             }\n// //                           />\n// //                         </ListItemButton> */}\n// //                         <ListItemButton\n// //                           sx={{ borderRadius: `${customization.borderRadius}px` }}\n// //                           selected={selectedIndex === 4}\n// //                           onClick={handleLogout}\n// //                         >\n// //                           <ListItemIcon>\n// //                             <IconLogout stroke={1.5} size=\"1.3rem\" />\n// //                           </ListItemIcon>\n// //                           <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\n// //                         </ListItemButton>\n// //                       </List>\n// //                     </Box>\n// //                   </PerfectScrollbar>\n// //                 </MainCard>\n// //               </ClickAwayListener>\n// //             </Paper>\n// //           </Transitions>\n// //         )}\n// //       </Popper>\n// //     </>\n// //   );\n// // };\n\n// // export default ProfileSection;\n\n// import { useState, useRef, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n// import { useTheme } from '@mui/material/styles';\n// import {Avatar,Box,Chip,ClickAwayListener,List,ListItemButton,ListItemIcon,ListItemText,\n// Paper,Popper,Stack,Typography\n// } from '@mui/material';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\n// import MainCard from 'ui-component/cards/MainCard';\n// import Transitions from 'ui-component/extended/Transitions';\n// import { IconLogout, IconSettings } from '@tabler/icons-react';\n\n// // ==============================|| PROFILE MENU ||============================== //\n\n// const ProfileSection = () => {\n//   const theme = useTheme();\n//   const customization = useSelector((state) => state.customization);\n//   const navigate = useNavigate();\n//   const [selectedIndex, setSelectedIndex] = useState(-1);\n//   const [open, setOpen] = useState(false);\n//   const [studentName, setStudentName] = useState(''); // State for student name\n\n//   const anchorRef = useRef(null);\n\n//   const handleLogout = async () => {\n//     window.location.href = '/free';\n//     console.log('Logout');\n//   };\n\n//   const handleClose = (event) => {\n//     if (anchorRef.current && anchorRef.current.contains(event.target)) {\n//       return;\n//     }\n//     setOpen(false);\n//   };\n\n//   const handleListItemClick = (event, index, route = '') => {\n//     setSelectedIndex(index);\n//     handleClose(event);\n\n//     if (route && route !== '') {\n//       navigate(route);\n//     }\n//   };\n\n//   const handleToggle = () => {\n//     setOpen((prevOpen) => !prevOpen);\n//   };\n\n//   const prevOpen = useRef(open);\n//   useEffect(() => {\n//     if (prevOpen.current === true && open === false) {\n//       anchorRef.current.focus();\n//     }\n//     prevOpen.current = open;\n//   }, [open]);\n\n//   // Fetch student name on component mount\n//   useEffect(() => {\n//     const fetchStudentName = async () => {\n//       try {\n//         const response = await fetch('http://localhost:9999/students');\n//         // Check if response is okay (status code 200-299)\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         const data = await response.json();\n//         console.log('API Response:', data); // Log the entire response for debugging\n\n//         // Assuming the API returns an object with a field S_name\n//         if (data && data.S_name) {\n//           setStudentName(data.S_name);\n//         } else {\n//           console.error('S_name field not found in response:', data);\n//           setStudentName('Name not available'); // Fallback in case S_name is not found\n//         }\n//       } catch (error) {\n//         console.error('Error fetching student name:', error);\n//       }\n//     };\n\n//     fetchStudentName();\n//   }, []);\n\n//   return (\n//     <>\n//       <Chip\n//         sx={{\n//           height: '48px',\n//           alignItems: 'center',\n//           borderRadius: '27px',\n//           transition: 'all .2s ease-in-out',\n//           borderColor: theme.palette.primary.light,\n//           backgroundColor: theme.palette.primary.light,\n//           '&[aria-controls=\"menu-list-grow\"], &:hover': {\n//             borderColor: theme.palette.primary.main,\n//             background: `${theme.palette.primary.main}!important`,\n//             color: theme.palette.primary.light,\n//             '& svg': {\n//               stroke: theme.palette.primary.light\n//             }\n//           },\n//           '& .MuiChip-label': {\n//             lineHeight: 0\n//           }\n//         }}\n//         icon={\n//           <Avatar\n//             sx={{\n//               ...theme.typography.mediumAvatar,\n//               margin: '8px 0 8px 8px !important',\n//               cursor: 'pointer'\n//             }}\n//             ref={anchorRef}\n//             aria-controls={open ? 'menu-list-grow' : undefined}\n//             aria-haspopup=\"true\"\n//             color=\"inherit\"\n//           />\n//         }\n//         label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\n//         variant=\"outlined\"\n//         ref={anchorRef}\n//         aria-controls={open ? 'menu-list-grow' : undefined}\n//         aria-haspopup=\"true\"\n//         onClick={handleToggle}\n//         color=\"primary\"\n//       />\n//       <Popper\n//         placement=\"bottom-end\"\n//         open={open}\n//         anchorEl={anchorRef.current}\n//         role={undefined}\n//         transition\n//         disablePortal\n//         popperOptions={{\n//           modifiers: [\n//             {\n//               name: 'offset',\n//               options: {\n//                 offset: [0, 14]\n//               }\n//             }\n//           ]\n//         }}\n//       >\n//         {({ TransitionProps }) => (\n//           <Transitions in={open} {...TransitionProps}>\n//             <Paper>\n//               <ClickAwayListener onClickAway={handleClose}>\n//                 <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\n//                   <Box sx={{ p: 2 }}>\n//                     <Stack>\n//                       <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\n//                         <Typography variant=\"h4\">Good Morning,</Typography>\n//                         <Typography component=\"span\" variant=\"h4\" sx={{ fontWeight: 400 }}>\n//                           {studentName || 'Loading...'} {/* Displaying the student's name */}\n//                         </Typography>\n//                       </Stack>\n//                     </Stack>\n//                   </Box>\n//                   <PerfectScrollbar style={{ height: '100%', maxHeight: 'calc(100vh - 250px)', overflowX: 'hidden' }}>\n//                     <Box sx={{ p: 2 }}>\n//                       <List\n//                         component=\"nav\"\n//                         sx={{\n//                           width: '100%',\n//                           maxWidth: 350,\n//                           minWidth: 300,\n//                           backgroundColor: theme.palette.background.paper,\n//                           borderRadius: '10px',\n//                           [theme.breakpoints.down('md')]: {\n//                             minWidth: '100%'\n//                           },\n//                           '& .MuiListItemButton-root': {\n//                             mt: 0.5\n//                           }\n//                         }}\n//                       >\n//                         <ListItemButton\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\n//                           selected={selectedIndex === 4}\n//                           onClick={handleLogout}\n//                         >\n//                           <ListItemIcon>\n//                             <IconLogout stroke={1.5} size=\"1.3rem\" />\n//                           </ListItemIcon>\n//                           <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\n//                         </ListItemButton>\n//                       </List>\n//                     </Box>\n//                   </PerfectScrollbar>\n//                 </MainCard>\n//               </ClickAwayListener>\n//             </Paper>\n//           </Transitions>\n//         )}\n//       </Popper>\n//     </>\n//   );\n// };\n\n// export default ProfileSection;\n\nimport { useState, useRef, useEffect } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport axios from 'axios'; // ใช้ axios ในการเรียก API\nimport { Avatar, Box, Chip, Paper, Popper, Stack, ListItemButton, ListItemIcon, ListItemText, Typography } from '@mui/material';\n// import {\n//   Avatar,\n//   Box,\n//   Card,\n//   CardContent,\n//   Chip,\n//   ClickAwayListener,\n//   Divider,\n//   Grid,\n//   InputAdornment,\n//   List,\n//   ListItemButton,\n//   ListItemIcon,\n//   ListItemText,\n//   OutlinedInput,\n//   Paper,\n//   Popper,\n//   Stack,\n//   Switch,\n//   Typography\n// } from '@mui/material';\n\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport User1 from 'assets/images/users/user-round.svg';\nimport { IconSettings, IconLogout } from '@tabler/icons-react';\nimport Transitions from 'ui-component/extended/Transitions';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfileSection = () => {\n  _s();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const [studentName, setStudentName] = useState('Guest'); // เก็บชื่อที่จะมาแสดง\n  const anchorRef = useRef(null);\n  const customization = useSelector(state => state.customization);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n\n  // ดึงข้อมูล username จาก Local Storage\n  const username = localStorage.getItem(\"username\");\n  const fetchStudentName = async username => {\n    try {\n      if (username && username.startsWith('s')) {\n        // ตัด 's' ข้างหน้าออก\n        const studentUsername = username.slice(1);\n\n        // เรียก API เพื่อดึงข้อมูลนักเรียนทั้งหมด\n        const response = await axios.get(`http://localhost:9999/students`);\n        if (response.data && Array.isArray(response.data)) {\n          // หา student ที่มี S_id ตรงกับ studentUsername\n          const student = response.data.find(s => s.S_id === studentUsername);\n          if (student) {\n            setStudentName(student.S_name); // ตั้งค่า studentName เป็น S_name ที่ได้จาก API\n          } else {\n            console.error('Student with matching S_id not found');\n          }\n        } else {\n          console.error('Invalid response data format');\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching student name:', error);\n    }\n  };\n\n  // เรียกฟังก์ชัน fetchStudentName เมื่อ component โหลด\n  useEffect(() => {\n    if (username) {\n      fetchStudentName(username);\n    }\n  }, [username]);\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n  const prevOpen = useRef(open);\n  useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n    prevOpen.current = open;\n  }, [open]);\n  const handleLogout = async () => {\n    const username = localStorage.getItem(\"username\");\n    if (username && username.startsWith('s')) {\n      try {\n        // เรียก API เพื่ออัปเดตสถานะ S_status ให้เป็น false\n        await axios.put(`http://localhost:9999/students/${username.slice(1)}/status`, {\n          S_status: false\n        });\n      } catch (error) {\n        console.error('Error updating student status:', error);\n      }\n    }\n\n    // เปลี่ยนเส้นทางไปที่หน้า logout\n    window.location.href = '/free';\n    console.log('Logout');\n  };\n  useEffect(() => {\n    const checkStatus = async () => {\n      const username = localStorage.getItem(\"username\");\n      if (username) {\n        try {\n          // ดึงข้อมูลของนักเรียนตาม username\n          const response = await axios.get(`http://localhost:9999/students/${username.slice(1)}`);\n          const student = response.data;\n\n          // ตรวจสอบสถานะ ถ้า S_status เป็น false ให้ทำการ logout\n          if (student && student.S_status === false) {\n            window.location.href = '/free';\n          }\n        } catch (error) {\n          console.error('Error checking student status:', error);\n        }\n      }\n    };\n    checkStatus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Chip, {\n      sx: {\n        height: '48px',\n        alignItems: 'center',\n        borderRadius: '27px',\n        transition: 'all .2s ease-in-out',\n        borderColor: theme.palette.primary.light,\n        backgroundColor: theme.palette.primary.light,\n        '&[aria-controls=\"menu-list-grow\"], &:hover': {\n          borderColor: theme.palette.primary.main,\n          background: `${theme.palette.primary.main}!important`,\n          color: theme.palette.primary.light,\n          '& svg': {\n            stroke: theme.palette.primary.light\n          }\n        },\n        '& .MuiChip-label': {\n          lineHeight: 0\n        }\n      },\n      icon: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: User1,\n        sx: {\n          ...theme.typography.mediumAvatar,\n          margin: '8px 0 8px 8px !important',\n          cursor: 'pointer'\n        },\n        ref: anchorRef,\n        \"aria-controls\": open ? 'menu-list-grow' : undefined,\n        \"aria-haspopup\": \"true\",\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 11\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(IconSettings, {\n        stroke: 1.5,\n        size: \"1.5rem\",\n        color: theme.palette.primary.main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 16\n      }, this),\n      variant: \"outlined\",\n      ref: anchorRef,\n      \"aria-controls\": open ? 'menu-list-grow' : undefined,\n      \"aria-haspopup\": \"true\",\n      onClick: handleToggle,\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popper, {\n      placement: \"bottom-end\",\n      open: open,\n      anchorEl: anchorRef.current,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      popperOptions: {\n        modifiers: [{\n          name: 'offset',\n          options: {\n            offset: [0, 14]\n          }\n        }]\n      },\n      children: ({\n        TransitionProps\n      }) => /*#__PURE__*/_jsxDEV(Transitions, {\n        in: open,\n        ...TransitionProps,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n            onClickAway: handleClose,\n            children: /*#__PURE__*/_jsxDEV(MainCard, {\n              border: false,\n              elevation: 16,\n              content: false,\n              boxShadow: true,\n              shadow: theme.shadows[16],\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Stack, {\n                  children: /*#__PURE__*/_jsxDEV(Stack, {\n                    direction: \"row\",\n                    spacing: 0.5,\n                    alignItems: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h4\",\n                      children: \"\\u0E2A\\u0E27\\u0E31\\u0E2A\\u0E14\\u0E35\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 738,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"h4\",\n                      sx: {\n                        fontWeight: 400\n                      },\n                      children: [studentName, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 739,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemButton, {\n                  sx: {\n                    borderRadius: `${customization.borderRadius}px`\n                  },\n                  selected: selectedIndex === 4,\n                  onClick: handleLogout,\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(IconLogout, {\n                      stroke: 1.5,\n                      size: \"1.3rem\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 750,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 749,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: \"Logout\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 752,\n                      columnNumber: 46\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 752,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ProfileSection, \"eN5/TJp2mr6z34alXST9Py/smIY=\", false, function () {\n  return [useTheme, useSelector];\n});\n_c = ProfileSection;\nexport default ProfileSection;\nvar _c;\n$RefreshReg$(_c, \"ProfileSection\");","map":{"version":3,"names":["useState","useRef","useEffect","useTheme","axios","Avatar","Box","Chip","Paper","Popper","Stack","ListItemButton","ListItemIcon","ListItemText","Typography","ClickAwayListener","User1","IconSettings","IconLogout","Transitions","MainCard","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileSection","_s","theme","open","setOpen","studentName","setStudentName","anchorRef","customization","state","selectedIndex","setSelectedIndex","username","localStorage","getItem","fetchStudentName","startsWith","studentUsername","slice","response","get","data","Array","isArray","student","find","s","S_id","S_name","console","error","handleToggle","prevOpen","handleClose","event","current","contains","target","focus","handleLogout","put","S_status","window","location","href","log","checkStatus","children","sx","height","alignItems","borderRadius","transition","borderColor","palette","primary","light","backgroundColor","main","background","color","stroke","lineHeight","icon","src","typography","mediumAvatar","margin","cursor","ref","undefined","fileName","_jsxFileName","lineNumber","columnNumber","label","size","variant","onClick","placement","anchorEl","role","disablePortal","popperOptions","modifiers","name","options","offset","TransitionProps","in","onClickAway","border","elevation","content","boxShadow","shadow","shadows","p","direction","spacing","component","fontWeight","selected","_c","$RefreshReg$"],"sources":["C:/CSB-haha/create-react-app/src/layout/StudenLayout/Header/ProfileSection/index.js"],"sourcesContent":["// // import { useState, useRef, useEffect } from 'react';\r\n\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import { useSelector } from 'react-redux';\r\n\r\n// // // material-ui\r\n// // import { useTheme } from '@mui/material/styles';\r\n// // import {\r\n// //   Avatar,\r\n// //   Box,\r\n// //   Card,\r\n// //   CardContent,\r\n// //   Chip,\r\n// //   ClickAwayListener,\r\n// //   Divider,\r\n// //   Grid,\r\n// //   InputAdornment,\r\n// //   List,\r\n// //   ListItemButton,\r\n// //   ListItemIcon,\r\n// //   ListItemText,\r\n// //   OutlinedInput,\r\n// //   Paper,\r\n// //   Popper,\r\n// //   Stack,\r\n// //   Switch,\r\n// //   Typography\r\n// // } from '@mui/material';\r\n\r\n// // // third-party\r\n// // import PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n// // // project imports\r\n// // import MainCard from 'ui-component/cards/MainCard';\r\n// // import Transitions from 'ui-component/extended/Transitions';\r\n// // import UpgradePlanCard from './UpgradePlanCard';\r\n// // import User1 from 'assets/images/users/user-round.svg';\r\n\r\n// // // assets\r\n// // import { IconLogout, IconSearch, IconSettings, IconUser } from '@tabler/icons-react';\r\n\r\n// // // ==============================|| PROFILE MENU ||============================== //\r\n\r\n// // const ProfileSection = () => {\r\n// //   const theme = useTheme();\r\n// //   const customization = useSelector((state) => state.customization);\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const [sdm, setSdm] = useState(true);\r\n// //   const [value, setValue] = useState('');\r\n// //   const [notification, setNotification] = useState(false);\r\n// //   const [selectedIndex, setSelectedIndex] = useState(-1);\r\n// //   const [open, setOpen] = useState(false);\r\n// //   /**\r\n// //    * anchorRef is used on different componets and specifying one type leads to other components throwing an error\r\n// //    * */\r\n// //   const anchorRef = useRef(null);\r\n// //   const handleLogout = async () => {\r\n// //     window.location.href = '/free';\r\n// //     console.log('Logout');\r\n// //   };\r\n\r\n// //   const handleClose = (event) => {\r\n// //     if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n// //       return;\r\n// //     }\r\n// //     setOpen(false);\r\n// //   };\r\n\r\n// //   const handleListItemClick = (event, index, route = '') => {\r\n// //     setSelectedIndex(index);\r\n// //     handleClose(event);\r\n\r\n// //     if (route && route !== '') {\r\n// //       navigate(route);\r\n// //     }\r\n// //   };\r\n// //   const handleToggle = () => {\r\n// //     setOpen((prevOpen) => !prevOpen);\r\n// //   };\r\n\r\n// //   const prevOpen = useRef(open);\r\n// //   useEffect(() => {\r\n// //     if (prevOpen.current === true && open === false) {\r\n// //       anchorRef.current.focus();\r\n// //     }\r\n\r\n// //     prevOpen.current = open;\r\n// //   }, [open]);\r\n\r\n// //   return (\r\n// //     <>\r\n// //       <Chip\r\n// //         sx={{\r\n// //           height: '48px',\r\n// //           alignItems: 'center',\r\n// //           borderRadius: '27px',\r\n// //           transition: 'all .2s ease-in-out',\r\n// //           borderColor: theme.palette.primary.light,\r\n// //           backgroundColor: theme.palette.primary.light,\r\n// //           '&[aria-controls=\"menu-list-grow\"], &:hover': {\r\n// //             borderColor: theme.palette.primary.main,\r\n// //             background: `${theme.palette.primary.main}!important`,\r\n// //             color: theme.palette.primary.light,\r\n// //             '& svg': {\r\n// //               stroke: theme.palette.primary.light\r\n// //             }\r\n// //           },\r\n// //           '& .MuiChip-label': {\r\n// //             lineHeight: 0\r\n// //           }\r\n// //         }}\r\n// //         icon={\r\n// //           <Avatar\r\n// //             src={User1}\r\n// //             sx={{\r\n// //               ...theme.typography.mediumAvatar,\r\n// //               margin: '8px 0 8px 8px !important',\r\n// //               cursor: 'pointer'\r\n// //             }}\r\n// //             ref={anchorRef}\r\n// //             aria-controls={open ? 'menu-list-grow' : undefined}\r\n// //             aria-haspopup=\"true\"\r\n// //             color=\"inherit\"\r\n// //           />\r\n// //         }\r\n// //         label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\r\n// //         variant=\"outlined\"\r\n// //         ref={anchorRef}\r\n// //         aria-controls={open ? 'menu-list-grow' : undefined}\r\n// //         aria-haspopup=\"true\"\r\n// //         onClick={handleToggle}\r\n// //         color=\"primary\"\r\n// //       />\r\n// //       <Popper\r\n// //         placement=\"bottom-end\"\r\n// //         open={open}\r\n// //         anchorEl={anchorRef.current}\r\n// //         role={undefined}\r\n// //         transition\r\n// //         disablePortal\r\n// //         popperOptions={{\r\n// //           modifiers: [\r\n// //             {\r\n// //               name: 'offset',\r\n// //               options: {\r\n// //                 offset: [0, 14]\r\n// //               }\r\n// //             }\r\n// //           ]\r\n// //         }}\r\n// //       >\r\n// //         {({ TransitionProps }) => (\r\n// //           <Transitions in={open} {...TransitionProps}>\r\n// //             <Paper>\r\n// //               <ClickAwayListener onClickAway={handleClose}>\r\n// //                 <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\r\n// //                   <Box sx={{ p: 2 }}>\r\n// //                     <Stack>\r\n// //                       <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n// //                         <Typography variant=\"h4\">Good Morning,</Typography>\r\n// //                         <Typography component=\"span\" variant=\"h4\" sx={{ fontWeight: 400 }}>\r\n// //                           Johne Doe\r\n// //                         </Typography>\r\n// //                       </Stack>\r\n// //                       {/* <Typography variant=\"subtitle2\">Project Admin</Typography> */}\r\n// //                     </Stack>\r\n// //                     {/* <OutlinedInput\r\n// //                       sx={{ width: '100%', pr: 1, pl: 2, my: 2 }}\r\n// //                       id=\"input-search-profile\"\r\n// //                       value={value}\r\n// //                       onChange={(e) => setValue(e.target.value)}\r\n// //                       placeholder=\"Search profile options\"\r\n// //                       startAdornment={\r\n// //                         <InputAdornment position=\"start\">\r\n// //                           <IconSearch stroke={1.5} size=\"1rem\" color={theme.palette.grey[500]} />\r\n// //                         </InputAdornment>\r\n// //                       }\r\n// //                       aria-describedby=\"search-helper-text\"\r\n// //                       inputProps={{\r\n// //                         'aria-label': 'weight'\r\n// //                       }}\r\n// //                     /> */}\r\n// //                     {/* <Divider /> */}\r\n// //                   </Box>\r\n// //                   <PerfectScrollbar style={{ height: '100%', maxHeight: 'calc(100vh - 250px)', overflowX: 'hidden' }}>\r\n// //                     <Box sx={{ p: 2 }}>\r\n// //                       {/* <UpgradePlanCard /> */}\r\n// //                       <Divider />\r\n// //                       {/* <Card\r\n// //                         sx={{\r\n// //                           bgcolor: theme.palette.primary.light,\r\n// //                           my: 2\r\n// //                         }}\r\n// //                       >\r\n// //                         <CardContent>\r\n// //                           <Grid container spacing={3} direction=\"column\">\r\n// //                             <Grid item>\r\n// //                               <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\r\n// //                                 <Grid item>\r\n// //                                   <Typography variant=\"subtitle1\">Start DND Mode</Typography>\r\n// //                                 </Grid>\r\n// //                                 <Grid item>\r\n// //                                   <Switch\r\n// //                                     color=\"primary\"\r\n// //                                     checked={sdm}\r\n// //                                     onChange={(e) => setSdm(e.target.checked)}\r\n// //                                     name=\"sdm\"\r\n// //                                     size=\"small\"\r\n// //                                   />\r\n// //                                 </Grid>\r\n// //                               </Grid>\r\n// //                             </Grid>\r\n// //                             <Grid item>\r\n// //                               <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\r\n// //                                 <Grid item>\r\n// //                                   <Typography variant=\"subtitle1\">Allow Notifications</Typography>\r\n// //                                 </Grid>\r\n// //                                 <Grid item>\r\n// //                                   <Switch\r\n// //                                     checked={notification}\r\n// //                                     onChange={(e) => setNotification(e.target.checked)}\r\n// //                                     name=\"sdm\"\r\n// //                                     size=\"small\"\r\n// //                                   />\r\n// //                                 </Grid>\r\n// //                               </Grid>\r\n// //                             </Grid>\r\n// //                           </Grid>\r\n// //                         </CardContent>\r\n// //                       </Card>\r\n// //                       <Divider /> */}\r\n// //                       <List\r\n// //                         component=\"nav\"\r\n// //                         sx={{\r\n// //                           width: '100%',\r\n// //                           maxWidth: 350,\r\n// //                           minWidth: 300,\r\n// //                           backgroundColor: theme.palette.background.paper,\r\n// //                           borderRadius: '10px',\r\n// //                           [theme.breakpoints.down('md')]: {\r\n// //                             minWidth: '100%'\r\n// //                           },\r\n// //                           '& .MuiListItemButton-root': {\r\n// //                             mt: 0.5\r\n// //                           }\r\n// //                         }}\r\n// //                       >\r\n// //                         {/* <ListItemButton\r\n// //                           sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n// //                           selected={selectedIndex === 0}\r\n// //                           onClick={(event) => handleListItemClick(event, 0, '#')}\r\n// //                         >\r\n// //                           <ListItemIcon>\r\n// //                             <IconSettings stroke={1.5} size=\"1.3rem\" />\r\n// //                           </ListItemIcon>\r\n// //                           <ListItemText primary={<Typography variant=\"body2\">Account Settings</Typography>} />\r\n// //                         </ListItemButton> */}\r\n// //                         {/* <ListItemButton\r\n// //                           sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n// //                           selected={selectedIndex === 1}\r\n// //                           onClick={(event) => handleListItemClick(event, 1, '#')}\r\n// //                         >\r\n// //                           <ListItemIcon>\r\n// //                             <IconUser stroke={1.5} size=\"1.3rem\" />\r\n// //                           </ListItemIcon>\r\n// //                           <ListItemText\r\n// //                             primary={\r\n// //                               <Grid container spacing={1} justifyContent=\"space-between\">\r\n// //                                 <Grid item>\r\n// //                                   <Typography variant=\"body2\">Social Profile</Typography>\r\n// //                                 </Grid>\r\n// //                                 <Grid item>\r\n// //                                   <Chip\r\n// //                                     label=\"02\"\r\n// //                                     size=\"small\"\r\n// //                                     sx={{\r\n// //                                       bgcolor: theme.palette.warning.dark,\r\n// //                                       color: theme.palette.background.default\r\n// //                                     }}\r\n// //                                   />\r\n// //                                 </Grid>\r\n// //                               </Grid>\r\n// //                             }\r\n// //                           />\r\n// //                         </ListItemButton> */}\r\n// //                         <ListItemButton\r\n// //                           sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n// //                           selected={selectedIndex === 4}\r\n// //                           onClick={handleLogout}\r\n// //                         >\r\n// //                           <ListItemIcon>\r\n// //                             <IconLogout stroke={1.5} size=\"1.3rem\" />\r\n// //                           </ListItemIcon>\r\n// //                           <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\r\n// //                         </ListItemButton>\r\n// //                       </List>\r\n// //                     </Box>\r\n// //                   </PerfectScrollbar>\r\n// //                 </MainCard>\r\n// //               </ClickAwayListener>\r\n// //             </Paper>\r\n// //           </Transitions>\r\n// //         )}\r\n// //       </Popper>\r\n// //     </>\r\n// //   );\r\n// // };\r\n\r\n// // export default ProfileSection;\r\n\r\n\r\n// import { useState, useRef, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { useSelector } from 'react-redux';\r\n// import { useTheme } from '@mui/material/styles';\r\n// import {Avatar,Box,Chip,ClickAwayListener,List,ListItemButton,ListItemIcon,ListItemText,\r\n// Paper,Popper,Stack,Typography\r\n// } from '@mui/material';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\n// import MainCard from 'ui-component/cards/MainCard';\r\n// import Transitions from 'ui-component/extended/Transitions';\r\n// import { IconLogout, IconSettings } from '@tabler/icons-react';\r\n\r\n// // ==============================|| PROFILE MENU ||============================== //\r\n\r\n// const ProfileSection = () => {\r\n//   const theme = useTheme();\r\n//   const customization = useSelector((state) => state.customization);\r\n//   const navigate = useNavigate();\r\n//   const [selectedIndex, setSelectedIndex] = useState(-1);\r\n//   const [open, setOpen] = useState(false);\r\n//   const [studentName, setStudentName] = useState(''); // State for student name\r\n\r\n//   const anchorRef = useRef(null);\r\n  \r\n//   const handleLogout = async () => {\r\n//     window.location.href = '/free';\r\n//     console.log('Logout');\r\n//   };\r\n\r\n//   const handleClose = (event) => {\r\n//     if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n//       return;\r\n//     }\r\n//     setOpen(false);\r\n//   };\r\n\r\n//   const handleListItemClick = (event, index, route = '') => {\r\n//     setSelectedIndex(index);\r\n//     handleClose(event);\r\n\r\n//     if (route && route !== '') {\r\n//       navigate(route);\r\n//     }\r\n//   };\r\n\r\n//   const handleToggle = () => {\r\n//     setOpen((prevOpen) => !prevOpen);\r\n//   };\r\n\r\n//   const prevOpen = useRef(open);\r\n//   useEffect(() => {\r\n//     if (prevOpen.current === true && open === false) {\r\n//       anchorRef.current.focus();\r\n//     }\r\n//     prevOpen.current = open;\r\n//   }, [open]);\r\n\r\n//   // Fetch student name on component mount\r\n//   useEffect(() => {\r\n//     const fetchStudentName = async () => {\r\n//       try {\r\n//         const response = await fetch('http://localhost:9999/students');\r\n//         // Check if response is okay (status code 200-299)\r\n//         if (!response.ok) {\r\n//           throw new Error('Network response was not ok');\r\n//         }\r\n//         const data = await response.json();\r\n//         console.log('API Response:', data); // Log the entire response for debugging\r\n\r\n//         // Assuming the API returns an object with a field S_name\r\n//         if (data && data.S_name) {\r\n//           setStudentName(data.S_name);\r\n//         } else {\r\n//           console.error('S_name field not found in response:', data);\r\n//           setStudentName('Name not available'); // Fallback in case S_name is not found\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Error fetching student name:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchStudentName();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <>\r\n//       <Chip\r\n//         sx={{\r\n//           height: '48px',\r\n//           alignItems: 'center',\r\n//           borderRadius: '27px',\r\n//           transition: 'all .2s ease-in-out',\r\n//           borderColor: theme.palette.primary.light,\r\n//           backgroundColor: theme.palette.primary.light,\r\n//           '&[aria-controls=\"menu-list-grow\"], &:hover': {\r\n//             borderColor: theme.palette.primary.main,\r\n//             background: `${theme.palette.primary.main}!important`,\r\n//             color: theme.palette.primary.light,\r\n//             '& svg': {\r\n//               stroke: theme.palette.primary.light\r\n//             }\r\n//           },\r\n//           '& .MuiChip-label': {\r\n//             lineHeight: 0\r\n//           }\r\n//         }}\r\n//         icon={\r\n//           <Avatar\r\n//             sx={{\r\n//               ...theme.typography.mediumAvatar,\r\n//               margin: '8px 0 8px 8px !important',\r\n//               cursor: 'pointer'\r\n//             }}\r\n//             ref={anchorRef}\r\n//             aria-controls={open ? 'menu-list-grow' : undefined}\r\n//             aria-haspopup=\"true\"\r\n//             color=\"inherit\"\r\n//           />\r\n//         }\r\n//         label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\r\n//         variant=\"outlined\"\r\n//         ref={anchorRef}\r\n//         aria-controls={open ? 'menu-list-grow' : undefined}\r\n//         aria-haspopup=\"true\"\r\n//         onClick={handleToggle}\r\n//         color=\"primary\"\r\n//       />\r\n//       <Popper\r\n//         placement=\"bottom-end\"\r\n//         open={open}\r\n//         anchorEl={anchorRef.current}\r\n//         role={undefined}\r\n//         transition\r\n//         disablePortal\r\n//         popperOptions={{\r\n//           modifiers: [\r\n//             {\r\n//               name: 'offset',\r\n//               options: {\r\n//                 offset: [0, 14]\r\n//               }\r\n//             }\r\n//           ]\r\n//         }}\r\n//       >\r\n//         {({ TransitionProps }) => (\r\n//           <Transitions in={open} {...TransitionProps}>\r\n//             <Paper>\r\n//               <ClickAwayListener onClickAway={handleClose}>\r\n//                 <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\r\n//                   <Box sx={{ p: 2 }}>\r\n//                     <Stack>\r\n//                       <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n//                         <Typography variant=\"h4\">Good Morning,</Typography>\r\n//                         <Typography component=\"span\" variant=\"h4\" sx={{ fontWeight: 400 }}>\r\n//                           {studentName || 'Loading...'} {/* Displaying the student's name */}\r\n//                         </Typography>\r\n//                       </Stack>\r\n//                     </Stack>\r\n//                   </Box>\r\n//                   <PerfectScrollbar style={{ height: '100%', maxHeight: 'calc(100vh - 250px)', overflowX: 'hidden' }}>\r\n//                     <Box sx={{ p: 2 }}>\r\n//                       <List\r\n//                         component=\"nav\"\r\n//                         sx={{\r\n//                           width: '100%',\r\n//                           maxWidth: 350,\r\n//                           minWidth: 300,\r\n//                           backgroundColor: theme.palette.background.paper,\r\n//                           borderRadius: '10px',\r\n//                           [theme.breakpoints.down('md')]: {\r\n//                             minWidth: '100%'\r\n//                           },\r\n//                           '& .MuiListItemButton-root': {\r\n//                             mt: 0.5\r\n//                           }\r\n//                         }}\r\n//                       >\r\n//                         <ListItemButton\r\n//                           sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n//                           selected={selectedIndex === 4}\r\n//                           onClick={handleLogout}\r\n//                         >\r\n//                           <ListItemIcon>\r\n//                             <IconLogout stroke={1.5} size=\"1.3rem\" />\r\n//                           </ListItemIcon>\r\n//                           <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\r\n//                         </ListItemButton>\r\n//                       </List>\r\n//                     </Box>\r\n//                   </PerfectScrollbar>\r\n//                 </MainCard>\r\n//               </ClickAwayListener>\r\n//             </Paper>\r\n//           </Transitions>\r\n//         )}\r\n//       </Popper>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ProfileSection;\r\n\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport axios from 'axios'; // ใช้ axios ในการเรียก API\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Chip,\r\n  Paper,\r\n  Popper,\r\n  Stack,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography\r\n} from '@mui/material';\r\n// import {\r\n//   Avatar,\r\n//   Box,\r\n//   Card,\r\n//   CardContent,\r\n//   Chip,\r\n//   ClickAwayListener,\r\n//   Divider,\r\n//   Grid,\r\n//   InputAdornment,\r\n//   List,\r\n//   ListItemButton,\r\n//   ListItemIcon,\r\n//   ListItemText,\r\n//   OutlinedInput,\r\n//   Paper,\r\n//   Popper,\r\n//   Stack,\r\n//   Switch,\r\n//   Typography\r\n// } from '@mui/material';\r\n\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport User1 from 'assets/images/users/user-round.svg';\r\nimport { IconSettings, IconLogout } from '@tabler/icons-react';\r\nimport Transitions from 'ui-component/extended/Transitions';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProfileSection = () => {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n  const [studentName, setStudentName] = useState('Guest'); // เก็บชื่อที่จะมาแสดง\r\n  const anchorRef = useRef(null);\r\n  const customization = useSelector((state) => state.customization);\r\n  const [selectedIndex, setSelectedIndex] = useState(-1);\r\n\r\n  // ดึงข้อมูล username จาก Local Storage\r\n  const username = localStorage.getItem(\"username\");\r\n\r\n  const fetchStudentName = async (username) => {\r\n    try {\r\n      if (username && username.startsWith('s')) {\r\n        // ตัด 's' ข้างหน้าออก\r\n        const studentUsername = username.slice(1);\r\n\r\n        // เรียก API เพื่อดึงข้อมูลนักเรียนทั้งหมด\r\n        const response = await axios.get(`http://localhost:9999/students`);\r\n\r\n        if (response.data && Array.isArray(response.data)) {\r\n          // หา student ที่มี S_id ตรงกับ studentUsername\r\n          const student = response.data.find(s => s.S_id === studentUsername);\r\n\r\n          if (student) {\r\n            setStudentName(student.S_name); // ตั้งค่า studentName เป็น S_name ที่ได้จาก API\r\n          } else {\r\n            console.error('Student with matching S_id not found');\r\n          }\r\n        } else {\r\n          console.error('Invalid response data format');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching student name:', error);\r\n    }\r\n  };\r\n\r\n  // เรียกฟังก์ชัน fetchStudentName เมื่อ component โหลด\r\n  useEffect(() => {\r\n    if (username) {\r\n      fetchStudentName(username);\r\n    }\r\n  }, [username]);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const prevOpen = useRef(open);\r\n  useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  const handleLogout = async () => {\r\n    const username = localStorage.getItem(\"username\");\r\n  \r\n    if (username && username.startsWith('s')) {\r\n      try {\r\n        // เรียก API เพื่ออัปเดตสถานะ S_status ให้เป็น false\r\n        await axios.put(`http://localhost:9999/students/${username.slice(1)}/status`, {\r\n          S_status: false,\r\n        });\r\n      } catch (error) {\r\n        console.error('Error updating student status:', error);\r\n      }\r\n    }\r\n  \r\n    // เปลี่ยนเส้นทางไปที่หน้า logout\r\n    window.location.href = '/free';\r\n    console.log('Logout');\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    const checkStatus = async () => {\r\n      const username = localStorage.getItem(\"username\");\r\n  \r\n      if (username ) {\r\n        try {\r\n          // ดึงข้อมูลของนักเรียนตาม username\r\n          const response = await axios.get(`http://localhost:9999/students/${username.slice(1)}`);\r\n          const student = response.data;\r\n  \r\n          // ตรวจสอบสถานะ ถ้า S_status เป็น false ให้ทำการ logout\r\n          if (student && student.S_status === false) {\r\n            window.location.href = '/free';\r\n          }\r\n        } catch (error) {\r\n          console.error('Error checking student status:', error);\r\n        }\r\n      }\r\n    };\r\n  \r\n    checkStatus();\r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n      <Chip\r\n        sx={{\r\n          height: '48px',\r\n          alignItems: 'center',\r\n          borderRadius: '27px',\r\n          transition: 'all .2s ease-in-out',\r\n          borderColor: theme.palette.primary.light,\r\n          backgroundColor: theme.palette.primary.light,\r\n          '&[aria-controls=\"menu-list-grow\"], &:hover': {\r\n            borderColor: theme.palette.primary.main,\r\n            background: `${theme.palette.primary.main}!important`,\r\n            color: theme.palette.primary.light,\r\n            '& svg': {\r\n              stroke: theme.palette.primary.light\r\n            }\r\n          },\r\n          '& .MuiChip-label': {\r\n            lineHeight: 0\r\n          }\r\n        }}\r\n        icon={\r\n          <Avatar\r\n            src={User1}\r\n            sx={{\r\n              ...theme.typography.mediumAvatar,\r\n              margin: '8px 0 8px 8px !important',\r\n              cursor: 'pointer'\r\n            }}\r\n            ref={anchorRef}\r\n            aria-controls={open ? 'menu-list-grow' : undefined}\r\n            aria-haspopup=\"true\"\r\n            color=\"inherit\"\r\n          />\r\n        }\r\n        label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\r\n        variant=\"outlined\"\r\n        ref={anchorRef}\r\n        aria-controls={open ? 'menu-list-grow' : undefined}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleToggle}\r\n        color=\"primary\"\r\n      />\r\n      <Popper\r\n        placement=\"bottom-end\"\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n        popperOptions={{\r\n          modifiers: [\r\n            {\r\n              name: 'offset',\r\n              options: {\r\n                offset: [0, 14]\r\n              }\r\n            }\r\n          ]\r\n        }}\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Transitions in={open} {...TransitionProps}>\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\r\n                  <Box sx={{ p: 2 }}>\r\n                    <Stack>\r\n                      <Stack direction=\"row\" spacing={0.5} alignItems=\"center\">\r\n                        <Typography variant=\"h4\">สวัสดี</Typography>\r\n                        <Typography component=\"span\" variant=\"h4\" sx={{ fontWeight: 400 }}>\r\n                          {studentName} {/* แสดงชื่อของนักเรียนที่ดึงมาจาก API */}\r\n                        </Typography>\r\n                      </Stack>\r\n                    </Stack>\r\n                    <ListItemButton\r\n                      sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n                      selected={selectedIndex === 4}\r\n                      onClick={handleLogout}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <IconLogout stroke={1.5} size=\"1.3rem\" />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\r\n                    </ListItemButton>\r\n                  </Box>\r\n                </MainCard>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Transitions >\r\n        )}\r\n      </Popper >\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileSection;"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}