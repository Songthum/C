{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\create-react-app\\\\src\\\\views\\\\utilities\\\\InputScoreCSB01.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Button, Paper, Grid, Table, TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Dialog, DialogTitle, DialogContent, DialogActions, Typography } from '@mui/material';\n// import axios from 'axios';\n// import { gridSpacing } from 'store/constant';\n\n// function InputScoreCSB01() {\n//   const [projects, setProjects] = useState([]);\n//   const [examResults, setExamResults] = useState([]);\n//   const [open, setOpen] = useState(false);\n//   const [selectedProject, setSelectedProject] = useState(null);\n//   const [openDialog, setOpenDialog] = useState(false);\n//   const initialData = [\n//     { id: 1, name: 'การวิเคราะห์ปัญหา(Problem Analysis)', description: ['1. มีการระบุที่มาของปัญหา', '2. มีการนำเสนอข้อมูลทางสถิติหรือหลักฐานเพื่อสนับสนุนความสำคัญของปัญหา', '3. มีอ้างอิงแหล่งข้อมูลที่น่าเชื่อถือ'], score: '' },\n//     { id: 2, name: 'แนวคิด/ แนวทางของระบบ(Solution)', description: ['1. มีความสามารถแก้ปัญหาได้แท้จริง ตรงเป้า', '2. มีวิธีการที่นำเสนอที่มีประสิทธิภาพ'], score: '' },\n//     { id: 3, name: 'ขอบเขตและปริมาณงาน(Scope)', description: ['1. มีลักษณะและปริมาณงานเหมาะสมสำหรับปริญญานิพนธ์', '2. มีความเหมาะสมตามกรอบเวลา'], score: '' },\n//     { id: 4, name: 'ต้นแบบระบบ(System Prototype)', description: ['มีการนำเสนอต้นแบบระบบด้วยเครื่องมือที่มีความเหมาะสม เช่น Mockup, wireframe, story board และ system architecture'], score: '' },\n//     { id: 5, name: 'ลักษณะของกลุ่มผู้ใช้งาน(Target market)', description: ['1. มีการกำหนดเป้าหมายสำหรับการใช้งานระบบอย่างชัดเจน', '2. มีการศึกษาลักษณะกลุ่มเป้าหมาย', '3. มีการศึกษาผลกระทบที่คาดว่าจะเกิดต่อกลุ่มเป้าหมาย'], score: '' },\n//     { id: 6, name: 'การวิเคราะห์การตลาด (Market analysis)', description: ['1. มีการนำเสนอระบบที่ใกล้เคียง/ที่เกี่ยวข้องอย่างน้อย 2 ระบบ', '2. มีการระบุข้อจำกัดของระบบที่ใกล้เคียงหรือเกี่ยวข้อง', '3. มีการระบุความแตกต่างหรือจุดเด่นของระบบที่นำเสนอ'], score: '' },\n//     { id: 7, name: 'การศึกษาความเป็นไปได้ (Feasibility study)', description: ['1. มีการนำเสนอการศึกษาเทคนิคที่เกี่ยวข้องเบื้องต้น ', '2. มีการศึกษาข้อจำกัดของอุปกรณ์/ระบบที่เกี่ยวข้อง'], score: '' },\n//     { id: 8, name: 'ผลการประเมิน', score: '' },\n//   ];\n\n//   const [Data, setData] = useState(initialData);\n//   const [allChecked, setAllChecked] = useState(false);\n\n//   useEffect(() => {\n//     const fetchProjects = async () => {\n\n//     };\n\n//     fetchProjects();\n//   }, []);  \n\n//   useEffect(() => {\n//     updateFinalScore();\n//     checkAllChecked();\n//   }, [Data]);\n\n//   const handleDonNotGoAny = () => {\n//     const updatedData = projects.map(project => ({ ...project, isRed: true, isDisabled: true }));\n//     setProjects(updatedData);\n//   };\n\n//   const handleLinkClick = (index) => {\n//     setSelectedProject(projects[index]);\n//     setOpen(true);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//     resetCheckboxData(); // Reset checkbox values when closing the dialog\n//   };\n\n//   const handleDisableRow = (index) => {\n//     const updatedProjects = projects.map((project, i) =>\n//       i === index ? { ...project, isDisabled: true } : project\n//     );\n//     setProjects(updatedProjects);\n//   };\n\n//   const handleRedRow = (index) => {\n//     const updatedProjects = projects.map((project, i) =>\n//       i === index ? { ...project, isRed: true } : project\n//     );\n//     setProjects(updatedProjects);\n//   };\n\n//   const handleCheckboxChange = (id, type) => {\n//     setData(prevData =>\n//       prevData.map(item =>\n//         item.id === id\n//           ? { ...item, score: type === 'yes' ? 'ผ่าน' : 'ไม่ผ่าน' }\n//           : item\n//       )\n//     );\n//   };\n\n//   const updateFinalScore = () => {\n//     const countPass = Data\n//       .filter(item => item.id >= 1 && item.id <= 7)\n//       .filter(item => item.score === 'ผ่าน').length;\n\n//     const countFail = Data\n//       .filter(item => item.id >= 1 && item.id <= 7)\n//       .filter(item => item.score === 'ไม่ผ่าน').length;\n\n//     if (countFail >= 4) {\n//       setData(prevData =>\n//         prevData.map(item =>\n//           item.id === 8\n//             ? { ...item, score: 'ไม่ผ่านการประเมินหัวข้อ' }\n//             : item\n//         )\n//       );\n//     } else if (countPass >= 4) {\n//       setData(prevData =>\n//         prevData.map(item =>\n//           item.id === 8\n//             ? { ...item, score: 'ผ่านการประเมินหัวข้อ' }\n//             : item\n//         )\n//       );\n//     }\n//   };\n\n//   const checkAllChecked = () => {\n//     const allChecked = Data\n//       .filter(item => item.id >= 1 && item.id <= 7)\n//       .every(item => item.score === 'ผ่าน' || item.score === 'ไม่ผ่าน');\n//     setAllChecked(allChecked);\n//   };\n\n//   const handleSavePopup = async (e) => {\n//     if (allChecked) {\n//       e.preventDefault();\n//       try {\n//         await saveScore(); // Save the score\n//         // Remove only the selected project from the list\n//         setProjects(prevProjects => prevProjects.filter(project => project.P_id !== selectedProject.P_id));\n//         resetCheckboxData(); // Reset the form data\n//         setOpen(false); // Close the popup\n//       } catch (error) {\n//         console.error('Error saving score:', error);\n//       }\n//     } else {\n//       alert('กรุณาตรวจสอบให้ครบทุกหัวข้อก่อนทำการบันทึก');\n//     }\n//   };  \n\n//   const resetCheckboxData = () => {\n//     setData(initialData); // Reset to initial state\n//     setAllChecked(false); // Reset allChecked state\n//   };\n\n//   const saveScore = async () => {\n\n//   };\n\n//   return (\n//     <Paper style={{ padding: 16 }}>\n//       <Grid container spacing={gridSpacing}>\n//         <Grid item xs={12}>\n//           <Grid container direction=\"column\" spacing={1}>\n//             <h1>ประเมินการสอบหัวข้อโครงงานพิเศษ</h1>\n//             <Button onClick={handleDonNotGoAny} variant=\"contained\" color=\"error\">\n//               ไม่เข้าร่วมประเมินทั้งหมด\n//             </Button>\n//             <TableContainer>\n//               <Table>\n//                 <TableHead>\n//                   <TableRow>\n//                     <TableCell>ลำดับที่</TableCell>\n//                     <TableCell>ชื่อโครงงาน</TableCell>\n//                     <TableCell>ประเมินการสอบโครงงานพิเศษ</TableCell>\n//                     <TableCell>ไม่ประสงค์ลงคะแนนสอบ</TableCell>\n//                     <TableCell>ไม่เข้าประเมินการสอบ</TableCell>\n//                   </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                   {projects.map((project, index) => (\n//                     <TableRow key={project.P_id}>\n//                       <TableCell>{index + 1}</TableCell>\n//                       <TableCell>{project.P_name}</TableCell>\n//                       <TableCell>\n//                         <Button\n//                           onClick={() => handleLinkClick(index)}\n//                           variant=\"outlined\"\n//                           disabled={project.isDisabled}\n//                         >\n//                           ประเมิน\n//                         </Button>\n//                       </TableCell>\n//                       <TableCell>\n//                         <Button\n//                           onClick={() => handleDisableRow(index)}\n//                           variant=\"outlined\"\n//                           disabled={project.isDisabled || project.isRed}\n//                         >\n//                           ไม่ประสงค์ลงคะแนน\n//                         </Button>\n//                       </TableCell>\n//                       <TableCell>\n//                         <Button\n//                           onClick={() => handleRedRow(index)}\n//                           variant=\"outlined\"\n//                           disabled={project.isDisabled || project.isRed}\n//                         >\n//                           ไม่เข้าประเมิน\n//                         </Button>\n//                       </TableCell>\n//                     </TableRow>\n//                   ))}\n//                 </TableBody>\n//               </Table>\n//             </TableContainer>\n//           </Grid>\n//         </Grid>\n//       </Grid>\n\n//       {selectedProject && (\n//         <Dialog \n//           open={open} \n//           onClose={handleClose} \n//           maxWidth=\"lg\" \n//           fullWidth \n//           PaperProps={{\n//             style: {\n//               minHeight: '80vh', \n//               maxHeight: '90vh',\n//             }\n//           }}\n//         >\n//           <DialogTitle>รายละเอียดโครงงาน</DialogTitle>\n//           <DialogContent>\n//             <Typography variant=\"h3\">ชื่อโครงงาน: {selectedProject.P_name}</Typography>\n//             <Typography>นักเรียนคนที่ 1: {selectedProject.P_S1}</Typography>\n//             <Typography>นักเรียนคนที่ 2: {selectedProject.P_S2}</Typography>\n//             <Typography>ที่ปรึกษา: {selectedProject.P_T}</Typography>\n//             <h2>ตารางลงคะแนนสำหรับกรรมการสอบ</h2>\n//             <TableContainer component={Paper}>\n//               <Table>\n//                 <TableHead>\n//                   <TableRow>\n//                     <TableCell>ลำดับที่</TableCell>\n//                     <TableCell>เกณฑ์พิจารณา</TableCell>\n//                     <TableCell>คำอธิบาย</TableCell>\n//                     <TableCell>ผลการประเมิน</TableCell>\n//                   </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                   {Data.map((item, index) => (\n//                     <TableRow key={item.id}>\n//                       <TableCell>{item.id}</TableCell>\n//                       <TableCell>{item.name}</TableCell>\n//                       <TableCell>\n//                         <ul>\n//                           {(item.description || []).map((desc, idx) => (\n//                             <li key={idx}>{desc}</li>\n//                           ))}\n//                         </ul>\n//                       </TableCell>\n//                       <TableCell>\n//                         {item.id === 8 ? (\n//                           <TextField value={item.score} disabled fullWidth margin=\"none\" />\n//                         ) : (\n//                           <div>\n//                             <label htmlFor={`pass-${index}`}>\n//                               <input\n//                                 type=\"radio\"\n//                                 id={`pass-${index}`}\n//                                 checked={item.score === \"ผ่าน\"}\n//                                 onChange={() => handleCheckboxChange(item.id, \"yes\")}\n//                               />\n//                               ผ่าน\n//                             </label>\n//                             <label htmlFor={`fail-${index}`}>\n//                               <input\n//                                 type=\"radio\"\n//                                 id={`fail-${index}`}\n//                                 checked={item.score === \"ไม่ผ่าน\"}\n//                                 onChange={() => handleCheckboxChange(item.id, \"no\")}\n//                               />\n//                               ไม่ผ่าน\n//                             </label>\n//                           </div>\n//                         )}\n//                       </TableCell>\n//                     </TableRow>\n//                   ))}\n//                 </TableBody>\n//               </Table>\n//             </TableContainer>\n//           </DialogContent>\n\n//           <DialogActions>\n//             <Button onClick={handleSavePopup} color=\"primary\" disabled={!allChecked}>บันทึก</Button>\n//             <Button onClick={handleClose} color=\"primary\">ปิด</Button>\n//           </DialogActions>\n//         </Dialog>\n//       )}\n//     </Paper>\n//   );\n// }\n\n// export default InputScoreCSB01;\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Paper, Grid, Table, TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Dialog, DialogTitle, DialogContent, DialogActions, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { gridSpacing } from 'store/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputScoreCSB01() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [examResults, setExamResults] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const initialData = [{\n    id: 1,\n    name: 'การวิเคราะห์ปัญหา(Problem Analysis)',\n    description: ['1. มีการระบุที่มาของปัญหา', '2. มีการนำเสนอข้อมูลทางสถิติหรือหลักฐานเพื่อสนับสนุนความสำคัญของปัญหา', '3. มีอ้างอิงแหล่งข้อมูลที่น่าเชื่อถือ'],\n    score: ''\n  }, {\n    id: 2,\n    name: 'แนวคิด/ แนวทางของระบบ(Solution)',\n    description: ['1. มีความสามารถแก้ปัญหาได้แท้จริง ตรงเป้า', '2. มีวิธีการที่นำเสนอที่มีประสิทธิภาพ'],\n    score: ''\n  }, {\n    id: 3,\n    name: 'ขอบเขตและปริมาณงาน(Scope)',\n    description: ['1. มีลักษณะและปริมาณงานเหมาะสมสำหรับปริญญานิพนธ์', '2. มีความเหมาะสมตามกรอบเวลา'],\n    score: ''\n  }, {\n    id: 4,\n    name: 'ต้นแบบระบบ(System Prototype)',\n    description: ['มีการนำเสนอต้นแบบระบบด้วยเครื่องมือที่มีความเหมาะสม เช่น Mockup, wireframe, story board และ system architecture'],\n    score: ''\n  }, {\n    id: 5,\n    name: 'ลักษณะของกลุ่มผู้ใช้งาน(Target market)',\n    description: ['1. มีการกำหนดเป้าหมายสำหรับการใช้งานระบบอย่างชัดเจน', '2. มีการศึกษาลักษณะกลุ่มเป้าหมาย', '3. มีการศึกษาผลกระทบที่คาดว่าจะเกิดต่อกลุ่มเป้าหมาย'],\n    score: ''\n  }, {\n    id: 6,\n    name: 'การวิเคราะห์การตลาด (Market analysis)',\n    description: ['1. มีการนำเสนอระบบที่ใกล้เคียง/ที่เกี่ยวข้องอย่างน้อย 2 ระบบ', '2. มีการระบุข้อจำกัดของระบบที่ใกล้เคียงหรือเกี่ยวข้อง', '3. มีการระบุความแตกต่างหรือจุดเด่นของระบบที่นำเสนอ'],\n    score: ''\n  }, {\n    id: 7,\n    name: 'การศึกษาความเป็นไปได้ (Feasibility study)',\n    description: ['1. มีการนำเสนอการศึกษาเทคนิคที่เกี่ยวข้องเบื้องต้น ', '2. มีการศึกษาข้อจำกัดของอุปกรณ์/ระบบที่เกี่ยวข้อง'],\n    score: ''\n  }, {\n    id: 8,\n    name: 'ผลการประเมิน',\n    score: ''\n  }];\n  const [formData, setFormData] = useState({\n    Er_id: '',\n    Er_Pname: '',\n    Er_CSB01: '',\n    Er_CSB02: String,\n    Er_CSB03: String,\n    Er_CSB01_status: String,\n    Er_CSB02_status: String,\n    Er_CSB03_status: String,\n    en_name: '',\n    en_year: '',\n    en_semester: '',\n    en_note: ''\n  });\n\n  // State for subject names fetched from the database\n  const [subjectNames, setSubjectNames] = useState([]);\n  useEffect(() => {\n    const fetchSubjectNames = async () => {\n      try {\n        const response = await axios.get('http://localhost:6000/english_subjects');\n        if (response.data && Array.isArray(response.data)) {\n          setSubjectNames(response.data.map(item => item.en_name));\n        }\n      } catch (error) {\n        console.error('Error fetching subject names:', error);\n      }\n    };\n    fetchSubjectNames();\n  }, []);\n  const [Data, setData] = useState(initialData);\n  const [allChecked, setAllChecked] = useState(false);\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const response = await axios.get('http://localhost:9999/Project');\n        setProjects(response.data); // Assuming response.data is the list of projects\n      } catch (error) {\n        console.error('Error fetching projects:', error);\n      }\n    };\n    fetchProjects();\n  }, []);\n  useEffect(() => {\n    updateFinalScore();\n    checkAllChecked();\n  }, [Data]);\n  const handleDonNotGoAny = () => {\n    const updatedData = projects.map(project => ({\n      ...project,\n      isRed: true,\n      isDisabled: true\n    }));\n    setProjects(updatedData);\n  };\n  const handleLinkClick = index => {\n    setSelectedProject(projects[index]);\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    resetCheckboxData(); // Reset checkbox values when closing the dialog\n  };\n  const handleDisableRow = index => {\n    const updatedProjects = projects.map((project, i) => i === index ? {\n      ...project,\n      isDisabled: true\n    } : project);\n    setProjects(updatedProjects);\n  };\n  const handleRedRow = index => {\n    const updatedProjects = projects.map((project, i) => i === index ? {\n      ...project,\n      isRed: true\n    } : project);\n    setProjects(updatedProjects);\n  };\n  const handleCheckboxChange = (id, type) => {\n    setData(prevData => prevData.map(item => item.id === id ? {\n      ...item,\n      score: type === 'yes' ? 'ผ่าน' : 'ไม่ผ่าน'\n    } : item));\n  };\n  const updateFinalScore = () => {\n    const countPass = Data.filter(item => item.id >= 1 && item.id <= 7).filter(item => item.score === 'ผ่าน').length;\n    const countFail = Data.filter(item => item.id >= 1 && item.id <= 7).filter(item => item.score === 'ไม่ผ่าน').length;\n    if (countFail >= 4) {\n      setData(prevData => prevData.map(item => item.id === 8 ? {\n        ...item,\n        score: 'ไม่ผ่านการประเมินหัวข้อ'\n      } : item));\n    } else if (countPass >= 4) {\n      setData(prevData => prevData.map(item => item.id === 8 ? {\n        ...item,\n        score: 'ผ่านการประเมินหัวข้อ'\n      } : item));\n    }\n  };\n  const checkAllChecked = () => {\n    const allChecked = Data.filter(item => item.id >= 1 && item.id <= 7).every(item => item.score === 'ผ่าน' || item.score === 'ไม่ผ่าน');\n    setAllChecked(allChecked);\n  };\n  const handleSavePopup = async e => {\n    if (allChecked) {\n      e.preventDefault();\n      try {\n        await saveScore(); // Save the score\n        // Remove only the selected project from the list\n        setProjects(prevProjects => prevProjects.filter(project => project.P_id !== selectedProject.P_id));\n        resetCheckboxData(); // Reset the form data\n        setOpen(false); // Close the popup\n      } catch (error) {\n        console.error('Error saving score:', error);\n      }\n    } else {\n      alert('กรุณาตรวจสอบให้ครบทุกหัวข้อก่อนทำการบันทึก');\n    }\n  };\n  const resetCheckboxData = () => {\n    setData(initialData); // Reset to initial state\n    setAllChecked(false); // Reset allChecked state\n  };\n  const saveScore = async () => {\n    try {\n      var _Data$find, _Data$find2;\n      // Prepare the data to be sent to the API\n      const payload = {\n        Er_Pname: selectedProject.P_name,\n        // Project name\n        Er_CSB01: ((_Data$find = Data.find(item => item.id === 8)) === null || _Data$find === void 0 ? void 0 : _Data$find.score) || 'ไม่มีการประเมิน',\n        // Evaluation result\n        Er_CSB01_status: ((_Data$find2 = Data.find(item => item.id === 8)) === null || _Data$find2 === void 0 ? void 0 : _Data$find2.score) === 'ผ่านการประเมินหัวข้อ' ? 'ผ่าน' : 'ไม่ผ่าน' // Evaluation status\n      };\n\n      // Send a POST request to update the score\n      await axios.post('http://localhost:9999/Exam_results', payload);\n\n      // Optionally handle any additional logic here\n      console.log('Score saved successfully!');\n    } catch (error) {\n      console.error('Error saving score:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19\\u0E01\\u0E32\\u0E23\\u0E2A\\u0E2D\\u0E1A\\u0E2B\\u0E31\\u0E27\\u0E02\\u0E49\\u0E2D\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\\u0E1E\\u0E34\\u0E40\\u0E28\\u0E29\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDonNotGoAny,\n            variant: \"contained\",\n            color: \"error\",\n            children: \"\\u0E44\\u0E21\\u0E48\\u0E40\\u0E02\\u0E49\\u0E32\\u0E23\\u0E48\\u0E27\\u0E21\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19\\u0E17\\u0E31\\u0E49\\u0E07\\u0E2B\\u0E21\\u0E14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"\\u0E25\\u0E33\\u0E14\\u0E31\\u0E1A\\u0E17\\u0E35\\u0E48\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19\\u0E01\\u0E32\\u0E23\\u0E2A\\u0E2D\\u0E1A\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\\u0E1E\\u0E34\\u0E40\\u0E28\\u0E29\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"\\u0E44\\u0E21\\u0E48\\u0E1B\\u0E23\\u0E30\\u0E2A\\u0E07\\u0E04\\u0E4C\\u0E25\\u0E07\\u0E04\\u0E30\\u0E41\\u0E19\\u0E19\\u0E2A\\u0E2D\\u0E1A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"\\u0E44\\u0E21\\u0E48\\u0E40\\u0E02\\u0E49\\u0E32\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19\\u0E01\\u0E32\\u0E23\\u0E2A\\u0E2D\\u0E1A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: project.P_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => handleLinkClick(index),\n                      variant: \"outlined\",\n                      disabled: project.isDisabled,\n                      children: \"\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => handleDisableRow(index),\n                      variant: \"outlined\",\n                      disabled: project.isDisabled || project.isRed,\n                      children: \"\\u0E44\\u0E21\\u0E48\\u0E1B\\u0E23\\u0E30\\u0E2A\\u0E07\\u0E04\\u0E4C\\u0E25\\u0E07\\u0E04\\u0E30\\u0E41\\u0E19\\u0E19\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => handleRedRow(index),\n                      variant: \"outlined\",\n                      disabled: project.isDisabled || project.isRed,\n                      children: \"\\u0E44\\u0E21\\u0E48\\u0E40\\u0E02\\u0E49\\u0E32\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 523,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 23\n                  }, this)]\n                }, project.P_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), selectedProject && /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      maxWidth: \"lg\",\n      fullWidth: true,\n      PaperProps: {\n        style: {\n          minHeight: '80vh',\n          maxHeight: '90vh'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: [\"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19: \", selectedProject.P_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"\\u0E19\\u0E31\\u0E01\\u0E40\\u0E23\\u0E35\\u0E22\\u0E19\\u0E04\\u0E19\\u0E17\\u0E35\\u0E48 1: \", selectedProject.P_S1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"\\u0E19\\u0E31\\u0E01\\u0E40\\u0E23\\u0E35\\u0E22\\u0E19\\u0E04\\u0E19\\u0E17\\u0E35\\u0E48 2: \", selectedProject.P_S2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"\\u0E17\\u0E35\\u0E48\\u0E1B\\u0E23\\u0E36\\u0E01\\u0E29\\u0E32: \", selectedProject.P_T]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0E15\\u0E32\\u0E23\\u0E32\\u0E07\\u0E25\\u0E07\\u0E04\\u0E30\\u0E41\\u0E19\\u0E19\\u0E2A\\u0E33\\u0E2B\\u0E23\\u0E31\\u0E1A\\u0E01\\u0E23\\u0E23\\u0E21\\u0E01\\u0E32\\u0E23\\u0E2A\\u0E2D\\u0E1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"\\u0E25\\u0E33\\u0E14\\u0E31\\u0E1A\\u0E17\\u0E35\\u0E48\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"\\u0E40\\u0E01\\u0E13\\u0E11\\u0E4C\\u0E1E\\u0E34\\u0E08\\u0E32\\u0E23\\u0E13\\u0E32\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"\\u0E04\\u0E33\\u0E2D\\u0E18\\u0E34\\u0E1A\\u0E32\\u0E22\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"\\u0E1C\\u0E25\\u0E01\\u0E32\\u0E23\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: Data.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: item.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: (item.description || []).map((desc, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: desc\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 578,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: item.id === 8 ? /*#__PURE__*/_jsxDEV(TextField, {\n                    value: item.score,\n                    disabled: true,\n                    fullWidth: true,\n                    margin: \"none\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `pass-${index}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        id: `pass-${index}`,\n                        checked: item.score === \"ผ่าน\",\n                        onChange: () => handleCheckboxChange(item.id, \"yes\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 588,\n                        columnNumber: 31\n                      }, this), \"\\u0E1C\\u0E48\\u0E32\\u0E19\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 587,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `fail-${index}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        id: `fail-${index}`,\n                        checked: item.score === \"ไม่ผ่าน\",\n                        onChange: () => handleCheckboxChange(item.id, \"no\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 597,\n                        columnNumber: 31\n                      }, this), \"\\u0E44\\u0E21\\u0E48\\u0E1C\\u0E48\\u0E32\\u0E19\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 23\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSavePopup,\n          color: \"primary\",\n          disabled: !allChecked,\n          children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"\\u0E1B\\u0E34\\u0E14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 480,\n    columnNumber: 5\n  }, this);\n}\n_s(InputScoreCSB01, \"6pqouHqxuFQFrlQw37HhExgzcVg=\");\n_c = InputScoreCSB01;\nexport default InputScoreCSB01;\nvar _c;\n$RefreshReg$(_c, \"InputScoreCSB01\");","map":{"version":3,"names":["React","useState","useEffect","Button","Paper","Grid","Table","TextField","TableBody","TableCell","TableContainer","TableHead","TableRow","Dialog","DialogTitle","DialogContent","DialogActions","Typography","axios","gridSpacing","jsxDEV","_jsxDEV","InputScoreCSB01","_s","projects","setProjects","examResults","setExamResults","open","setOpen","selectedProject","setSelectedProject","openDialog","setOpenDialog","initialData","id","name","description","score","formData","setFormData","Er_id","Er_Pname","Er_CSB01","Er_CSB02","String","Er_CSB03","Er_CSB01_status","Er_CSB02_status","Er_CSB03_status","en_name","en_year","en_semester","en_note","subjectNames","setSubjectNames","fetchSubjectNames","response","get","data","Array","isArray","map","item","error","console","Data","setData","allChecked","setAllChecked","fetchProjects","updateFinalScore","checkAllChecked","handleDonNotGoAny","updatedData","project","isRed","isDisabled","handleLinkClick","index","handleClose","resetCheckboxData","handleDisableRow","updatedProjects","i","handleRedRow","handleCheckboxChange","type","prevData","countPass","filter","length","countFail","every","handleSavePopup","e","preventDefault","saveScore","prevProjects","P_id","alert","_Data$find","_Data$find2","payload","P_name","find","post","log","style","padding","children","container","spacing","xs","direction","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","color","disabled","onClose","maxWidth","fullWidth","PaperProps","minHeight","maxHeight","P_S1","P_S2","P_T","component","desc","idx","value","margin","htmlFor","checked","onChange","_c","$RefreshReg$"],"sources":["C:/test/create-react-app/src/views/utilities/InputScoreCSB01.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Button, Paper, Grid, Table, TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Dialog, DialogTitle, DialogContent, DialogActions, Typography } from '@mui/material';\r\n// import axios from 'axios';\r\n// import { gridSpacing } from 'store/constant';\r\n\r\n// function InputScoreCSB01() {\r\n//   const [projects, setProjects] = useState([]);\r\n//   const [examResults, setExamResults] = useState([]);\r\n//   const [open, setOpen] = useState(false);\r\n//   const [selectedProject, setSelectedProject] = useState(null);\r\n//   const [openDialog, setOpenDialog] = useState(false);\r\n//   const initialData = [\r\n//     { id: 1, name: 'การวิเคราะห์ปัญหา(Problem Analysis)', description: ['1. มีการระบุที่มาของปัญหา', '2. มีการนำเสนอข้อมูลทางสถิติหรือหลักฐานเพื่อสนับสนุนความสำคัญของปัญหา', '3. มีอ้างอิงแหล่งข้อมูลที่น่าเชื่อถือ'], score: '' },\r\n//     { id: 2, name: 'แนวคิด/ แนวทางของระบบ(Solution)', description: ['1. มีความสามารถแก้ปัญหาได้แท้จริง ตรงเป้า', '2. มีวิธีการที่นำเสนอที่มีประสิทธิภาพ'], score: '' },\r\n//     { id: 3, name: 'ขอบเขตและปริมาณงาน(Scope)', description: ['1. มีลักษณะและปริมาณงานเหมาะสมสำหรับปริญญานิพนธ์', '2. มีความเหมาะสมตามกรอบเวลา'], score: '' },\r\n//     { id: 4, name: 'ต้นแบบระบบ(System Prototype)', description: ['มีการนำเสนอต้นแบบระบบด้วยเครื่องมือที่มีความเหมาะสม เช่น Mockup, wireframe, story board และ system architecture'], score: '' },\r\n//     { id: 5, name: 'ลักษณะของกลุ่มผู้ใช้งาน(Target market)', description: ['1. มีการกำหนดเป้าหมายสำหรับการใช้งานระบบอย่างชัดเจน', '2. มีการศึกษาลักษณะกลุ่มเป้าหมาย', '3. มีการศึกษาผลกระทบที่คาดว่าจะเกิดต่อกลุ่มเป้าหมาย'], score: '' },\r\n//     { id: 6, name: 'การวิเคราะห์การตลาด (Market analysis)', description: ['1. มีการนำเสนอระบบที่ใกล้เคียง/ที่เกี่ยวข้องอย่างน้อย 2 ระบบ', '2. มีการระบุข้อจำกัดของระบบที่ใกล้เคียงหรือเกี่ยวข้อง', '3. มีการระบุความแตกต่างหรือจุดเด่นของระบบที่นำเสนอ'], score: '' },\r\n//     { id: 7, name: 'การศึกษาความเป็นไปได้ (Feasibility study)', description: ['1. มีการนำเสนอการศึกษาเทคนิคที่เกี่ยวข้องเบื้องต้น ', '2. มีการศึกษาข้อจำกัดของอุปกรณ์/ระบบที่เกี่ยวข้อง'], score: '' },\r\n//     { id: 8, name: 'ผลการประเมิน', score: '' },\r\n//   ];\r\n\r\n//   const [Data, setData] = useState(initialData);\r\n//   const [allChecked, setAllChecked] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchProjects = async () => {\r\n\r\n//     };\r\n  \r\n//     fetchProjects();\r\n//   }, []);  \r\n\r\n//   useEffect(() => {\r\n//     updateFinalScore();\r\n//     checkAllChecked();\r\n//   }, [Data]);\r\n\r\n//   const handleDonNotGoAny = () => {\r\n//     const updatedData = projects.map(project => ({ ...project, isRed: true, isDisabled: true }));\r\n//     setProjects(updatedData);\r\n//   };\r\n\r\n//   const handleLinkClick = (index) => {\r\n//     setSelectedProject(projects[index]);\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//     resetCheckboxData(); // Reset checkbox values when closing the dialog\r\n//   };\r\n\r\n//   const handleDisableRow = (index) => {\r\n//     const updatedProjects = projects.map((project, i) =>\r\n//       i === index ? { ...project, isDisabled: true } : project\r\n//     );\r\n//     setProjects(updatedProjects);\r\n//   };\r\n\r\n//   const handleRedRow = (index) => {\r\n//     const updatedProjects = projects.map((project, i) =>\r\n//       i === index ? { ...project, isRed: true } : project\r\n//     );\r\n//     setProjects(updatedProjects);\r\n//   };\r\n\r\n//   const handleCheckboxChange = (id, type) => {\r\n//     setData(prevData =>\r\n//       prevData.map(item =>\r\n//         item.id === id\r\n//           ? { ...item, score: type === 'yes' ? 'ผ่าน' : 'ไม่ผ่าน' }\r\n//           : item\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   const updateFinalScore = () => {\r\n//     const countPass = Data\r\n//       .filter(item => item.id >= 1 && item.id <= 7)\r\n//       .filter(item => item.score === 'ผ่าน').length;\r\n\r\n//     const countFail = Data\r\n//       .filter(item => item.id >= 1 && item.id <= 7)\r\n//       .filter(item => item.score === 'ไม่ผ่าน').length;\r\n\r\n//     if (countFail >= 4) {\r\n//       setData(prevData =>\r\n//         prevData.map(item =>\r\n//           item.id === 8\r\n//             ? { ...item, score: 'ไม่ผ่านการประเมินหัวข้อ' }\r\n//             : item\r\n//         )\r\n//       );\r\n//     } else if (countPass >= 4) {\r\n//       setData(prevData =>\r\n//         prevData.map(item =>\r\n//           item.id === 8\r\n//             ? { ...item, score: 'ผ่านการประเมินหัวข้อ' }\r\n//             : item\r\n//         )\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const checkAllChecked = () => {\r\n//     const allChecked = Data\r\n//       .filter(item => item.id >= 1 && item.id <= 7)\r\n//       .every(item => item.score === 'ผ่าน' || item.score === 'ไม่ผ่าน');\r\n//     setAllChecked(allChecked);\r\n//   };\r\n\r\n//   const handleSavePopup = async (e) => {\r\n//     if (allChecked) {\r\n//       e.preventDefault();\r\n//       try {\r\n//         await saveScore(); // Save the score\r\n//         // Remove only the selected project from the list\r\n//         setProjects(prevProjects => prevProjects.filter(project => project.P_id !== selectedProject.P_id));\r\n//         resetCheckboxData(); // Reset the form data\r\n//         setOpen(false); // Close the popup\r\n//       } catch (error) {\r\n//         console.error('Error saving score:', error);\r\n//       }\r\n//     } else {\r\n//       alert('กรุณาตรวจสอบให้ครบทุกหัวข้อก่อนทำการบันทึก');\r\n//     }\r\n//   };  \r\n\r\n//   const resetCheckboxData = () => {\r\n//     setData(initialData); // Reset to initial state\r\n//     setAllChecked(false); // Reset allChecked state\r\n//   };\r\n\r\n//   const saveScore = async () => {\r\n    \r\n//   };\r\n  \r\n//   return (\r\n//     <Paper style={{ padding: 16 }}>\r\n//       <Grid container spacing={gridSpacing}>\r\n//         <Grid item xs={12}>\r\n//           <Grid container direction=\"column\" spacing={1}>\r\n//             <h1>ประเมินการสอบหัวข้อโครงงานพิเศษ</h1>\r\n//             <Button onClick={handleDonNotGoAny} variant=\"contained\" color=\"error\">\r\n//               ไม่เข้าร่วมประเมินทั้งหมด\r\n//             </Button>\r\n//             <TableContainer>\r\n//               <Table>\r\n//                 <TableHead>\r\n//                   <TableRow>\r\n//                     <TableCell>ลำดับที่</TableCell>\r\n//                     <TableCell>ชื่อโครงงาน</TableCell>\r\n//                     <TableCell>ประเมินการสอบโครงงานพิเศษ</TableCell>\r\n//                     <TableCell>ไม่ประสงค์ลงคะแนนสอบ</TableCell>\r\n//                     <TableCell>ไม่เข้าประเมินการสอบ</TableCell>\r\n//                   </TableRow>\r\n//                 </TableHead>\r\n//                 <TableBody>\r\n//                   {projects.map((project, index) => (\r\n//                     <TableRow key={project.P_id}>\r\n//                       <TableCell>{index + 1}</TableCell>\r\n//                       <TableCell>{project.P_name}</TableCell>\r\n//                       <TableCell>\r\n//                         <Button\r\n//                           onClick={() => handleLinkClick(index)}\r\n//                           variant=\"outlined\"\r\n//                           disabled={project.isDisabled}\r\n//                         >\r\n//                           ประเมิน\r\n//                         </Button>\r\n//                       </TableCell>\r\n//                       <TableCell>\r\n//                         <Button\r\n//                           onClick={() => handleDisableRow(index)}\r\n//                           variant=\"outlined\"\r\n//                           disabled={project.isDisabled || project.isRed}\r\n//                         >\r\n//                           ไม่ประสงค์ลงคะแนน\r\n//                         </Button>\r\n//                       </TableCell>\r\n//                       <TableCell>\r\n//                         <Button\r\n//                           onClick={() => handleRedRow(index)}\r\n//                           variant=\"outlined\"\r\n//                           disabled={project.isDisabled || project.isRed}\r\n//                         >\r\n//                           ไม่เข้าประเมิน\r\n//                         </Button>\r\n//                       </TableCell>\r\n//                     </TableRow>\r\n//                   ))}\r\n//                 </TableBody>\r\n//               </Table>\r\n//             </TableContainer>\r\n//           </Grid>\r\n//         </Grid>\r\n//       </Grid>\r\n\r\n//       {selectedProject && (\r\n//         <Dialog \r\n//           open={open} \r\n//           onClose={handleClose} \r\n//           maxWidth=\"lg\" \r\n//           fullWidth \r\n//           PaperProps={{\r\n//             style: {\r\n//               minHeight: '80vh', \r\n//               maxHeight: '90vh',\r\n//             }\r\n//           }}\r\n//         >\r\n//           <DialogTitle>รายละเอียดโครงงาน</DialogTitle>\r\n//           <DialogContent>\r\n//             <Typography variant=\"h3\">ชื่อโครงงาน: {selectedProject.P_name}</Typography>\r\n//             <Typography>นักเรียนคนที่ 1: {selectedProject.P_S1}</Typography>\r\n//             <Typography>นักเรียนคนที่ 2: {selectedProject.P_S2}</Typography>\r\n//             <Typography>ที่ปรึกษา: {selectedProject.P_T}</Typography>\r\n//             <h2>ตารางลงคะแนนสำหรับกรรมการสอบ</h2>\r\n//             <TableContainer component={Paper}>\r\n//               <Table>\r\n//                 <TableHead>\r\n//                   <TableRow>\r\n//                     <TableCell>ลำดับที่</TableCell>\r\n//                     <TableCell>เกณฑ์พิจารณา</TableCell>\r\n//                     <TableCell>คำอธิบาย</TableCell>\r\n//                     <TableCell>ผลการประเมิน</TableCell>\r\n//                   </TableRow>\r\n//                 </TableHead>\r\n//                 <TableBody>\r\n//                   {Data.map((item, index) => (\r\n//                     <TableRow key={item.id}>\r\n//                       <TableCell>{item.id}</TableCell>\r\n//                       <TableCell>{item.name}</TableCell>\r\n//                       <TableCell>\r\n//                         <ul>\r\n//                           {(item.description || []).map((desc, idx) => (\r\n//                             <li key={idx}>{desc}</li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       </TableCell>\r\n//                       <TableCell>\r\n//                         {item.id === 8 ? (\r\n//                           <TextField value={item.score} disabled fullWidth margin=\"none\" />\r\n//                         ) : (\r\n//                           <div>\r\n//                             <label htmlFor={`pass-${index}`}>\r\n//                               <input\r\n//                                 type=\"radio\"\r\n//                                 id={`pass-${index}`}\r\n//                                 checked={item.score === \"ผ่าน\"}\r\n//                                 onChange={() => handleCheckboxChange(item.id, \"yes\")}\r\n//                               />\r\n//                               ผ่าน\r\n//                             </label>\r\n//                             <label htmlFor={`fail-${index}`}>\r\n//                               <input\r\n//                                 type=\"radio\"\r\n//                                 id={`fail-${index}`}\r\n//                                 checked={item.score === \"ไม่ผ่าน\"}\r\n//                                 onChange={() => handleCheckboxChange(item.id, \"no\")}\r\n//                               />\r\n//                               ไม่ผ่าน\r\n//                             </label>\r\n//                           </div>\r\n//                         )}\r\n//                       </TableCell>\r\n//                     </TableRow>\r\n//                   ))}\r\n//                 </TableBody>\r\n//               </Table>\r\n//             </TableContainer>\r\n//           </DialogContent>\r\n\r\n//           <DialogActions>\r\n//             <Button onClick={handleSavePopup} color=\"primary\" disabled={!allChecked}>บันทึก</Button>\r\n//             <Button onClick={handleClose} color=\"primary\">ปิด</Button>\r\n//           </DialogActions>\r\n//         </Dialog>\r\n//       )}\r\n//     </Paper>\r\n//   );\r\n// }\r\n\r\n// export default InputScoreCSB01;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Paper, Grid, Table, TextField, TableBody, TableCell, TableContainer, TableHead, TableRow, Dialog, DialogTitle, DialogContent, DialogActions, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nfunction InputScoreCSB01() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [examResults, setExamResults] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const initialData = [\r\n    { id: 1, name: 'การวิเคราะห์ปัญหา(Problem Analysis)', description: ['1. มีการระบุที่มาของปัญหา', '2. มีการนำเสนอข้อมูลทางสถิติหรือหลักฐานเพื่อสนับสนุนความสำคัญของปัญหา', '3. มีอ้างอิงแหล่งข้อมูลที่น่าเชื่อถือ'], score: '' },\r\n    { id: 2, name: 'แนวคิด/ แนวทางของระบบ(Solution)', description: ['1. มีความสามารถแก้ปัญหาได้แท้จริง ตรงเป้า', '2. มีวิธีการที่นำเสนอที่มีประสิทธิภาพ'], score: '' },\r\n    { id: 3, name: 'ขอบเขตและปริมาณงาน(Scope)', description: ['1. มีลักษณะและปริมาณงานเหมาะสมสำหรับปริญญานิพนธ์', '2. มีความเหมาะสมตามกรอบเวลา'], score: '' },\r\n    { id: 4, name: 'ต้นแบบระบบ(System Prototype)', description: ['มีการนำเสนอต้นแบบระบบด้วยเครื่องมือที่มีความเหมาะสม เช่น Mockup, wireframe, story board และ system architecture'], score: '' },\r\n    { id: 5, name: 'ลักษณะของกลุ่มผู้ใช้งาน(Target market)', description: ['1. มีการกำหนดเป้าหมายสำหรับการใช้งานระบบอย่างชัดเจน', '2. มีการศึกษาลักษณะกลุ่มเป้าหมาย', '3. มีการศึกษาผลกระทบที่คาดว่าจะเกิดต่อกลุ่มเป้าหมาย'], score: '' },\r\n    { id: 6, name: 'การวิเคราะห์การตลาด (Market analysis)', description: ['1. มีการนำเสนอระบบที่ใกล้เคียง/ที่เกี่ยวข้องอย่างน้อย 2 ระบบ', '2. มีการระบุข้อจำกัดของระบบที่ใกล้เคียงหรือเกี่ยวข้อง', '3. มีการระบุความแตกต่างหรือจุดเด่นของระบบที่นำเสนอ'], score: '' },\r\n    { id: 7, name: 'การศึกษาความเป็นไปได้ (Feasibility study)', description: ['1. มีการนำเสนอการศึกษาเทคนิคที่เกี่ยวข้องเบื้องต้น ', '2. มีการศึกษาข้อจำกัดของอุปกรณ์/ระบบที่เกี่ยวข้อง'], score: '' },\r\n    { id: 8, name: 'ผลการประเมิน', score: '' },\r\n  ];\r\n  const [formData, setFormData] = useState({\r\n    Er_id: '',\r\n    Er_Pname: '',\r\n    Er_CSB01: '',\r\n    Er_CSB02: String,\r\n    Er_CSB03: String,\r\n    Er_CSB01_status: String,\r\n    Er_CSB02_status: String,\r\n    Er_CSB03_status: String,\r\n    en_name: '',\r\n    en_year: '',\r\n    en_semester: '',\r\n    en_note: ''\r\n});\r\n\r\n// State for subject names fetched from the database\r\nconst [subjectNames, setSubjectNames] = useState([]);\r\n\r\nuseEffect(() => {\r\n    const fetchSubjectNames = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:6000/english_subjects');\r\n            if (response.data && Array.isArray(response.data)) {\r\n                setSubjectNames(response.data.map(item => item.en_name));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching subject names:', error);\r\n        }\r\n    };\r\n\r\n    fetchSubjectNames();\r\n}, []);\r\n\r\n\r\n  const [Data, setData] = useState(initialData);\r\n  const [allChecked, setAllChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:9999/Project');\r\n        setProjects(response.data); // Assuming response.data is the list of projects\r\n      } catch (error) {\r\n        console.error('Error fetching projects:', error);\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n  }, []);  \r\n\r\n  useEffect(() => {\r\n    updateFinalScore();\r\n    checkAllChecked();\r\n  }, [Data]);\r\n\r\n  const handleDonNotGoAny = () => {\r\n    const updatedData = projects.map(project => ({ ...project, isRed: true, isDisabled: true }));\r\n    setProjects(updatedData);\r\n  };\r\n\r\n  const handleLinkClick = (index) => {\r\n    setSelectedProject(projects[index]);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    resetCheckboxData(); // Reset checkbox values when closing the dialog\r\n  };\r\n\r\n  const handleDisableRow = (index) => {\r\n    const updatedProjects = projects.map((project, i) =>\r\n      i === index ? { ...project, isDisabled: true } : project\r\n    );\r\n    setProjects(updatedProjects);\r\n  };\r\n\r\n  const handleRedRow = (index) => {\r\n    const updatedProjects = projects.map((project, i) =>\r\n      i === index ? { ...project, isRed: true } : project\r\n    );\r\n    setProjects(updatedProjects);\r\n  };\r\n\r\n  const handleCheckboxChange = (id, type) => {\r\n    setData(prevData =>\r\n      prevData.map(item =>\r\n        item.id === id\r\n          ? { ...item, score: type === 'yes' ? 'ผ่าน' : 'ไม่ผ่าน' }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateFinalScore = () => {\r\n    const countPass = Data\r\n      .filter(item => item.id >= 1 && item.id <= 7)\r\n      .filter(item => item.score === 'ผ่าน').length;\r\n\r\n    const countFail = Data\r\n      .filter(item => item.id >= 1 && item.id <= 7)\r\n      .filter(item => item.score === 'ไม่ผ่าน').length;\r\n\r\n    if (countFail >= 4) {\r\n      setData(prevData =>\r\n        prevData.map(item =>\r\n          item.id === 8\r\n            ? { ...item, score: 'ไม่ผ่านการประเมินหัวข้อ' }\r\n            : item\r\n        )\r\n      );\r\n    } else if (countPass >= 4) {\r\n      setData(prevData =>\r\n        prevData.map(item =>\r\n          item.id === 8\r\n            ? { ...item, score: 'ผ่านการประเมินหัวข้อ' }\r\n            : item\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const checkAllChecked = () => {\r\n    const allChecked = Data\r\n      .filter(item => item.id >= 1 && item.id <= 7)\r\n      .every(item => item.score === 'ผ่าน' || item.score === 'ไม่ผ่าน');\r\n    setAllChecked(allChecked);\r\n  };\r\n\r\n  const handleSavePopup = async (e) => {\r\n    if (allChecked) {\r\n      e.preventDefault();\r\n      try {\r\n        await saveScore(); // Save the score\r\n        // Remove only the selected project from the list\r\n        setProjects(prevProjects => prevProjects.filter(project => project.P_id !== selectedProject.P_id));\r\n        resetCheckboxData(); // Reset the form data\r\n        setOpen(false); // Close the popup\r\n      } catch (error) {\r\n        console.error('Error saving score:', error);\r\n      }\r\n    } else {\r\n      alert('กรุณาตรวจสอบให้ครบทุกหัวข้อก่อนทำการบันทึก');\r\n    }\r\n  };\r\n  \r\n\r\n  const resetCheckboxData = () => {\r\n    setData(initialData); // Reset to initial state\r\n    setAllChecked(false); // Reset allChecked state\r\n  };\r\n\r\n  const saveScore = async () => {\r\n    try {\r\n      // Prepare the data to be sent to the API\r\n      const payload = {\r\n        Er_Pname: selectedProject.P_name, // Project name\r\n        Er_CSB01: Data.find(item => item.id === 8)?.score || 'ไม่มีการประเมิน', // Evaluation result\r\n        Er_CSB01_status: Data.find(item => item.id === 8)?.score === 'ผ่านการประเมินหัวข้อ' ? 'ผ่าน' : 'ไม่ผ่าน' // Evaluation status\r\n      };\r\n    \r\n      // Send a POST request to update the score\r\n      await axios.post('http://localhost:9999/Exam_results', payload);\r\n    \r\n      // Optionally handle any additional logic here\r\n      console.log('Score saved successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving score:', error);\r\n    }\r\n  };  \r\n  \r\n  return (\r\n    <Paper style={{ padding: 16 }}>\r\n      <Grid container spacing={gridSpacing}>\r\n        <Grid item xs={12}>\r\n          <Grid container direction=\"column\" spacing={1}>\r\n            <h1>ประเมินการสอบหัวข้อโครงงานพิเศษ</h1>\r\n            <Button onClick={handleDonNotGoAny} variant=\"contained\" color=\"error\">\r\n              ไม่เข้าร่วมประเมินทั้งหมด\r\n            </Button>\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>ลำดับที่</TableCell>\r\n                    <TableCell>ชื่อโครงงาน</TableCell>\r\n                    <TableCell>ประเมินการสอบโครงงานพิเศษ</TableCell>\r\n                    <TableCell>ไม่ประสงค์ลงคะแนนสอบ</TableCell>\r\n                    <TableCell>ไม่เข้าประเมินการสอบ</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {projects.map((project, index) => (\r\n                    <TableRow key={project.P_id}>\r\n                      <TableCell>{index + 1}</TableCell>\r\n                      <TableCell>{project.P_name}</TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          onClick={() => handleLinkClick(index)}\r\n                          variant=\"outlined\"\r\n                          disabled={project.isDisabled}\r\n                        >\r\n                          ประเมิน\r\n                        </Button>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          onClick={() => handleDisableRow(index)}\r\n                          variant=\"outlined\"\r\n                          disabled={project.isDisabled || project.isRed}\r\n                        >\r\n                          ไม่ประสงค์ลงคะแนน\r\n                        </Button>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          onClick={() => handleRedRow(index)}\r\n                          variant=\"outlined\"\r\n                          disabled={project.isDisabled || project.isRed}\r\n                        >\r\n                          ไม่เข้าประเมิน\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {selectedProject && (\r\n        <Dialog \r\n          open={open} \r\n          onClose={handleClose} \r\n          maxWidth=\"lg\" \r\n          fullWidth \r\n          PaperProps={{\r\n            style: {\r\n              minHeight: '80vh', \r\n              maxHeight: '90vh',\r\n            }\r\n          }}\r\n        >\r\n          <DialogTitle>รายละเอียดโครงงาน</DialogTitle>\r\n          <DialogContent>\r\n            <Typography variant=\"h3\">ชื่อโครงงาน: {selectedProject.P_name}</Typography>\r\n            <Typography>นักเรียนคนที่ 1: {selectedProject.P_S1}</Typography>\r\n            <Typography>นักเรียนคนที่ 2: {selectedProject.P_S2}</Typography>\r\n            <Typography>ที่ปรึกษา: {selectedProject.P_T}</Typography>\r\n            <h2>ตารางลงคะแนนสำหรับกรรมการสอบ</h2>\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>ลำดับที่</TableCell>\r\n                    <TableCell>เกณฑ์พิจารณา</TableCell>\r\n                    <TableCell>คำอธิบาย</TableCell>\r\n                    <TableCell>ผลการประเมิน</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Data.map((item, index) => (\r\n                    <TableRow key={item.id}>\r\n                      <TableCell>{item.id}</TableCell>\r\n                      <TableCell>{item.name}</TableCell>\r\n                      <TableCell>\r\n                        <ul>\r\n                          {(item.description || []).map((desc, idx) => (\r\n                            <li key={idx}>{desc}</li>\r\n                          ))}\r\n                        </ul>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {item.id === 8 ? (\r\n                          <TextField value={item.score} disabled fullWidth margin=\"none\" />\r\n                        ) : (\r\n                          <div>\r\n                            <label htmlFor={`pass-${index}`}>\r\n                              <input\r\n                                type=\"radio\"\r\n                                id={`pass-${index}`}\r\n                                checked={item.score === \"ผ่าน\"}\r\n                                onChange={() => handleCheckboxChange(item.id, \"yes\")}\r\n                              />\r\n                              ผ่าน\r\n                            </label>\r\n                            <label htmlFor={`fail-${index}`}>\r\n                              <input\r\n                                type=\"radio\"\r\n                                id={`fail-${index}`}\r\n                                checked={item.score === \"ไม่ผ่าน\"}\r\n                                onChange={() => handleCheckboxChange(item.id, \"no\")}\r\n                              />\r\n                              ไม่ผ่าน\r\n                            </label>\r\n                          </div>\r\n                        )}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={handleSavePopup} color=\"primary\" disabled={!allChecked}>บันทึก</Button>\r\n            <Button onClick={handleClose} color=\"primary\">ปิด</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default InputScoreCSB01;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,aAAa,EAAEC,UAAU,QAAQ,eAAe;AAC/L,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2B,IAAI,EAAEC,OAAO,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAAC6B,eAAe,EAAEC,kBAAkB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC+B,UAAU,EAAEC,aAAa,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMiC,WAAW,GAAG,CAClB;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,qCAAqC;IAAEC,WAAW,EAAE,CAAC,2BAA2B,EAAE,uEAAuE,EAAE,uCAAuC,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/N;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iCAAiC;IAAEC,WAAW,EAAE,CAAC,2CAA2C,EAAE,uCAAuC,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,EAClK;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,2BAA2B;IAAEC,WAAW,EAAE,CAAC,kDAAkD,EAAE,6BAA6B,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,EACzJ;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,8BAA8B;IAAEC,WAAW,EAAE,CAAC,iHAAiH,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC5L;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,wCAAwC;IAAEC,WAAW,EAAE,CAAC,qDAAqD,EAAE,kCAAkC,EAAE,qDAAqD,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,EACrO;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,uCAAuC;IAAEC,WAAW,EAAE,CAAC,8DAA8D,EAAE,uDAAuD,EAAE,oDAAoD,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjQ;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,2CAA2C;IAAEC,WAAW,EAAE,CAAC,qDAAqD,EAAE,mDAAmD,CAAC;IAAEC,KAAK,EAAE;EAAG,CAAC,EAClM;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,cAAc;IAAEE,KAAK,EAAE;EAAG,CAAC,CAC3C;EACD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvC,QAAQ,CAAC;IACvCwC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAEC,MAAM;IAChBC,QAAQ,EAAED,MAAM;IAChBE,eAAe,EAAEF,MAAM;IACvBG,eAAe,EAAEH,MAAM;IACvBI,eAAe,EAAEJ,MAAM;IACvBK,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE;EACb,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMsD,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMvC,KAAK,CAACwC,GAAG,CAAC,wCAAwC,CAAC;QAC1E,IAAID,QAAQ,CAACE,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACE,IAAI,CAAC,EAAE;UAC/CJ,eAAe,CAACE,QAAQ,CAACE,IAAI,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACb,OAAO,CAAC,CAAC;QAC5D;MACJ,CAAC,CAAC,OAAOc,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACzD;IACJ,CAAC;IAEDR,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAGJ,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGlE,QAAQ,CAACiC,WAAW,CAAC;EAC7C,MAAM,CAACkC,UAAU,EAAEC,aAAa,CAAC,GAAGpE,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMoE,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMb,QAAQ,GAAG,MAAMvC,KAAK,CAACwC,GAAG,CAAC,+BAA+B,CAAC;QACjEjC,WAAW,CAACgC,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDM,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAENpE,SAAS,CAAC,MAAM;IACdqE,gBAAgB,CAAC,CAAC;IAClBC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,WAAW,GAAGlD,QAAQ,CAACsC,GAAG,CAACa,OAAO,KAAK;MAAE,GAAGA,OAAO;MAAEC,KAAK,EAAE,IAAI;MAAEC,UAAU,EAAE;IAAK,CAAC,CAAC,CAAC;IAC5FpD,WAAW,CAACiD,WAAW,CAAC;EAC1B,CAAC;EAED,MAAMI,eAAe,GAAIC,KAAK,IAAK;IACjChD,kBAAkB,CAACP,QAAQ,CAACuD,KAAK,CAAC,CAAC;IACnClD,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMmD,WAAW,GAAGA,CAAA,KAAM;IACxBnD,OAAO,CAAC,KAAK,CAAC;IACdoD,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAMC,gBAAgB,GAAIH,KAAK,IAAK;IAClC,MAAMI,eAAe,GAAG3D,QAAQ,CAACsC,GAAG,CAAC,CAACa,OAAO,EAAES,CAAC,KAC9CA,CAAC,KAAKL,KAAK,GAAG;MAAE,GAAGJ,OAAO;MAAEE,UAAU,EAAE;IAAK,CAAC,GAAGF,OACnD,CAAC;IACDlD,WAAW,CAAC0D,eAAe,CAAC;EAC9B,CAAC;EAED,MAAME,YAAY,GAAIN,KAAK,IAAK;IAC9B,MAAMI,eAAe,GAAG3D,QAAQ,CAACsC,GAAG,CAAC,CAACa,OAAO,EAAES,CAAC,KAC9CA,CAAC,KAAKL,KAAK,GAAG;MAAE,GAAGJ,OAAO;MAAEC,KAAK,EAAE;IAAK,CAAC,GAAGD,OAC9C,CAAC;IACDlD,WAAW,CAAC0D,eAAe,CAAC;EAC9B,CAAC;EAED,MAAMG,oBAAoB,GAAGA,CAACnD,EAAE,EAAEoD,IAAI,KAAK;IACzCpB,OAAO,CAACqB,QAAQ,IACdA,QAAQ,CAAC1B,GAAG,CAACC,IAAI,IACfA,IAAI,CAAC5B,EAAE,KAAKA,EAAE,GACV;MAAE,GAAG4B,IAAI;MAAEzB,KAAK,EAAEiD,IAAI,KAAK,KAAK,GAAG,MAAM,GAAG;IAAU,CAAC,GACvDxB,IACN,CACF,CAAC;EACH,CAAC;EAED,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMkB,SAAS,GAAGvB,IAAI,CACnBwB,MAAM,CAAC3B,IAAI,IAAIA,IAAI,CAAC5B,EAAE,IAAI,CAAC,IAAI4B,IAAI,CAAC5B,EAAE,IAAI,CAAC,CAAC,CAC5CuD,MAAM,CAAC3B,IAAI,IAAIA,IAAI,CAACzB,KAAK,KAAK,MAAM,CAAC,CAACqD,MAAM;IAE/C,MAAMC,SAAS,GAAG1B,IAAI,CACnBwB,MAAM,CAAC3B,IAAI,IAAIA,IAAI,CAAC5B,EAAE,IAAI,CAAC,IAAI4B,IAAI,CAAC5B,EAAE,IAAI,CAAC,CAAC,CAC5CuD,MAAM,CAAC3B,IAAI,IAAIA,IAAI,CAACzB,KAAK,KAAK,SAAS,CAAC,CAACqD,MAAM;IAElD,IAAIC,SAAS,IAAI,CAAC,EAAE;MAClBzB,OAAO,CAACqB,QAAQ,IACdA,QAAQ,CAAC1B,GAAG,CAACC,IAAI,IACfA,IAAI,CAAC5B,EAAE,KAAK,CAAC,GACT;QAAE,GAAG4B,IAAI;QAAEzB,KAAK,EAAE;MAA0B,CAAC,GAC7CyB,IACN,CACF,CAAC;IACH,CAAC,MAAM,IAAI0B,SAAS,IAAI,CAAC,EAAE;MACzBtB,OAAO,CAACqB,QAAQ,IACdA,QAAQ,CAAC1B,GAAG,CAACC,IAAI,IACfA,IAAI,CAAC5B,EAAE,KAAK,CAAC,GACT;QAAE,GAAG4B,IAAI;QAAEzB,KAAK,EAAE;MAAuB,CAAC,GAC1CyB,IACN,CACF,CAAC;IACH;EACF,CAAC;EAED,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMJ,UAAU,GAAGF,IAAI,CACpBwB,MAAM,CAAC3B,IAAI,IAAIA,IAAI,CAAC5B,EAAE,IAAI,CAAC,IAAI4B,IAAI,CAAC5B,EAAE,IAAI,CAAC,CAAC,CAC5C0D,KAAK,CAAC9B,IAAI,IAAIA,IAAI,CAACzB,KAAK,KAAK,MAAM,IAAIyB,IAAI,CAACzB,KAAK,KAAK,SAAS,CAAC;IACnE+B,aAAa,CAACD,UAAU,CAAC;EAC3B,CAAC;EAED,MAAM0B,eAAe,GAAG,MAAOC,CAAC,IAAK;IACnC,IAAI3B,UAAU,EAAE;MACd2B,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,IAAI;QACF,MAAMC,SAAS,CAAC,CAAC,CAAC,CAAC;QACnB;QACAxE,WAAW,CAACyE,YAAY,IAAIA,YAAY,CAACR,MAAM,CAACf,OAAO,IAAIA,OAAO,CAACwB,IAAI,KAAKrE,eAAe,CAACqE,IAAI,CAAC,CAAC;QAClGlB,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACrBpD,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,OAAOmC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC,MAAM;MACLoC,KAAK,CAAC,4CAA4C,CAAC;IACrD;EACF,CAAC;EAGD,MAAMnB,iBAAiB,GAAGA,CAAA,KAAM;IAC9Bd,OAAO,CAACjC,WAAW,CAAC,CAAC,CAAC;IACtBmC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MAAA,IAAAI,UAAA,EAAAC,WAAA;MACF;MACA,MAAMC,OAAO,GAAG;QACd7D,QAAQ,EAAEZ,eAAe,CAAC0E,MAAM;QAAE;QAClC7D,QAAQ,EAAE,EAAA0D,UAAA,GAAAnC,IAAI,CAACuC,IAAI,CAAC1C,IAAI,IAAIA,IAAI,CAAC5B,EAAE,KAAK,CAAC,CAAC,cAAAkE,UAAA,uBAAhCA,UAAA,CAAkC/D,KAAK,KAAI,iBAAiB;QAAE;QACxES,eAAe,EAAE,EAAAuD,WAAA,GAAApC,IAAI,CAACuC,IAAI,CAAC1C,IAAI,IAAIA,IAAI,CAAC5B,EAAE,KAAK,CAAC,CAAC,cAAAmE,WAAA,uBAAhCA,WAAA,CAAkChE,KAAK,MAAK,sBAAsB,GAAG,MAAM,GAAG,SAAS,CAAC;MAC3G,CAAC;;MAED;MACA,MAAMpB,KAAK,CAACwF,IAAI,CAAC,oCAAoC,EAAEH,OAAO,CAAC;;MAE/D;MACAtC,OAAO,CAAC0C,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC,CAAC,OAAO3C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACE3C,OAAA,CAACjB,KAAK;IAACwG,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC5BzF,OAAA,CAAChB,IAAI;MAAC0G,SAAS;MAACC,OAAO,EAAE7F,WAAY;MAAA2F,QAAA,eACnCzF,OAAA,CAAChB,IAAI;QAAC0D,IAAI;QAACkD,EAAE,EAAE,EAAG;QAAAH,QAAA,eAChBzF,OAAA,CAAChB,IAAI;UAAC0G,SAAS;UAACG,SAAS,EAAC,QAAQ;UAACF,OAAO,EAAE,CAAE;UAAAF,QAAA,gBAC5CzF,OAAA;YAAAyF,QAAA,EAAI;UAA+B;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxCjG,OAAA,CAAClB,MAAM;YAACoH,OAAO,EAAE9C,iBAAkB;YAAC+C,OAAO,EAAC,WAAW;YAACC,KAAK,EAAC,OAAO;YAAAX,QAAA,EAAC;UAEtE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTjG,OAAA,CAACX,cAAc;YAAAoG,QAAA,eACbzF,OAAA,CAACf,KAAK;cAAAwG,QAAA,gBACJzF,OAAA,CAACV,SAAS;gBAAAmG,QAAA,eACRzF,OAAA,CAACT,QAAQ;kBAAAkG,QAAA,gBACPzF,OAAA,CAACZ,SAAS;oBAAAqG,QAAA,EAAC;kBAAQ;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAW,CAAC,eAC/BjG,OAAA,CAACZ,SAAS;oBAAAqG,QAAA,EAAC;kBAAW;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAW,CAAC,eAClCjG,OAAA,CAACZ,SAAS;oBAAAqG,QAAA,EAAC;kBAAyB;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAW,CAAC,eAChDjG,OAAA,CAACZ,SAAS;oBAAAqG,QAAA,EAAC;kBAAoB;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAW,CAAC,eAC3CjG,OAAA,CAACZ,SAAS;oBAAAqG,QAAA,EAAC;kBAAoB;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAW,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACZjG,OAAA,CAACb,SAAS;gBAAAsG,QAAA,EACPtF,QAAQ,CAACsC,GAAG,CAAC,CAACa,OAAO,EAAEI,KAAK,kBAC3B1D,OAAA,CAACT,QAAQ;kBAAAkG,QAAA,gBACPzF,OAAA,CAACZ,SAAS;oBAAAqG,QAAA,EAAE/B,KAAK,GAAG;kBAAC;oBAAAoC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eAClCjG,OAAA,CAACZ,SAAS;oBAAAqG,QAAA,EAAEnC,OAAO,CAAC6B;kBAAM;oBAAAW,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACvCjG,OAAA,CAACZ,SAAS;oBAAAqG,QAAA,eACRzF,OAAA,CAAClB,MAAM;sBACLoH,OAAO,EAAEA,CAAA,KAAMzC,eAAe,CAACC,KAAK,CAAE;sBACtCyC,OAAO,EAAC,UAAU;sBAClBE,QAAQ,EAAE/C,OAAO,CAACE,UAAW;sBAAAiC,QAAA,EAC9B;oBAED;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACA,CAAC,eACZjG,OAAA,CAACZ,SAAS;oBAAAqG,QAAA,eACRzF,OAAA,CAAClB,MAAM;sBACLoH,OAAO,EAAEA,CAAA,KAAMrC,gBAAgB,CAACH,KAAK,CAAE;sBACvCyC,OAAO,EAAC,UAAU;sBAClBE,QAAQ,EAAE/C,OAAO,CAACE,UAAU,IAAIF,OAAO,CAACC,KAAM;sBAAAkC,QAAA,EAC/C;oBAED;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACA,CAAC,eACZjG,OAAA,CAACZ,SAAS;oBAAAqG,QAAA,eACRzF,OAAA,CAAClB,MAAM;sBACLoH,OAAO,EAAEA,CAAA,KAAMlC,YAAY,CAACN,KAAK,CAAE;sBACnCyC,OAAO,EAAC,UAAU;sBAClBE,QAAQ,EAAE/C,OAAO,CAACE,UAAU,IAAIF,OAAO,CAACC,KAAM;sBAAAkC,QAAA,EAC/C;oBAED;sBAAAK,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACA,CAAC;gBAAA,GA7BC3C,OAAO,CAACwB,IAAI;kBAAAgB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OA8BjB,CACX;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAENxF,eAAe,iBACdT,OAAA,CAACR,MAAM;MACLe,IAAI,EAAEA,IAAK;MACX+F,OAAO,EAAE3C,WAAY;MACrB4C,QAAQ,EAAC,IAAI;MACbC,SAAS;MACTC,UAAU,EAAE;QACVlB,KAAK,EAAE;UACLmB,SAAS,EAAE,MAAM;UACjBC,SAAS,EAAE;QACb;MACF,CAAE;MAAAlB,QAAA,gBAEFzF,OAAA,CAACP,WAAW;QAAAgG,QAAA,EAAC;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC5CjG,OAAA,CAACN,aAAa;QAAA+F,QAAA,gBACZzF,OAAA,CAACJ,UAAU;UAACuG,OAAO,EAAC,IAAI;UAAAV,QAAA,GAAC,sEAAa,EAAChF,eAAe,CAAC0E,MAAM;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAC3EjG,OAAA,CAACJ,UAAU;UAAA6F,QAAA,GAAC,oFAAiB,EAAChF,eAAe,CAACmG,IAAI;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAChEjG,OAAA,CAACJ,UAAU;UAAA6F,QAAA,GAAC,oFAAiB,EAAChF,eAAe,CAACoG,IAAI;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAChEjG,OAAA,CAACJ,UAAU;UAAA6F,QAAA,GAAC,0DAAW,EAAChF,eAAe,CAACqG,GAAG;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACzDjG,OAAA;UAAAyF,QAAA,EAAI;QAA4B;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrCjG,OAAA,CAACX,cAAc;UAAC0H,SAAS,EAAEhI,KAAM;UAAA0G,QAAA,eAC/BzF,OAAA,CAACf,KAAK;YAAAwG,QAAA,gBACJzF,OAAA,CAACV,SAAS;cAAAmG,QAAA,eACRzF,OAAA,CAACT,QAAQ;gBAAAkG,QAAA,gBACPzF,OAAA,CAACZ,SAAS;kBAAAqG,QAAA,EAAC;gBAAQ;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAW,CAAC,eAC/BjG,OAAA,CAACZ,SAAS;kBAAAqG,QAAA,EAAC;gBAAY;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAW,CAAC,eACnCjG,OAAA,CAACZ,SAAS;kBAAAqG,QAAA,EAAC;gBAAQ;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAW,CAAC,eAC/BjG,OAAA,CAACZ,SAAS;kBAAAqG,QAAA,EAAC;gBAAY;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAW,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACZjG,OAAA,CAACb,SAAS;cAAAsG,QAAA,EACP5C,IAAI,CAACJ,GAAG,CAAC,CAACC,IAAI,EAAEgB,KAAK,kBACpB1D,OAAA,CAACT,QAAQ;gBAAAkG,QAAA,gBACPzF,OAAA,CAACZ,SAAS;kBAAAqG,QAAA,EAAE/C,IAAI,CAAC5B;gBAAE;kBAAAgF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAChCjG,OAAA,CAACZ,SAAS;kBAAAqG,QAAA,EAAE/C,IAAI,CAAC3B;gBAAI;kBAAA+E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eAClCjG,OAAA,CAACZ,SAAS;kBAAAqG,QAAA,eACRzF,OAAA;oBAAAyF,QAAA,EACG,CAAC/C,IAAI,CAAC1B,WAAW,IAAI,EAAE,EAAEyB,GAAG,CAAC,CAACuE,IAAI,EAAEC,GAAG,kBACtCjH,OAAA;sBAAAyF,QAAA,EAAeuB;oBAAI,GAAVC,GAAG;sBAAAnB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAY,CACzB;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACA;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC,eACZjG,OAAA,CAACZ,SAAS;kBAAAqG,QAAA,EACP/C,IAAI,CAAC5B,EAAE,KAAK,CAAC,gBACZd,OAAA,CAACd,SAAS;oBAACgI,KAAK,EAAExE,IAAI,CAACzB,KAAM;oBAACoF,QAAQ;oBAACG,SAAS;oBAACW,MAAM,EAAC;kBAAM;oBAAArB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,gBAEjEjG,OAAA;oBAAAyF,QAAA,gBACEzF,OAAA;sBAAOoH,OAAO,EAAG,QAAO1D,KAAM,EAAE;sBAAA+B,QAAA,gBAC9BzF,OAAA;wBACEkE,IAAI,EAAC,OAAO;wBACZpD,EAAE,EAAG,QAAO4C,KAAM,EAAE;wBACpB2D,OAAO,EAAE3E,IAAI,CAACzB,KAAK,KAAK,MAAO;wBAC/BqG,QAAQ,EAAEA,CAAA,KAAMrD,oBAAoB,CAACvB,IAAI,CAAC5B,EAAE,EAAE,KAAK;sBAAE;wBAAAgF,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACtD,CAAC,4BAEJ;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC,eACRjG,OAAA;sBAAOoH,OAAO,EAAG,QAAO1D,KAAM,EAAE;sBAAA+B,QAAA,gBAC9BzF,OAAA;wBACEkE,IAAI,EAAC,OAAO;wBACZpD,EAAE,EAAG,QAAO4C,KAAM,EAAE;wBACpB2D,OAAO,EAAE3E,IAAI,CAACzB,KAAK,KAAK,SAAU;wBAClCqG,QAAQ,EAAEA,CAAA,KAAMrD,oBAAoB,CAACvB,IAAI,CAAC5B,EAAE,EAAE,IAAI;sBAAE;wBAAAgF,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACrD,CAAC,8CAEJ;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACL;gBACN;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACQ,CAAC;cAAA,GAnCCvD,IAAI,CAAC5B,EAAE;gBAAAgF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAoCZ,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAEhBjG,OAAA,CAACL,aAAa;QAAA8F,QAAA,gBACZzF,OAAA,CAAClB,MAAM;UAACoH,OAAO,EAAEzB,eAAgB;UAAC2B,KAAK,EAAC,SAAS;UAACC,QAAQ,EAAE,CAACtD,UAAW;UAAA0C,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxFjG,OAAA,CAAClB,MAAM;UAACoH,OAAO,EAAEvC,WAAY;UAACyC,KAAK,EAAC,SAAS;UAAAX,QAAA,EAAC;QAAG;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEZ;AAAC/F,EAAA,CA3UQD,eAAe;AAAAsH,EAAA,GAAftH,eAAe;AA6UxB,eAAeA,eAAe;AAAC,IAAAsH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}