{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import Select from '@mui/material/Select';\n// import MenuItem from '@mui/material/MenuItem';\n// import TableContainer from '@mui/material/TableContainer';\n// import Table from '@mui/material/Table';\n// import TableHead from '@mui/material/TableHead';\n// import TableBody from '@mui/material/TableBody';\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import Paper from '@mui/material/Paper';\n// import Button from '@mui/material/Button';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\n// import Dialog from '@mui/material/Dialog';\n// import { Stack } from '@mui/system';\n// import InputLabel from '@mui/material/InputLabel';\n// import FormControl from '@mui/material/FormControl';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// function ChairmanScoreCSB02() {\n//     const [selectedOption, setSelectedOption] = useState('');\n//     const [textField1, setTextField1] = useState('');\n//     const [textField2, setTextField2] = useState('');\n//     const [textField3, setTextField3] = useState('');\n//     const [editingRowId, setEditingRowId] = useState(null);\n//     const [openDialog, setOpenDialog] = useState(false);\n\n//     const project = [\n//         {\n//           \"ID\": \"001\",\n//           \"Name\": \"ระบบตรวจสอบการวัดพื้นที่\",\n//           \"SID\": \"6304062620061\",\n//           \"SName\": \"ณัชริกา กันทะสอน\",\n//           \"SID2\": \"6304062620062\",\n//           \"SName2\": \"ใจดี ยืมเงิน\",\n//           \"TID\": \"NLP\",\n//           \"TName\": \"ลือพล ไม่น่ารักเลย\"\n//         },\n//         {\n//           \"ID\": \"002\",\n//           \"Name\": \"ระบบจำลองโมเดล\",\n//           \"SID\": \"6304062620063\",\n//           \"SName\": \"สบายดี สบายใจ\",\n//           \"SID2\": \"6304062620064\",\n//           \"SName2\": \"สุดสวย สุดหล่อ\",\n//           \"TID\": \"SWK\",\n//           \"TName\": \"สุวัชชัย ตัวตึง\"\n//         },\n//         {\n//           \"ID\": \"003\",\n//           \"Name\": \"เว็บไซต์ขายของ\",\n//           \"SID\": \"6304062620065\",\n//           \"SName\": \"ไอ่กล้อง ไอ่อ้วน\",\n//           \"SID2\": \"6304062620066\",\n//           \"SName2\": \"แมวเหมียว น่ารัก\",\n//           \"TID\": \"KAB\",\n//           \"TName\": \"คัณฑารัตน์ สุดละเอียด\"\n//         },\n//         {\n//           \"ID\": \"004\",\n//           \"Name\": \"เว็บไซต์ขายที่ดิน\",\n//           \"SID\": \"6304062620067\",\n//           \"SName\": \"มะหมา สุดหล่อ\",\n//           \"SID2\": \"6304062620068\",\n//           \"SName2\": \"หนูน้อย น่ารัก\",\n//           \"TID\": \"CRL\",\n//           \"TName\": \"เฉียบวุฒิ สุดจ้าบ\"\n\n//         },\n//         {\n//           \"ID\": \"005\",\n//           \"Name\": \"เกมส์ปลูกผัก\",\n//           \"SID\": \"6304062620069\",\n//           \"SName\": \"สวัสดีครับ ผมนวย\",\n//           \"SID2\": \"6304062620070\",\n//           \"SName2\": \"ไม่มี ตังค์ค่า\",\n//           \"TID\": \"ARN\",\n//           \"TName\": \"เอิญ ไม่ใจดี\"\n//         }\n//       ];\n\n//     const [projectSelect, setProjectSelect] = useState(null);\n\n//     const handleChange = (event) => {\n//         setProjectSelect(project.find(p => p.Name === event.target.value));\n//     };\n\n//     const handleNameChange = (id, value) => {\n//         const item = data.find(item => item.id === id);\n//         if (/^\\d*$/.test(value) && Number(value) <= Number(item.fullscores)) {\n//             setData(prevData =>\n//                 prevData.map(item =>\n//                     item.id === id ? { ...item, score: value } : item\n//                 )\n//             );\n//         }\n//     };\n\n//     const calculateTotalScore = () => {\n//         const totalScore = data\n//             .filter(item => item.id >= 1 && item.id <= 6)\n//             .reduce((acc, curr) => acc + Number(curr.score), 0);\n\n//         setData(prevData =>\n//             prevData.map(item =>\n//                 item.name === 'คะแนนรวม' ? { ...item, score: totalScore } : item\n//             )\n//         );\n//     };\n\n//     const handleEditClick = (id) => {\n//         setEditingRowId(id);\n//     };\n\n//     const handleSaveClick = () => {\n//         setEditingRowId(null);\n//     };\n\n//     const handleCloseDialog = () => {\n//         setOpenDialog(false);\n//     };\n\n//     const [data, setData] = useState([\n//         { id: 1, name: 'วัตถุประสงค์และขอบเขตโครงงาน', fullscores: '10', score: '9' },\n//         { id: 2, name: 'ความเข้าใจระบบงานเดิม/ทฤษฎีหรืองานวิจัย ที่นำมาใช้พัฒนาโครงงาน', fullscores: '20', score: '18' },\n//         { id: 3, name: 'การศึกษาความต้องการของระบบ และการออกแบบ', fullscores: '20', score: '19' },\n//         { id: 4, name: 'การนำเสนอโครงงาน', fullscores: '20', score: '15' },\n//         { id: 5, name: 'รูปแบบรายงาน', fullscores: '10', score: '8' },\n//         { id: 6, name: 'แนวทางการดำเนินงาน', fullscores: '10', score: '8' },\n//         { name: 'คะแนนรวม', fullscores: '90', score: '77' },\n//     ]);\n\n//     useEffect(() => {\n//         calculateTotalScore();\n//     }, [data]);\n\n//     const [formData, setFormData] = useState({\n//         Er_name:'',\n//         Er_results:'',\n//         Er_com:'',\n//         Er_status:'',\n//         Er_date:'',\n//         Er_time:''\n//       });\n\n//     useEffect(() => {\n//         const fetchExamscores = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:9999/Exam_results');\n//                 if (response.data && Array.isArray(response.data)) {\n//                     setExamscores(response.data.map(item => item.Er_name));\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching subject names:', error);\n//             }\n//         };\n\n//         fetchExamscores();\n//     }, []);\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await axios.post('http://localhost:9999/Exam_results', formData);\n//             console.log('Subject added:', response.data);\n//             alert(\"Subject added successfully!\");\n//             setFormData({\n//                 Er_name: '',\n//                 Er_results: '',\n//                 Er_com: '',\n//                 Er_status: '',\n//                 Er_date: '',\n//                 Er_time: ''\n//             });\n//         } catch (error) {\n//             console.error('Error adding subject:', error);\n//             alert(\"Failed to add subject. Please try again later.\");\n//         }\n//     };\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}>\n//                                 <div>\n//                                     <Box fontSize='18px' sx={{ marginTop: 5 }}>\n//                                         <h1>แบบประเมินโครงงานพิเศษ 1 (สอบก้าวหน้า)</h1>\n//                                         <p>เลือกชื่อโครงงาน</p>\n//                                         <FormControl>\n//                                             <InputLabel id=\"ProjectName-select-label\">ชื่อโครงงาน</InputLabel>\n//                                             <Select\n//                                                 labelId=\"ProjectName-select-label\"\n//                                                 value={projectSelect?.Name || ''}\n//                                                 onChange={handleChange}\n//                                                 margin=\"normal\"\n//                                                 sx={{ minWidth: 150 }}\n//                                             >\n//                                                 {project.map((p) => (\n//                                                     <MenuItem\n//                                                         key={p.ID}\n//                                                         value={p.Name}\n//                                                     >\n//                                                         {p.Name}\n//                                                     </MenuItem>\n//                                                 ))}\n//                                             </Select>\n//                                         </FormControl>\n//                                         <br />\n//                                         <p>โดย</p>\n//                                         <TextField\n//                                             label=\"รหัสนักศึกษาคนที่ 1\"\n//                                             value={projectSelect?.SID || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 5, ml: 5, width: '25ch' } }}\n//                                         />\n//                                         <TextField\n//                                             label=\"ชื่อ-สกุลนักศึกษาคนที่ 1\"\n//                                             value={projectSelect?.SName || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 0, width: '30ch' } }}\n//                                         /><br />\n//                                         <TextField\n//                                             label=\"รหัสนักศึกษาคนที่ 2\"\n//                                             value={projectSelect?.SID2 || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 5, ml: 5, mt: 3, width: '25ch' } }}\n//                                         />\n//                                         <TextField\n//                                             label=\"ชื่อ-สกุลนักศึกษาคนที่ 2\"\n//                                             value={projectSelect?.SName2 || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mt: 3, width: '30ch' } }}\n//                                         />\n//                                         <p>อาจารย์ที่ปรึกษา</p>\n//                                         <TextField\n//                                             label=\"ชื่ออาจารย์ที่ปรึกษา\"\n//                                             value={projectSelect?.TName || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 5, ml: 5, width: '25ch' } }}\n//                                         />\n//                                     </Box>\n//                                     {projectSelect && (\n//                                         <>\n//                                             <h2>ตารางลงคะแนนสำหรับกรรมการสอบ</h2>\n//                                             <TableContainer component={Paper}>\n//                                                 <Table>\n//                                                     <TableHead>\n//                                                         <TableRow>\n//                                                             <TableCell>ลำดับที่</TableCell>\n//                                                             <TableCell>เกณฑ์พิจารณา</TableCell>\n//                                                             <TableCell>คะแนนเต็ม</TableCell>\n//                                                             <TableCell>คะแนนได้</TableCell>\n//                                                             <TableCell>แก้ไข</TableCell>\n//                                                         </TableRow>\n//                                                     </TableHead>\n//                                                     <TableBody>\n//                                                         {data.map((item) => (\n//                                                             <TableRow key={item.id}>\n//                                                                 <TableCell>{item.id}</TableCell>\n//                                                                 <TableCell>{item.name}</TableCell>\n//                                                                 <TableCell>{item.fullscores}</TableCell>\n//                                                                 <TableCell>\n//                                                                     {editingRowId === item.id ? (\n//                                                                         <TextField\n//                                                                             value={item.score}\n//                                                                             onChange={(e) => handleNameChange(item.id, e.target.value)}\n//                                                                             inputProps={{\n//                                                                                 inputMode: 'numeric',\n//                                                                                 pattern: '[0-9]*',\n//                                                                             }}\n//                                                                         />\n//                                                                     ) : (\n//                                                                         item.score\n//                                                                     )}\n//                                                                 </TableCell>\n//                                                                 <TableCell>\n//                                                                     {item.name !== 'คะแนนรวม' && (\n//                                                                         editingRowId === item.id ? (\n//                                                                             <Button variant=\"outlined\" onClick={handleSaveClick}>บันทึก</Button>\n//                                                                         ) : (\n//                                                                             <Button variant=\"outlined\" onClick={() => handleEditClick(item.id)}>แก้ไข</Button>\n//                                                                         )\n//                                                                     )}\n//                                                                 </TableCell>\n//                                                             </TableRow>\n//                                                         ))}\n//                                                     </TableBody>\n//                                                 </Table>\n//                                             </TableContainer>\n//                                             <Dialog open={openDialog} onClose={handleCloseDialog}>\n//                                                 <DialogTitle>ทำการบันทึกสำเร็จ !!</DialogTitle>\n//                                                 <DialogContent>\n//                                                     <p>รอการตรวจสอบจากเจ้าหน้าที่</p>\n//                                                 </DialogContent>\n//                                                 <DialogActions>\n//                                                     <Button onClick={handleCloseDialog}>ปิด</Button>\n//                                                 </DialogActions>\n//                                             </Dialog>\n//                                             <Stack direction=\"row\" spacing={2} justifyContent=\"center\" sx={{ mt: 2 }}>\n//                                                 <Button variant=\"contained\" onClick={handleSubmit}>บันทึก</Button>\n//                                                 <Button variant=\"outlined\">ยกเลิก</Button>\n//                                             </Stack>\n//                                         </>\n//                                     )}\n//                                 </div>\n//                             </Grid>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard>\n//     );\n// }\n\n// export default ChairmanScoreCSB02;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import Select from '@mui/material/Select';\n// import MenuItem from '@mui/material/MenuItem';\n// import TableContainer from '@mui/material/TableContainer';\n// import Table from '@mui/material/Table';\n// import TableHead from '@mui/material/TableHead';\n// import TableBody from '@mui/material/TableBody';\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import Paper from '@mui/material/Paper';\n// import Button from '@mui/material/Button';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\n// import Dialog from '@mui/material/Dialog';\n// import { Stack } from '@mui/system';\n// import InputLabel from '@mui/material/InputLabel';\n// import FormControl from '@mui/material/FormControl';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// function ChairmanScoreCSB02() {\n//     const [selectedOption, setSelectedOption] = useState('');\n//     const [textField1, setTextField1] = useState('');\n//     const [textField2, setTextField2] = useState('');\n//     const [textField3, setTextField3] = useState('');\n//     const [editingRowId, setEditingRowId] = useState(null);\n//     const [openDialog, setOpenDialog] = useState(false);\n//     const [project, setProject] = useState([]);\n//     const [projectSelect, setProjectSelect] = useState(null);\n\n//     useEffect(() => {\n//         const fetchProjects = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:9999/Project');\n//                 if (response.data && Array.isArray(response.data)) {\n//                     setProject(response.data);\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching project data:', error);\n//             }\n//         };\n\n//         fetchProjects();\n//     }, []);\n\n//     const handleChange = (event) => {\n//         setProjectSelect(project.find(p => p.P_name === event.target.value));\n//     };\n\n//     const handleNameChange = (id, value) => {\n//         const item = data.find(item => item.id === id);\n//         if (/^\\d*$/.test(value) && Number(value) <= Number(item.fullscores)) {\n//             setData(prevData =>\n//                 prevData.map(item =>\n//                     item.id === id ? { ...item, score: value } : item\n//                 )\n//             );\n//         }\n//     };\n\n//     const calculateTotalScore = () => {\n//         const totalScore = data\n//             .filter(item => item.id >= 1 && item.id <= 6)\n//             .reduce((acc, curr) => acc + Number(curr.score), 0);\n\n//         setData(prevData =>\n//             prevData.map(item =>\n//                 item.name === 'คะแนนรวม' ? { ...item, score: totalScore } : item\n//             )\n//         );\n//     };\n\n//     const handleEditClick = (id) => {\n//         setEditingRowId(id);\n//     };\n\n//     const handleSaveClick = () => {\n//         setEditingRowId(null);\n//     };\n\n//     const handleCloseDialog = () => {\n//         setOpenDialog(false);\n//     };\n\n//     const [data, setData] = useState([\n//         { id: 1, name: 'วัตถุประสงค์และขอบเขตโครงงาน', fullscores: '10', score: '9' },\n//         { id: 2, name: 'ความเข้าใจระบบงานเดิม/ทฤษฎีหรืองานวิจัย ที่นำมาใช้พัฒนาโครงงาน', fullscores: '20', score: '18' },\n//         { id: 3, name: 'การศึกษาความต้องการของระบบ และการออกแบบ', fullscores: '20', score: '19' },\n//         { id: 4, name: 'การนำเสนอโครงงาน', fullscores: '20', score: '15' },\n//         { id: 5, name: 'รูปแบบรายงาน', fullscores: '10', score: '8' },\n//         { id: 6, name: 'แนวทางการดำเนินงาน', fullscores: '10', score: '8' },\n//         { name: 'คะแนนรวม', fullscores: '90', score: '77' },\n//     ]);\n\n//     useEffect(() => {\n//         calculateTotalScore();\n//     }, [data]);\n\n//     const [formData, setFormData] = useState({\n//         Er_name:'',\n//         Er_results:'',\n//         Er_com:'',\n//         Er_status:'',\n//         Er_date:'',\n//         Er_time:''\n//     });\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await axios.post('http://localhost:9999/Exam_results', formData);\n//             console.log('Subject added:', response.data);\n//             alert(\"Subject added successfully!\");\n//             setFormData({\n//                 Er_name: '',\n//                 Er_results: '',\n//                 Er_com: '',\n//                 Er_status: '',\n//                 Er_date: '',\n//                 Er_time: ''\n//             });\n//         } catch (error) {\n//             console.error('Error adding subject:', error);\n//             alert(\"Failed to add subject. Please try again later.\");\n//         }\n//     };\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}>\n//                                 <div>\n//                                     <Box fontSize='18px' sx={{ marginTop: 5 }}>\n//                                         <h1>แบบประเมินโครงงานพิเศษ 1 (สอบก้าวหน้า)</h1>\n//                                         <p>เลือกชื่อโครงงาน</p>\n//                                         <FormControl>\n//                                             <InputLabel id=\"ProjectName-select-label\">ชื่อโครงงาน</InputLabel>\n//                                             <Select\n//                                                 labelId=\"ProjectName-select-label\"\n//                                                 value={projectSelect?.P_name || ''}\n//                                                 onChange={handleChange}\n//                                                 margin=\"normal\"\n//                                                 sx={{ minWidth: 150 }}\n//                                             >\n//                                                 {project.map((p) => (\n//                                                     <MenuItem\n//                                                         key={p.P_id}\n//                                                         value={p.P_name}\n//                                                     >\n//                                                         {p.P_name}\n//                                                     </MenuItem>\n//                                                 ))}\n//                                             </Select>\n//                                         </FormControl>\n//                                         <br />\n//                                         <p>โดย</p>\n//                                         <TextField\n//                                             label=\"ชื่อ-สกุลนักศึกษาคนที่ 1\"\n//                                             value={projectSelect?.P_S1 || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 5, ml: 5, width: '25ch' } }}\n//                                         />\n//                                         <TextField\n//                                             label=\"ชื่อ-สกุลนักศึกษาคนที่ 2\"\n//                                             value={projectSelect?.P_S2 || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 5, ml: 5,  width: '25ch' } }}\n//                                         />\n//                                         <p>อาจารย์ที่ปรึกษา</p>\n//                                         <TextField\n//                                             label=\"ชื่ออาจารย์ที่ปรึกษา\"\n//                                             value={projectSelect?.P_T || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 5, ml: 5, width: '40ch' } }}\n//                                         />\n//                                     </Box>\n//                                     {projectSelect && (\n//                                         <>\n//                                             <h2>ตารางลงคะแนนสำหรับกรรมการสอบ</h2>\n//                                             <TableContainer component={Paper}>\n//                                                 <Table>\n//                                                     <TableHead>\n//                                                         <TableRow>\n//                                                             <TableCell>ลำดับที่</TableCell>\n//                                                             <TableCell>เกณฑ์พิจารณา</TableCell>\n//                                                             <TableCell>คะแนนเต็ม</TableCell>\n//                                                             <TableCell>คะแนนได้</TableCell>\n//                                                             <TableCell>แก้ไข</TableCell>\n//                                                         </TableRow>\n//                                                     </TableHead>\n//                                                     <TableBody>\n//                                                         {data.map((item) => (\n//                                                             <TableRow key={item.id}>\n//                                                                 <TableCell>{item.id}</TableCell>\n//                                                                 <TableCell>{item.name}</TableCell>\n//                                                                 <TableCell>{item.fullscores}</TableCell>\n//                                                                 <TableCell>\n//                                                                     {editingRowId === item.id ? (\n//                                                                         <TextField\n//                                                                             value={item.score}\n//                                                                             onChange={(e) => handleNameChange(item.id, e.target.value)}\n//                                                                             inputProps={{\n//                                                                                 inputMode: 'numeric',\n//                                                                                 pattern: '[0-9]*'\n//                                                                             }}\n//                                                                         />\n//                                                                     ) : (\n//                                                                         item.score\n//                                                                     )}\n//                                                                 </TableCell>\n//                                                                 <TableCell>\n//                                                                     {editingRowId === item.id ? (\n//                                                                         <Button variant=\"contained\" onClick={handleSaveClick}>\n//                                                                             บันทึก\n//                                                                         </Button>\n//                                                                     ) : (\n//                                                                         <Button variant=\"contained\" onClick={() => handleEditClick(item.id)}>\n//                                                                             แก้ไข\n//                                                                         </Button>\n//                                                                     )}\n//                                                                 </TableCell>\n//                                                             </TableRow>\n//                                                         ))}\n//                                                     </TableBody>\n//                                                 </Table>\n//                                             </TableContainer>\n//                                         </>\n//                                     )}\n//                                     <div>\n//                                         <form onSubmit={handleSubmit}>\n//                                             <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\n//                                                 <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n//                                                     บันทึก\n//                                                 </Button>\n//                                                 <Button variant=\"contained\" color=\"secondary\" onClick={handleCloseDialog}>\n//                                                     ยกเลิก\n//                                                 </Button>\n//                                             </Stack>\n//                                         </form>\n//                                     </div>\n//                                 </div>\n//                             </Grid>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard>\n//     );\n// }\n\n// export default ChairmanScoreCSB02;","map":{"version":3,"names":[],"sources":["C:/test/create-react-app/src/views/utilities/ChairmanScoreCSB02.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import Select from '@mui/material/Select';\n// import MenuItem from '@mui/material/MenuItem';\n// import TableContainer from '@mui/material/TableContainer';\n// import Table from '@mui/material/Table';\n// import TableHead from '@mui/material/TableHead';\n// import TableBody from '@mui/material/TableBody';\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import Paper from '@mui/material/Paper';\n// import Button from '@mui/material/Button';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\n// import Dialog from '@mui/material/Dialog';\n// import { Stack } from '@mui/system';\n// import InputLabel from '@mui/material/InputLabel';\n// import FormControl from '@mui/material/FormControl';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// function ChairmanScoreCSB02() {\n//     const [selectedOption, setSelectedOption] = useState('');\n//     const [textField1, setTextField1] = useState('');\n//     const [textField2, setTextField2] = useState('');\n//     const [textField3, setTextField3] = useState('');\n//     const [editingRowId, setEditingRowId] = useState(null);\n//     const [openDialog, setOpenDialog] = useState(false);\n\n//     const project = [\n//         {\n//           \"ID\": \"001\",\n//           \"Name\": \"ระบบตรวจสอบการวัดพื้นที่\",\n//           \"SID\": \"6304062620061\",\n//           \"SName\": \"ณัชริกา กันทะสอน\",\n//           \"SID2\": \"6304062620062\",\n//           \"SName2\": \"ใจดี ยืมเงิน\",\n//           \"TID\": \"NLP\",\n//           \"TName\": \"ลือพล ไม่น่ารักเลย\"\n//         },\n//         {\n//           \"ID\": \"002\",\n//           \"Name\": \"ระบบจำลองโมเดล\",\n//           \"SID\": \"6304062620063\",\n//           \"SName\": \"สบายดี สบายใจ\",\n//           \"SID2\": \"6304062620064\",\n//           \"SName2\": \"สุดสวย สุดหล่อ\",\n//           \"TID\": \"SWK\",\n//           \"TName\": \"สุวัชชัย ตัวตึง\"\n//         },\n//         {\n//           \"ID\": \"003\",\n//           \"Name\": \"เว็บไซต์ขายของ\",\n//           \"SID\": \"6304062620065\",\n//           \"SName\": \"ไอ่กล้อง ไอ่อ้วน\",\n//           \"SID2\": \"6304062620066\",\n//           \"SName2\": \"แมวเหมียว น่ารัก\",\n//           \"TID\": \"KAB\",\n//           \"TName\": \"คัณฑารัตน์ สุดละเอียด\"\n//         },\n//         {\n//           \"ID\": \"004\",\n//           \"Name\": \"เว็บไซต์ขายที่ดิน\",\n//           \"SID\": \"6304062620067\",\n//           \"SName\": \"มะหมา สุดหล่อ\",\n//           \"SID2\": \"6304062620068\",\n//           \"SName2\": \"หนูน้อย น่ารัก\",\n//           \"TID\": \"CRL\",\n//           \"TName\": \"เฉียบวุฒิ สุดจ้าบ\"\n    \n//         },\n//         {\n//           \"ID\": \"005\",\n//           \"Name\": \"เกมส์ปลูกผัก\",\n//           \"SID\": \"6304062620069\",\n//           \"SName\": \"สวัสดีครับ ผมนวย\",\n//           \"SID2\": \"6304062620070\",\n//           \"SName2\": \"ไม่มี ตังค์ค่า\",\n//           \"TID\": \"ARN\",\n//           \"TName\": \"เอิญ ไม่ใจดี\"\n//         }\n//       ];\n\n//     const [projectSelect, setProjectSelect] = useState(null);\n\n//     const handleChange = (event) => {\n//         setProjectSelect(project.find(p => p.Name === event.target.value));\n//     };\n\n//     const handleNameChange = (id, value) => {\n//         const item = data.find(item => item.id === id);\n//         if (/^\\d*$/.test(value) && Number(value) <= Number(item.fullscores)) {\n//             setData(prevData =>\n//                 prevData.map(item =>\n//                     item.id === id ? { ...item, score: value } : item\n//                 )\n//             );\n//         }\n//     };\n\n//     const calculateTotalScore = () => {\n//         const totalScore = data\n//             .filter(item => item.id >= 1 && item.id <= 6)\n//             .reduce((acc, curr) => acc + Number(curr.score), 0);\n\n//         setData(prevData =>\n//             prevData.map(item =>\n//                 item.name === 'คะแนนรวม' ? { ...item, score: totalScore } : item\n//             )\n//         );\n//     };\n\n//     const handleEditClick = (id) => {\n//         setEditingRowId(id);\n//     };\n\n//     const handleSaveClick = () => {\n//         setEditingRowId(null);\n//     };\n\n//     const handleCloseDialog = () => {\n//         setOpenDialog(false);\n//     };\n\n//     const [data, setData] = useState([\n//         { id: 1, name: 'วัตถุประสงค์และขอบเขตโครงงาน', fullscores: '10', score: '9' },\n//         { id: 2, name: 'ความเข้าใจระบบงานเดิม/ทฤษฎีหรืองานวิจัย ที่นำมาใช้พัฒนาโครงงาน', fullscores: '20', score: '18' },\n//         { id: 3, name: 'การศึกษาความต้องการของระบบ และการออกแบบ', fullscores: '20', score: '19' },\n//         { id: 4, name: 'การนำเสนอโครงงาน', fullscores: '20', score: '15' },\n//         { id: 5, name: 'รูปแบบรายงาน', fullscores: '10', score: '8' },\n//         { id: 6, name: 'แนวทางการดำเนินงาน', fullscores: '10', score: '8' },\n//         { name: 'คะแนนรวม', fullscores: '90', score: '77' },\n//     ]);\n\n//     useEffect(() => {\n//         calculateTotalScore();\n//     }, [data]);\n\n//     const [formData, setFormData] = useState({\n//         Er_name:'',\n//         Er_results:'',\n//         Er_com:'',\n//         Er_status:'',\n//         Er_date:'',\n//         Er_time:''\n//       });\n\n//     useEffect(() => {\n//         const fetchExamscores = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:9999/Exam_results');\n//                 if (response.data && Array.isArray(response.data)) {\n//                     setExamscores(response.data.map(item => item.Er_name));\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching subject names:', error);\n//             }\n//         };\n\n//         fetchExamscores();\n//     }, []);\n      \n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await axios.post('http://localhost:9999/Exam_results', formData);\n//             console.log('Subject added:', response.data);\n//             alert(\"Subject added successfully!\");\n//             setFormData({\n//                 Er_name: '',\n//                 Er_results: '',\n//                 Er_com: '',\n//                 Er_status: '',\n//                 Er_date: '',\n//                 Er_time: ''\n//             });\n//         } catch (error) {\n//             console.error('Error adding subject:', error);\n//             alert(\"Failed to add subject. Please try again later.\");\n//         }\n//     };\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}>\n//                                 <div>\n//                                     <Box fontSize='18px' sx={{ marginTop: 5 }}>\n//                                         <h1>แบบประเมินโครงงานพิเศษ 1 (สอบก้าวหน้า)</h1>\n//                                         <p>เลือกชื่อโครงงาน</p>\n//                                         <FormControl>\n//                                             <InputLabel id=\"ProjectName-select-label\">ชื่อโครงงาน</InputLabel>\n//                                             <Select\n//                                                 labelId=\"ProjectName-select-label\"\n//                                                 value={projectSelect?.Name || ''}\n//                                                 onChange={handleChange}\n//                                                 margin=\"normal\"\n//                                                 sx={{ minWidth: 150 }}\n//                                             >\n//                                                 {project.map((p) => (\n//                                                     <MenuItem\n//                                                         key={p.ID}\n//                                                         value={p.Name}\n//                                                     >\n//                                                         {p.Name}\n//                                                     </MenuItem>\n//                                                 ))}\n//                                             </Select>\n//                                         </FormControl>\n//                                         <br />\n//                                         <p>โดย</p>\n//                                         <TextField\n//                                             label=\"รหัสนักศึกษาคนที่ 1\"\n//                                             value={projectSelect?.SID || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 5, ml: 5, width: '25ch' } }}\n//                                         />\n//                                         <TextField\n//                                             label=\"ชื่อ-สกุลนักศึกษาคนที่ 1\"\n//                                             value={projectSelect?.SName || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 0, width: '30ch' } }}\n//                                         /><br />\n//                                         <TextField\n//                                             label=\"รหัสนักศึกษาคนที่ 2\"\n//                                             value={projectSelect?.SID2 || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 5, ml: 5, mt: 3, width: '25ch' } }}\n//                                         />\n//                                         <TextField\n//                                             label=\"ชื่อ-สกุลนักศึกษาคนที่ 2\"\n//                                             value={projectSelect?.SName2 || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mt: 3, width: '30ch' } }}\n//                                         />\n//                                         <p>อาจารย์ที่ปรึกษา</p>\n//                                         <TextField\n//                                             label=\"ชื่ออาจารย์ที่ปรึกษา\"\n//                                             value={projectSelect?.TName || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 5, ml: 5, width: '25ch' } }}\n//                                         />\n//                                     </Box>\n//                                     {projectSelect && (\n//                                         <>\n//                                             <h2>ตารางลงคะแนนสำหรับกรรมการสอบ</h2>\n//                                             <TableContainer component={Paper}>\n//                                                 <Table>\n//                                                     <TableHead>\n//                                                         <TableRow>\n//                                                             <TableCell>ลำดับที่</TableCell>\n//                                                             <TableCell>เกณฑ์พิจารณา</TableCell>\n//                                                             <TableCell>คะแนนเต็ม</TableCell>\n//                                                             <TableCell>คะแนนได้</TableCell>\n//                                                             <TableCell>แก้ไข</TableCell>\n//                                                         </TableRow>\n//                                                     </TableHead>\n//                                                     <TableBody>\n//                                                         {data.map((item) => (\n//                                                             <TableRow key={item.id}>\n//                                                                 <TableCell>{item.id}</TableCell>\n//                                                                 <TableCell>{item.name}</TableCell>\n//                                                                 <TableCell>{item.fullscores}</TableCell>\n//                                                                 <TableCell>\n//                                                                     {editingRowId === item.id ? (\n//                                                                         <TextField\n//                                                                             value={item.score}\n//                                                                             onChange={(e) => handleNameChange(item.id, e.target.value)}\n//                                                                             inputProps={{\n//                                                                                 inputMode: 'numeric',\n//                                                                                 pattern: '[0-9]*',\n//                                                                             }}\n//                                                                         />\n//                                                                     ) : (\n//                                                                         item.score\n//                                                                     )}\n//                                                                 </TableCell>\n//                                                                 <TableCell>\n//                                                                     {item.name !== 'คะแนนรวม' && (\n//                                                                         editingRowId === item.id ? (\n//                                                                             <Button variant=\"outlined\" onClick={handleSaveClick}>บันทึก</Button>\n//                                                                         ) : (\n//                                                                             <Button variant=\"outlined\" onClick={() => handleEditClick(item.id)}>แก้ไข</Button>\n//                                                                         )\n//                                                                     )}\n//                                                                 </TableCell>\n//                                                             </TableRow>\n//                                                         ))}\n//                                                     </TableBody>\n//                                                 </Table>\n//                                             </TableContainer>\n//                                             <Dialog open={openDialog} onClose={handleCloseDialog}>\n//                                                 <DialogTitle>ทำการบันทึกสำเร็จ !!</DialogTitle>\n//                                                 <DialogContent>\n//                                                     <p>รอการตรวจสอบจากเจ้าหน้าที่</p>\n//                                                 </DialogContent>\n//                                                 <DialogActions>\n//                                                     <Button onClick={handleCloseDialog}>ปิด</Button>\n//                                                 </DialogActions>\n//                                             </Dialog>\n//                                             <Stack direction=\"row\" spacing={2} justifyContent=\"center\" sx={{ mt: 2 }}>\n//                                                 <Button variant=\"contained\" onClick={handleSubmit}>บันทึก</Button>\n//                                                 <Button variant=\"outlined\">ยกเลิก</Button>\n//                                             </Stack>\n//                                         </>\n//                                     )}\n//                                 </div>\n//                             </Grid>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard>\n//     );\n// }\n\n// export default ChairmanScoreCSB02;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Box from '@mui/material/Box';\n// import TextField from '@mui/material/TextField';\n// import Select from '@mui/material/Select';\n// import MenuItem from '@mui/material/MenuItem';\n// import TableContainer from '@mui/material/TableContainer';\n// import Table from '@mui/material/Table';\n// import TableHead from '@mui/material/TableHead';\n// import TableBody from '@mui/material/TableBody';\n// import TableRow from '@mui/material/TableRow';\n// import TableCell from '@mui/material/TableCell';\n// import Paper from '@mui/material/Paper';\n// import Button from '@mui/material/Button';\n// import DialogTitle from '@mui/material/DialogTitle';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogActions from '@mui/material/DialogActions';\n// import Dialog from '@mui/material/Dialog';\n// import { Stack } from '@mui/system';\n// import InputLabel from '@mui/material/InputLabel';\n// import FormControl from '@mui/material/FormControl';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n\n// function ChairmanScoreCSB02() {\n//     const [selectedOption, setSelectedOption] = useState('');\n//     const [textField1, setTextField1] = useState('');\n//     const [textField2, setTextField2] = useState('');\n//     const [textField3, setTextField3] = useState('');\n//     const [editingRowId, setEditingRowId] = useState(null);\n//     const [openDialog, setOpenDialog] = useState(false);\n//     const [project, setProject] = useState([]);\n//     const [projectSelect, setProjectSelect] = useState(null);\n\n//     useEffect(() => {\n//         const fetchProjects = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:9999/Project');\n//                 if (response.data && Array.isArray(response.data)) {\n//                     setProject(response.data);\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching project data:', error);\n//             }\n//         };\n\n//         fetchProjects();\n//     }, []);\n\n//     const handleChange = (event) => {\n//         setProjectSelect(project.find(p => p.P_name === event.target.value));\n//     };\n\n//     const handleNameChange = (id, value) => {\n//         const item = data.find(item => item.id === id);\n//         if (/^\\d*$/.test(value) && Number(value) <= Number(item.fullscores)) {\n//             setData(prevData =>\n//                 prevData.map(item =>\n//                     item.id === id ? { ...item, score: value } : item\n//                 )\n//             );\n//         }\n//     };\n\n//     const calculateTotalScore = () => {\n//         const totalScore = data\n//             .filter(item => item.id >= 1 && item.id <= 6)\n//             .reduce((acc, curr) => acc + Number(curr.score), 0);\n\n//         setData(prevData =>\n//             prevData.map(item =>\n//                 item.name === 'คะแนนรวม' ? { ...item, score: totalScore } : item\n//             )\n//         );\n//     };\n\n//     const handleEditClick = (id) => {\n//         setEditingRowId(id);\n//     };\n\n//     const handleSaveClick = () => {\n//         setEditingRowId(null);\n//     };\n\n//     const handleCloseDialog = () => {\n//         setOpenDialog(false);\n//     };\n\n//     const [data, setData] = useState([\n//         { id: 1, name: 'วัตถุประสงค์และขอบเขตโครงงาน', fullscores: '10', score: '9' },\n//         { id: 2, name: 'ความเข้าใจระบบงานเดิม/ทฤษฎีหรืองานวิจัย ที่นำมาใช้พัฒนาโครงงาน', fullscores: '20', score: '18' },\n//         { id: 3, name: 'การศึกษาความต้องการของระบบ และการออกแบบ', fullscores: '20', score: '19' },\n//         { id: 4, name: 'การนำเสนอโครงงาน', fullscores: '20', score: '15' },\n//         { id: 5, name: 'รูปแบบรายงาน', fullscores: '10', score: '8' },\n//         { id: 6, name: 'แนวทางการดำเนินงาน', fullscores: '10', score: '8' },\n//         { name: 'คะแนนรวม', fullscores: '90', score: '77' },\n//     ]);\n\n//     useEffect(() => {\n//         calculateTotalScore();\n//     }, [data]);\n\n//     const [formData, setFormData] = useState({\n//         Er_name:'',\n//         Er_results:'',\n//         Er_com:'',\n//         Er_status:'',\n//         Er_date:'',\n//         Er_time:''\n//     });\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await axios.post('http://localhost:9999/Exam_results', formData);\n//             console.log('Subject added:', response.data);\n//             alert(\"Subject added successfully!\");\n//             setFormData({\n//                 Er_name: '',\n//                 Er_results: '',\n//                 Er_com: '',\n//                 Er_status: '',\n//                 Er_date: '',\n//                 Er_time: ''\n//             });\n//         } catch (error) {\n//             console.error('Error adding subject:', error);\n//             alert(\"Failed to add subject. Please try again later.\");\n//         }\n//     };\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}>\n//                                 <div>\n//                                     <Box fontSize='18px' sx={{ marginTop: 5 }}>\n//                                         <h1>แบบประเมินโครงงานพิเศษ 1 (สอบก้าวหน้า)</h1>\n//                                         <p>เลือกชื่อโครงงาน</p>\n//                                         <FormControl>\n//                                             <InputLabel id=\"ProjectName-select-label\">ชื่อโครงงาน</InputLabel>\n//                                             <Select\n//                                                 labelId=\"ProjectName-select-label\"\n//                                                 value={projectSelect?.P_name || ''}\n//                                                 onChange={handleChange}\n//                                                 margin=\"normal\"\n//                                                 sx={{ minWidth: 150 }}\n//                                             >\n//                                                 {project.map((p) => (\n//                                                     <MenuItem\n//                                                         key={p.P_id}\n//                                                         value={p.P_name}\n//                                                     >\n//                                                         {p.P_name}\n//                                                     </MenuItem>\n//                                                 ))}\n//                                             </Select>\n//                                         </FormControl>\n//                                         <br />\n//                                         <p>โดย</p>\n//                                         <TextField\n//                                             label=\"ชื่อ-สกุลนักศึกษาคนที่ 1\"\n//                                             value={projectSelect?.P_S1 || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 5, ml: 5, width: '25ch' } }}\n//                                         />\n//                                         <TextField\n//                                             label=\"ชื่อ-สกุลนักศึกษาคนที่ 2\"\n//                                             value={projectSelect?.P_S2 || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 5, ml: 5,  width: '25ch' } }}\n//                                         />\n//                                         <p>อาจารย์ที่ปรึกษา</p>\n//                                         <TextField\n//                                             label=\"ชื่ออาจารย์ที่ปรึกษา\"\n//                                             value={projectSelect?.P_T || ''}\n//                                             disabled\n//                                             sx={{ '& > :not(style)': { mr: 5, ml: 5, width: '40ch' } }}\n//                                         />\n//                                     </Box>\n//                                     {projectSelect && (\n//                                         <>\n//                                             <h2>ตารางลงคะแนนสำหรับกรรมการสอบ</h2>\n//                                             <TableContainer component={Paper}>\n//                                                 <Table>\n//                                                     <TableHead>\n//                                                         <TableRow>\n//                                                             <TableCell>ลำดับที่</TableCell>\n//                                                             <TableCell>เกณฑ์พิจารณา</TableCell>\n//                                                             <TableCell>คะแนนเต็ม</TableCell>\n//                                                             <TableCell>คะแนนได้</TableCell>\n//                                                             <TableCell>แก้ไข</TableCell>\n//                                                         </TableRow>\n//                                                     </TableHead>\n//                                                     <TableBody>\n//                                                         {data.map((item) => (\n//                                                             <TableRow key={item.id}>\n//                                                                 <TableCell>{item.id}</TableCell>\n//                                                                 <TableCell>{item.name}</TableCell>\n//                                                                 <TableCell>{item.fullscores}</TableCell>\n//                                                                 <TableCell>\n//                                                                     {editingRowId === item.id ? (\n//                                                                         <TextField\n//                                                                             value={item.score}\n//                                                                             onChange={(e) => handleNameChange(item.id, e.target.value)}\n//                                                                             inputProps={{\n//                                                                                 inputMode: 'numeric',\n//                                                                                 pattern: '[0-9]*'\n//                                                                             }}\n//                                                                         />\n//                                                                     ) : (\n//                                                                         item.score\n//                                                                     )}\n//                                                                 </TableCell>\n//                                                                 <TableCell>\n//                                                                     {editingRowId === item.id ? (\n//                                                                         <Button variant=\"contained\" onClick={handleSaveClick}>\n//                                                                             บันทึก\n//                                                                         </Button>\n//                                                                     ) : (\n//                                                                         <Button variant=\"contained\" onClick={() => handleEditClick(item.id)}>\n//                                                                             แก้ไข\n//                                                                         </Button>\n//                                                                     )}\n//                                                                 </TableCell>\n//                                                             </TableRow>\n//                                                         ))}\n//                                                     </TableBody>\n//                                                 </Table>\n//                                             </TableContainer>\n//                                         </>\n//                                     )}\n//                                     <div>\n//                                         <form onSubmit={handleSubmit}>\n//                                             <Stack direction=\"row\" spacing={2} sx={{ mt: 2 }}>\n//                                                 <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n//                                                     บันทึก\n//                                                 </Button>\n//                                                 <Button variant=\"contained\" color=\"secondary\" onClick={handleCloseDialog}>\n//                                                     ยกเลิก\n//                                                 </Button>\n//                                             </Stack>\n//                                         </form>\n//                                     </div>\n//                                 </div>\n//                             </Grid>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard>\n//     );\n// }\n\n// export default ChairmanScoreCSB02;\n\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}