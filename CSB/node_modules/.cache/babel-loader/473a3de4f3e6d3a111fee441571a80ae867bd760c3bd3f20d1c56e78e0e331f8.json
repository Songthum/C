{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\create-react-app\\\\src\\\\views\\\\dashboard\\\\Default\\\\CSB\\\\ListNameStudentS1.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Typography } from '@mui/material';\n// import { Grid } from '@mui/material';\n// import MainCard from 'ui-component/cards/MainCard';\n// import { gridSpacing } from 'store/constant';\n// import axios from 'axios';\n// import { v4 as uuidv4 } from 'uuid';\n\n// function ListNameStudentS1() {\n//     const listStudentS1 = [\n//         { StudentID: '6304062620022', name: 'สาวสวย บ้านนา', StatusProject: 'กำลังดำเนินการ' },\n//         { StudentID: '6304062620032', name: 'หนุ่มหล่อ ชาวสวน', StatusProject: 'สำเร็จ' },\n//         { StudentID: '6304062620043', name: 'ใจดี ใจงาม', StatusProject: 'ไม่สำเร็จ' },\n//         { StudentID: \"6304062620061\", name: \"ณัชริกา กันทะสอน\", StatusProject: 'กำลังดำเนินการ' },\n//         { StudentID: \"6304062620062\", name: \"ใจดี ยืมเงิน\", StatusProject: 'กำลังดำเนินการ' },\n//         { StudentID: \"6304062620063\", name: \"สบายดี สบายใจ\", StatusProject: 'กำลังดำเนินการ' },\n//         { StudentID: \"6304062620064\", name: \"สุดสวย สุดหล่อ\", StatusProject: 'กำลังดำเนินการ' },\n//         { StudentID: \"6304062620065\", name: \"ไอ่กล้อง ไอ่อ้วน\", StatusProject: 'กำลังดำเนินการ' },\n//         { StudentID: \"6304062620066\", name: \"แมวเหมียว น่ารัก\", StatusProject: 'กำลังดำเนินการ' },\n//         { StudentID: \"6304062620067\", name: \"มะหมา สุดหล่อ\", StatusProject: 'กำลังดำเนินการ' },\n//         { StudentID: \"6304062620068\", name: \"หนูน้อย น่ารัก\", StatusProject: 'กำลังดำเนินการ' },\n//         { StudentID: \"6304062620069\", name: \"สวัสดีครับ ผมนวย\", StatusProject: 'กำลังดำเนินการ' },\n//         { StudentID: \"6304062620070\", name: \"ไม่มี ตังค์ค่า\", StatusProject: 'กำลังดำเนินการ' }\n//     ];\n\n//     useEffect(() => {\n//         const fetchStudent = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:9999/students');\n//                 if (response.data && Array.isArray(response.data)) {\n//                     // กรองข้อมูลซ้ำ\n//                     const uniqueStudents = Array.from(new Map(response.data.map(item => [item.S_id, item])).values());\n//                     setStudentData(uniqueStudents); // เก็บข้อมูลทั้งหมดของนักเรียน\n//                     setStudentNames(uniqueStudents.map(item => ({ S_id: item.S_id, S_name: item.S_name }))); // เก็บเฉพาะ S_id และ S_name\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching Student names:', error);\n//             }\n//         };\n//         fetchStudent();\n//     }, []);\n\n//     const checklistData = listStudentS1.map(item => ({\n//         id: uuidv4(),\n//         ...item\n//     }));\n\n//     const handleButtonClick = (id) => {\n//         console.log(`Button clicked for item with id ${id}`);\n//     };\n\n//     return (\n//         <MainCard>\n//             <Grid container spacing={gridSpacing}>\n//                 <Grid item xs={12}>\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n//                         <Grid item>\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\n//                             <div>\n//                                 <Typography sx={{ marginLeft: 80 }}>\n//                                     <h1>รายชื่อนักศึกษาโครงการพิเศษสองภาษา</h1>\n//                                 </Typography>\n//                                 <TableContainer>\n//                                     <Table>\n//                                         <TableHead>\n//                                             <TableRow>\n//                                                 <TableCell>ลำดับที่</TableCell>\n//                                                 <TableCell>รหัสนักศึกษา</TableCell>\n//                                                 <TableCell>ชื่อ-สกุล</TableCell>\n//                                                 <TableCell>สถานะโครงงาน</TableCell>\n//                                                 <TableCell>รายละเอียดเพิ่มเติม</TableCell>\n//                                             </TableRow>\n//                                         </TableHead>\n//                                         <TableBody>\n//                                             {checklistData.map((item, index) => (\n//                                                 <TableRow key={item.id}>\n//                                                     <TableCell>{index + 1}</TableCell>\n//                                                     <TableCell>{item.StudentID}</TableCell>\n//                                                     <TableCell>{item.name}</TableCell>\n//                                                     <TableCell>{item.StatusProject}</TableCell>\n//                                                     <TableCell>\n//                                                         <Button onClick={() => handleButtonClick(item.id)}>Link</Button>\n//                                                     </TableCell>\n//                                                 </TableRow>\n//                                             ))}\n//                                         </TableBody>\n//                                     </Table>\n//                                 </TableContainer>\n//                             </div>\n//                         </Grid>\n//                     </Grid>\n//                 </Grid>\n//             </Grid>\n//         </MainCard>\n//     );\n// }\n\n// export default ListNameStudentS1;\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Typography } from '@mui/material';\nimport { Grid } from '@mui/material';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListNameStudentS1() {\n  _s();\n  const [studentData, setStudentData] = useState([]);\n  const [studentNames, setStudentNames] = useState([]);\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch data from both endpoints\n        const [studentsResponse, projectsResponse] = await Promise.all([axios.get('http://localhost:9999/students'), axios.get('http://localhost:9999/Project')]);\n        if (studentsResponse.data && Array.isArray(studentsResponse.data)) {\n          const uniqueStudents = Array.from(new Map(studentsResponse.data.map(item => [item.S_id, item])).values());\n          setStudentData(uniqueStudents); // Store all student data\n          setStudentNames(uniqueStudents.map(item => ({\n            S_id: item.S_id,\n            S_name: item.S_name\n          }))); // Store only S_id and S_name\n        }\n        if (projectsResponse.data && Array.isArray(projectsResponse.data)) {\n          setProjects(projectsResponse.data); // Store project data\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Filter students based on P_CSB03 value in projects\n  const filteredStudentData = studentData.filter(student => {\n    const studentInProject = projects.find(project => project.P_S1 === student.S_id || project.P_S2 === student.S_id);\n    return !studentInProject || !studentInProject.P_CSB03;\n  });\n  const checklistData = filteredStudentData.map(item => ({\n    id: uuidv4(),\n    ...item\n  }));\n  const handleButtonClick = id => {\n    console.log(`Button clicked for item with id ${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: gridSpacing,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              spacing: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  marginLeft: 80\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"\\u0E23\\u0E32\\u0E22\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\\u0E42\\u0E04\\u0E23\\u0E07\\u0E01\\u0E32\\u0E23\\u0E1E\\u0E34\\u0E40\\u0E28\\u0E29\\u0E2A\\u0E2D\\u0E07\\u0E20\\u0E32\\u0E29\\u0E32\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E25\\u0E33\\u0E14\\u0E31\\u0E1A\\u0E17\\u0E35\\u0E48\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E19\\u0E31\\u0E01\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E0A\\u0E37\\u0E48\\u0E2D-\\u0E2A\\u0E01\\u0E38\\u0E25\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E2A\\u0E16\\u0E32\\u0E19\\u0E30\\u0E42\\u0E04\\u0E23\\u0E07\\u0E07\\u0E32\\u0E19\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"\\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E40\\u0E15\\u0E34\\u0E21\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 173,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: checklistData.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: index + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: item.StudentID\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: item.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: item.StatusProject\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => handleButtonClick(item.id),\n                          children: \"Link\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 184,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 183,\n                        columnNumber: 53\n                      }, this)]\n                    }, item.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 49\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n_s(ListNameStudentS1, \"YXJ3tO2zF43V6HkElq/FE75IkTg=\");\n_c = ListNameStudentS1;\nexport default ListNameStudentS1;\nvar _c;\n$RefreshReg$(_c, \"ListNameStudentS1\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Typography","Grid","MainCard","gridSpacing","axios","v4","uuidv4","jsxDEV","_jsxDEV","ListNameStudentS1","_s","studentData","setStudentData","studentNames","setStudentNames","projects","setProjects","fetchData","studentsResponse","projectsResponse","Promise","all","get","data","Array","isArray","uniqueStudents","from","Map","map","item","S_id","values","S_name","error","console","filteredStudentData","filter","student","studentInProject","find","project","P_S1","P_S2","P_CSB03","checklistData","id","handleButtonClick","log","children","container","spacing","xs","alignItems","justifyContent","direction","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginLeft","index","StudentID","name","StatusProject","onClick","_c","$RefreshReg$"],"sources":["C:/test/create-react-app/src/views/dashboard/Default/CSB/ListNameStudentS1.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Typography } from '@mui/material';\r\n// import { Grid } from '@mui/material';\r\n// import MainCard from 'ui-component/cards/MainCard';\r\n// import { gridSpacing } from 'store/constant';\r\n// import axios from 'axios';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\n// function ListNameStudentS1() {\r\n//     const listStudentS1 = [\r\n//         { StudentID: '6304062620022', name: 'สาวสวย บ้านนา', StatusProject: 'กำลังดำเนินการ' },\r\n//         { StudentID: '6304062620032', name: 'หนุ่มหล่อ ชาวสวน', StatusProject: 'สำเร็จ' },\r\n//         { StudentID: '6304062620043', name: 'ใจดี ใจงาม', StatusProject: 'ไม่สำเร็จ' },\r\n//         { StudentID: \"6304062620061\", name: \"ณัชริกา กันทะสอน\", StatusProject: 'กำลังดำเนินการ' },\r\n//         { StudentID: \"6304062620062\", name: \"ใจดี ยืมเงิน\", StatusProject: 'กำลังดำเนินการ' },\r\n//         { StudentID: \"6304062620063\", name: \"สบายดี สบายใจ\", StatusProject: 'กำลังดำเนินการ' },\r\n//         { StudentID: \"6304062620064\", name: \"สุดสวย สุดหล่อ\", StatusProject: 'กำลังดำเนินการ' },\r\n//         { StudentID: \"6304062620065\", name: \"ไอ่กล้อง ไอ่อ้วน\", StatusProject: 'กำลังดำเนินการ' },\r\n//         { StudentID: \"6304062620066\", name: \"แมวเหมียว น่ารัก\", StatusProject: 'กำลังดำเนินการ' },\r\n//         { StudentID: \"6304062620067\", name: \"มะหมา สุดหล่อ\", StatusProject: 'กำลังดำเนินการ' },\r\n//         { StudentID: \"6304062620068\", name: \"หนูน้อย น่ารัก\", StatusProject: 'กำลังดำเนินการ' },\r\n//         { StudentID: \"6304062620069\", name: \"สวัสดีครับ ผมนวย\", StatusProject: 'กำลังดำเนินการ' },\r\n//         { StudentID: \"6304062620070\", name: \"ไม่มี ตังค์ค่า\", StatusProject: 'กำลังดำเนินการ' }\r\n//     ];\r\n\r\n//     useEffect(() => {\r\n//         const fetchStudent = async () => {\r\n//             try {\r\n//                 const response = await axios.get('http://localhost:9999/students');\r\n//                 if (response.data && Array.isArray(response.data)) {\r\n//                     // กรองข้อมูลซ้ำ\r\n//                     const uniqueStudents = Array.from(new Map(response.data.map(item => [item.S_id, item])).values());\r\n//                     setStudentData(uniqueStudents); // เก็บข้อมูลทั้งหมดของนักเรียน\r\n//                     setStudentNames(uniqueStudents.map(item => ({ S_id: item.S_id, S_name: item.S_name }))); // เก็บเฉพาะ S_id และ S_name\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error('Error fetching Student names:', error);\r\n//             }\r\n//         };\r\n//         fetchStudent();\r\n//     }, []);\r\n\r\n//     const checklistData = listStudentS1.map(item => ({\r\n//         id: uuidv4(),\r\n//         ...item\r\n//     }));\r\n\r\n//     const handleButtonClick = (id) => {\r\n//         console.log(`Button clicked for item with id ${id}`);\r\n//     };\r\n\r\n//     return (\r\n//         <MainCard>\r\n//             <Grid container spacing={gridSpacing}>\r\n//                 <Grid item xs={12}>\r\n//                     <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n//                         <Grid item>\r\n//                             <Grid container direction=\"column\" spacing={1}></Grid>\r\n//                             <div>\r\n//                                 <Typography sx={{ marginLeft: 80 }}>\r\n//                                     <h1>รายชื่อนักศึกษาโครงการพิเศษสองภาษา</h1>\r\n//                                 </Typography>\r\n//                                 <TableContainer>\r\n//                                     <Table>\r\n//                                         <TableHead>\r\n//                                             <TableRow>\r\n//                                                 <TableCell>ลำดับที่</TableCell>\r\n//                                                 <TableCell>รหัสนักศึกษา</TableCell>\r\n//                                                 <TableCell>ชื่อ-สกุล</TableCell>\r\n//                                                 <TableCell>สถานะโครงงาน</TableCell>\r\n//                                                 <TableCell>รายละเอียดเพิ่มเติม</TableCell>\r\n//                                             </TableRow>\r\n//                                         </TableHead>\r\n//                                         <TableBody>\r\n//                                             {checklistData.map((item, index) => (\r\n//                                                 <TableRow key={item.id}>\r\n//                                                     <TableCell>{index + 1}</TableCell>\r\n//                                                     <TableCell>{item.StudentID}</TableCell>\r\n//                                                     <TableCell>{item.name}</TableCell>\r\n//                                                     <TableCell>{item.StatusProject}</TableCell>\r\n//                                                     <TableCell>\r\n//                                                         <Button onClick={() => handleButtonClick(item.id)}>Link</Button>\r\n//                                                     </TableCell>\r\n//                                                 </TableRow>\r\n//                                             ))}\r\n//                                         </TableBody>\r\n//                                     </Table>\r\n//                                 </TableContainer>\r\n//                             </div>\r\n//                         </Grid>\r\n//                     </Grid>\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </MainCard>\r\n//     );\r\n// }\r\n\r\n// export default ListNameStudentS1;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Typography } from '@mui/material';\r\nimport { Grid } from '@mui/material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction ListNameStudentS1() {\r\n    const [studentData, setStudentData] = useState([]);\r\n    const [studentNames, setStudentNames] = useState([]);\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                // Fetch data from both endpoints\r\n                const [studentsResponse, projectsResponse] = await Promise.all([\r\n                    axios.get('http://localhost:9999/students'),\r\n                    axios.get('http://localhost:9999/Project')\r\n                ]);\r\n\r\n                if (studentsResponse.data && Array.isArray(studentsResponse.data)) {\r\n                    const uniqueStudents = Array.from(new Map(studentsResponse.data.map(item => [item.S_id, item])).values());\r\n                    setStudentData(uniqueStudents); // Store all student data\r\n                    setStudentNames(uniqueStudents.map(item => ({ S_id: item.S_id, S_name: item.S_name }))); // Store only S_id and S_name\r\n                }\r\n\r\n                if (projectsResponse.data && Array.isArray(projectsResponse.data)) {\r\n                    setProjects(projectsResponse.data); // Store project data\r\n                }\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Filter students based on P_CSB03 value in projects\r\n    const filteredStudentData = studentData.filter(student => {\r\n        const studentInProject = projects.find(project => project.P_S1 === student.S_id || project.P_S2 === student.S_id);\r\n        return !studentInProject || !studentInProject.P_CSB03;\r\n    });\r\n\r\n    const checklistData = filteredStudentData.map(item => ({\r\n        id: uuidv4(),\r\n        ...item\r\n    }));\r\n\r\n    const handleButtonClick = (id) => {\r\n        console.log(`Button clicked for item with id ${id}`);\r\n    };\r\n\r\n    return (\r\n        <MainCard>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Grid container direction=\"column\" spacing={1}></Grid>\r\n                            <div>\r\n                                <Typography sx={{ marginLeft: 80 }}>\r\n                                    <h1>รายชื่อนักศึกษาโครงการพิเศษสองภาษา</h1>\r\n                                </Typography>\r\n                                <TableContainer>\r\n                                    <Table>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>ลำดับที่</TableCell>\r\n                                                <TableCell>รหัสนักศึกษา</TableCell>\r\n                                                <TableCell>ชื่อ-สกุล</TableCell>\r\n                                                <TableCell>สถานะโครงงาน</TableCell>\r\n                                                <TableCell>รายละเอียดเพิ่มเติม</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {checklistData.map((item, index) => (\r\n                                                <TableRow key={item.id}>\r\n                                                    <TableCell>{index + 1}</TableCell>\r\n                                                    <TableCell>{item.StudentID}</TableCell>\r\n                                                    <TableCell>{item.name}</TableCell>\r\n                                                    <TableCell>{item.StatusProject}</TableCell>\r\n                                                    <TableCell>\r\n                                                        <Button onClick={() => handleButtonClick(item.id)}>Link</Button>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n}\r\n\r\nexport default ListNameStudentS1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}