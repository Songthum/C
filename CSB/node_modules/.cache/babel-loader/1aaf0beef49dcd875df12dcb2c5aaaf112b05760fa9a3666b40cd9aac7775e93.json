{"ast":null,"code":"const handleConfirmReject = () => {\n  console.log('Selected project for rejection:', selectedProject); // Log selectedProject\n  if (selectedProject && selectedProject.ID) {\n    console.log(`Reject advisor for project ID: ${selectedProject.ID}`);\n    fetch(`http://localhost:9999/Project/${selectedProject.ID}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        P_T: ''\n      }) // Clear P_T field\n    }).then(response => {\n      if (!response.ok) {\n        return response.text().then(text => {\n          throw new Error(text);\n        });\n      }\n      return response.json();\n    }).then(() => {\n      setTableData(prevData => prevData.filter(project => project.ID !== selectedProject.ID));\n      handleCloseRejectDialog();\n    }).catch(error => {\n      console.error('Error updating project P_T:', error);\n    });\n  } else {\n    console.error('Selected project or project ID is missing');\n  }\n};","map":{"version":3,"names":["handleConfirmReject","console","log","selectedProject","ID","fetch","method","headers","body","JSON","stringify","P_T","then","response","ok","text","Error","json","setTableData","prevData","filter","project","handleCloseRejectDialog","catch","error"],"sources":["C:/test/create-react-app/src/views/utilities/RequestAdvisor.js"],"sourcesContent":["const handleConfirmReject = () => {\n    console.log('Selected project for rejection:', selectedProject); // Log selectedProject\n    if (selectedProject && selectedProject.ID) {\n        console.log(`Reject advisor for project ID: ${selectedProject.ID}`);\n        \n        fetch(`http://localhost:9999/Project/${selectedProject.ID}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ P_T: '' }), // Clear P_T field\n        })\n        .then(response => {\n            if (!response.ok) {\n                return response.text().then(text => { throw new Error(text); });\n            }\n            return response.json();\n        })\n        .then(() => {\n            setTableData(prevData => prevData.filter(project => project.ID !== selectedProject.ID));\n            handleCloseRejectDialog();\n        })\n        .catch(error => {\n            console.error('Error updating project P_T:', error);\n        });\n    } else {\n        console.error('Selected project or project ID is missing');\n    }\n};\n"],"mappings":"AAAA,MAAMA,mBAAmB,GAAGA,CAAA,KAAM;EAC9BC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEC,eAAe,CAAC,CAAC,CAAC;EACjE,IAAIA,eAAe,IAAIA,eAAe,CAACC,EAAE,EAAE;IACvCH,OAAO,CAACC,GAAG,CAAE,kCAAiCC,eAAe,CAACC,EAAG,EAAC,CAAC;IAEnEC,KAAK,CAAE,iCAAgCF,eAAe,CAACC,EAAG,EAAC,EAAE;MACzDE,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,GAAG,EAAE;MAAG,CAAC,CAAC,CAAE;IACvC,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAACG,IAAI,IAAI;UAAE,MAAM,IAAIC,KAAK,CAACD,IAAI,CAAC;QAAE,CAAC,CAAC;MACnE;MACA,OAAOF,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAAC,MAAM;MACRM,YAAY,CAACC,QAAQ,IAAIA,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACjB,EAAE,KAAKD,eAAe,CAACC,EAAE,CAAC,CAAC;MACvFkB,uBAAuB,CAAC,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZvB,OAAO,CAACuB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACN,CAAC,MAAM;IACHvB,OAAO,CAACuB,KAAK,CAAC,2CAA2C,CAAC;EAC9D;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}